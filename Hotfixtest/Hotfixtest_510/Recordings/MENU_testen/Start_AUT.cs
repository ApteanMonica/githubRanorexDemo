///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace Hotfixtest_510.Recordings.MENU_testen
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Start_AUT recording.
    /// </summary>
    [TestModule("4cda9089-4c2f-4cd7-84e6-870af23f89c9", ModuleType.Recording, 1)]
    public partial class Start_AUT : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::Hotfixtest_510.Hotfixtest_510Repository repository.
        /// </summary>
        public static global::Hotfixtest_510.Hotfixtest_510Repository repo = global::Hotfixtest_510.Hotfixtest_510Repository.Instance;

        static Start_AUT instance = new Start_AUT();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Start_AUT()
        {
            Startfile = "C:\\Testdaten\\Allgemein\\Start.bat";
            Programm = "MENU";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Start_AUT Instance
        {
            get { return instance; }
        }

#region Variables

        string _Startfile;

        /// <summary>
        /// Gets or sets the value of variable Startfile.
        /// </summary>
        [TestVariable("76215538-7c67-47bf-bfad-ed827b563bfe")]
        public string Startfile
        {
            get { return _Startfile; }
            set { _Startfile = value; }
        }

        string _Programm;

        /// <summary>
        /// Gets or sets the value of variable Programm.
        /// </summary>
        [TestVariable("0345f2e3-071c-4367-b15d-75f53dd4f8ef")]
        public string Programm
        {
            get { return _Programm; }
            set { _Programm = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Application", "Run application with file name from variable $Startfile with arguments from variable $Programm in normal mode.", new RecordItemIndex(0));
            Host.Local.RunApplication(Startfile, Programm, "", false);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 4m to exist. Associated repository item: 'FormWorkplace.TitleBar100RSREFDBRs2Ver'", repo.FormWorkplace.TitleBar100RSREFDBRs2VerInfo, new ActionTimeout(240000), new RecordItemIndex(1));
            repo.FormWorkplace.TitleBar100RSREFDBRs2VerInfo.WaitForExists(240000);
            
            try {
                Report.Log(ReportLevel.Info, "Mouse", "(Optional Action)\r\nMouse Left Click item 'DlgRs2ReleaseInfo.Schliessen' at Center.", repo.DlgRs2ReleaseInfo.SchliessenInfo, new RecordItemIndex(2));
                repo.DlgRs2ReleaseInfo.Schliessen.Click();
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(2)); }
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeRegex (Text~'') on item 'FormWorkplace.TitleBar100RSREFDBRs2Ver'.", repo.FormWorkplace.TitleBar100RSREFDBRs2VerInfo, new RecordItemIndex(3));
            Validate.AttributeRegex(repo.FormWorkplace.TitleBar100RSREFDBRs2VerInfo, "Text", new Regex(""));
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
