///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace Hotfixtest_510.Recordings.B_BUCH
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The B_BUCH recording.
    /// </summary>
    [TestModule("2d730df5-ec39-44af-af03-ee87c2280a5a", ModuleType.Recording, 1)]
    public partial class B_BUCH : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::Hotfixtest_510.Hotfixtest_510Repository repository.
        /// </summary>
        public static global::Hotfixtest_510.Hotfixtest_510Repository repo = global::Hotfixtest_510.Hotfixtest_510Repository.Instance;

        static B_BUCH instance = new B_BUCH();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public B_BUCH()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static B_BUCH Instance
        {
            get { return instance; }
        }

#region Variables

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Set value", "Setting attribute Text to '2020' on item 'DlgFirmaPeriode.Jahr'.", repo.DlgFirmaPeriode.JahrInfo, new RecordItemIndex(0));
            repo.DlgFirmaPeriode.Jahr.Element.SetAttributeValue("Text", "2020");
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute Text to '01' on item 'DlgFirmaPeriode.Monat'.", repo.DlgFirmaPeriode.MonatInfo, new RecordItemIndex(1));
            repo.DlgFirmaPeriode.Monat.Element.SetAttributeValue("Text", "01");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'DlgFirmaPeriode.PbOK' at Center.", repo.DlgFirmaPeriode.PbOKInfo, new RecordItemIndex(2));
            repo.DlgFirmaPeriode.PbOK.Click();
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left DoubleClick item 'DlgListBox.CellTmpColS1Row1' at Center.", repo.DlgListBox.CellTmpColS1Row1Info, new RecordItemIndex(3));
            repo.DlgListBox.CellTmpColS1Row1.DoubleClick();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '200001' with focus on 'MdiBuch.FrmRG.Konto'.", repo.MdiBuch.FrmRG.KontoInfo, new RecordItemIndex(4));
            repo.MdiBuch.FrmRG.Konto.PressKeys("200001");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '12345' with focus on 'MdiBuch.FrmRG.Beleg'.", repo.MdiBuch.FrmRG.BelegInfo, new RecordItemIndex(5));
            repo.MdiBuch.FrmRG.Beleg.PressKeys("12345");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '15.01.2020' with focus on 'MdiBuch.FrmRG.Datum'.", repo.MdiBuch.FrmRG.DatumInfo, new RecordItemIndex(6));
            repo.MdiBuch.FrmRG.Datum.PressKeys("15.01.2020");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '120' with focus on 'MdiBuch.FrmRG.Basiswaehrung'.", repo.MdiBuch.FrmRG.BasiswaehrungInfo, new RecordItemIndex(7));
            repo.MdiBuch.FrmRG.Basiswaehrung.PressKeys("120");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'TEST' with focus on 'MdiBuch.FrmRG.Text'.", repo.MdiBuch.FrmRG.TextInfo, new RecordItemIndex(8));
            repo.MdiBuch.FrmRG.Text.PressKeys("TEST");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'MdiBuch.PbStandard2' at Center.", repo.MdiBuch.PbStandard2Info, new RecordItemIndex(9));
            repo.MdiBuch.PbStandard2.Click();
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='200001') on item 'MdiBuch.DfAdrNrU'.", repo.MdiBuch.DfAdrNrUInfo, new RecordItemIndex(10));
            Validate.AttributeEqual(repo.MdiBuch.DfAdrNrUInfo, "Text", "200001");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='12345') on item 'MdiBuch.Beleg1'.", repo.MdiBuch.Beleg1Info, new RecordItemIndex(11));
            Validate.AttributeEqual(repo.MdiBuch.Beleg1Info, "Text", "12345");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='15.01.2020') on item 'MdiBuch.Datum1'.", repo.MdiBuch.Datum1Info, new RecordItemIndex(12));
            Validate.AttributeEqual(repo.MdiBuch.Datum1Info, "Text", "15.01.2020");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='120,00') on item 'MdiBuch.Text1'.", repo.MdiBuch.Text1Info, new RecordItemIndex(13));
            Validate.AttributeEqual(repo.MdiBuch.Text1Info, "Text", "120,00");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '4000' with focus on 'MdiBuch.Konto'.", repo.MdiBuch.KontoInfo, new RecordItemIndex(14));
            repo.MdiBuch.Konto.PressKeys("4000");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '50' with focus on 'MdiBuch.Bereiche'.", repo.MdiBuch.BereicheInfo, new RecordItemIndex(15));
            repo.MdiBuch.Bereiche.PressKeys("50");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'MdiBuch.PbStandard2' at Center.", repo.MdiBuch.PbStandard2Info, new RecordItemIndex(16));
            repo.MdiBuch.PbStandard2.Click();
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeRegex (Text~'Buchung  OK ?') on item 'DlgMessageBox.LabelMeldungstext'.", repo.DlgMessageBox.LabelMeldungstextInfo, new RecordItemIndex(17));
            Validate.AttributeRegex(repo.DlgMessageBox.LabelMeldungstextInfo, "Text", new Regex("Buchung  OK ?"));
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'DlgMessageBox.Button0' at Center.", repo.DlgMessageBox.Button0Info, new RecordItemIndex(18));
            repo.DlgMessageBox.Button0.Click();
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
