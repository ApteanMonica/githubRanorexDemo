///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace Servicecenter.Recordings.RS2
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The TicketkontrolleED recording.
    /// </summary>
    [TestModule("6f970cc4-006b-4cfe-8dc9-b938fffcf105", ModuleType.Recording, 1)]
    public partial class TicketkontrolleED : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::Servicecenter.ServicecenterRepository repository.
        /// </summary>
        public static global::Servicecenter.ServicecenterRepository repo = global::Servicecenter.ServicecenterRepository.Instance;

        static TicketkontrolleED instance = new TicketkontrolleED();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public TicketkontrolleED()
        {
            SupBereich = "";
            Programm = "";
            SupVersion = "";
            Titel = "";
            Text = "";
            Datei = "";
            EDTicket = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static TicketkontrolleED Instance
        {
            get { return instance; }
        }

#region Variables

        string _SupBereich;

        /// <summary>
        /// Gets or sets the value of variable SupBereich.
        /// </summary>
        [TestVariable("1882519c-9fd3-4a0a-b3cd-53de582f4494")]
        public string SupBereich
        {
            get { return _SupBereich; }
            set { _SupBereich = value; }
        }

        string _Programm;

        /// <summary>
        /// Gets or sets the value of variable Programm.
        /// </summary>
        [TestVariable("912a72fb-8f62-46b5-b3e6-78a92d3d34d7")]
        public string Programm
        {
            get { return _Programm; }
            set { _Programm = value; }
        }

        string _Titel;

        /// <summary>
        /// Gets or sets the value of variable Titel.
        /// </summary>
        [TestVariable("1ac354ab-34a8-4591-8271-a0d90c12c2c0")]
        public string Titel
        {
            get { return _Titel; }
            set { _Titel = value; }
        }

        string _Text;

        /// <summary>
        /// Gets or sets the value of variable Text.
        /// </summary>
        [TestVariable("71fc3df8-bd22-4b1f-9dc4-8117e2d410c2")]
        public string Text
        {
            get { return _Text; }
            set { _Text = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable SupVersion.
        /// </summary>
        [TestVariable("ebc298e3-1cbf-4d8e-86f3-defddd98862e")]
        public string SupVersion
        {
            get { return repo.SupVersion; }
            set { repo.SupVersion = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable Datei.
        /// </summary>
        [TestVariable("8bf43fed-39cf-489d-b958-70c7c95c8e8c")]
        public string Datei
        {
            get { return repo.Datei; }
            set { repo.Datei = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable EDTicket.
        /// </summary>
        [TestVariable("7d3e9c16-0cb3-44d6-8b23-c0844679fae5")]
        public string EDTicket
        {
            get { return repo.EDTicket; }
            set { repo.EDTicket = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Y_SUP03.RS2_ButtonNEU' at Center.", repo.Y_SUP03.RS2_ButtonNEUInfo, new RecordItemIndex(0));
            repo.Y_SUP03.RS2_ButtonNEU.Click();
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Windows.Button0' at Center.", repo.Windows.Button0Info, new RecordItemIndex(1));
            repo.Windows.Button0.Click();
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Y_SUP03.RS2_Ticket' at Center.", repo.Y_SUP03.RS2_TicketInfo, new RecordItemIndex(2));
            repo.Y_SUP03.RS2_Ticket.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$EDTicket' with focus on 'Y_SUP03.RS2_Ticket'.", repo.Y_SUP03.RS2_TicketInfo, new RecordItemIndex(3));
            repo.Y_SUP03.RS2_Ticket.PressKeys(EDTicket);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Tab' Press with focus on 'Y_SUP03.RS2_Ticket'.", repo.Y_SUP03.RS2_TicketInfo, new RecordItemIndex(4));
            Keyboard.PrepareFocus(repo.Y_SUP03.RS2_Ticket);
            Keyboard.Press(System.Windows.Forms.Keys.Tab, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$SupBereich) on item 'Y_SUP03.RS2_Bereich'.", repo.Y_SUP03.RS2_BereichInfo, new RecordItemIndex(5));
            Validate.AttributeEqual(repo.Y_SUP03.RS2_BereichInfo, "Text", SupBereich);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Programm) on item 'Y_SUP03.RS2_Programm'.", repo.Y_SUP03.RS2_ProgrammInfo, new RecordItemIndex(6));
            Validate.AttributeEqual(repo.Y_SUP03.RS2_ProgrammInfo, "Text", Programm);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$SupVersion) on item 'Y_SUP03.RS2_Version'.", repo.Y_SUP03.RS2_VersionInfo, new RecordItemIndex(7));
            Validate.AttributeEqual(repo.Y_SUP03.RS2_VersionInfo, "Text", SupVersion);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$SupVersion) on item 'Windows.CntSplitter.RSProgVers'.", repo.Windows.CntSplitter.RSProgVersInfo, new RecordItemIndex(8));
            Validate.AttributeEqual(repo.Windows.CntSplitter.RSProgVersInfo, "Text", SupVersion);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Titel) on item 'Y_SUP03.RS2_Titel'.", repo.Y_SUP03.RS2_TitelInfo, new RecordItemIndex(9));
            Validate.AttributeEqual(repo.Y_SUP03.RS2_TitelInfo, "Text", Titel);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Text) on item 'Y_SUP03.RS2_Text'.", repo.Y_SUP03.RS2_TextInfo, new RecordItemIndex(10));
            Validate.AttributeEqual(repo.Y_SUP03.RS2_TextInfo, "Text", Text);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Datei) on item 'Windows.CntSplitter.RSDateianhang'.", repo.Windows.CntSplitter.RSDateianhangInfo, new RecordItemIndex(11));
            Validate.AttributeEqual(repo.Windows.CntSplitter.RSDateianhangInfo, "Text", Datei);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
