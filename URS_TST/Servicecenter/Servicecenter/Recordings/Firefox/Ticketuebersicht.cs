///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace Servicecenter.Recordings.Firefox
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Ticketuebersicht recording.
    /// </summary>
    [TestModule("eb45a18b-b6ce-4883-bb49-928bd75d6026", ModuleType.Recording, 1)]
    public partial class FFTicketuebersicht : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::Servicecenter.ServicecenterRepository repository.
        /// </summary>
        public static global::Servicecenter.ServicecenterRepository repo = global::Servicecenter.ServicecenterRepository.Instance;

        static FFTicketuebersicht instance = new FFTicketuebersicht();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public FFTicketuebersicht()
        {
            Datum = "";
            FFTicket = "";
            Titel = "";
            Text = "";
            Datei = "";
            Programm = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static FFTicketuebersicht Instance
        {
            get { return instance; }
        }

#region Variables

        string _Datum;

        /// <summary>
        /// Gets or sets the value of variable Datum.
        /// </summary>
        [TestVariable("56a95c31-155b-4cb8-8092-d74b2931dca7")]
        public string Datum
        {
            get { return _Datum; }
            set { _Datum = value; }
        }

        string _FFTicket;

        /// <summary>
        /// Gets or sets the value of variable FFTicket.
        /// </summary>
        [TestVariable("94c980a0-71ea-48c2-a47e-ed30fc5d830e")]
        public string FFTicket
        {
            get { return _FFTicket; }
            set { _FFTicket = value; }
        }

        string _Titel;

        /// <summary>
        /// Gets or sets the value of variable Titel.
        /// </summary>
        [TestVariable("94efa43f-c1e1-44ba-9328-fc495fd18855")]
        public string Titel
        {
            get { return _Titel; }
            set { _Titel = value; }
        }

        string _Text;

        /// <summary>
        /// Gets or sets the value of variable Text.
        /// </summary>
        [TestVariable("be4f91e1-b87c-4fd4-8f73-ec5917e046c7")]
        public string Text
        {
            get { return _Text; }
            set { _Text = value; }
        }

        string _Programm;

        /// <summary>
        /// Gets or sets the value of variable Programm.
        /// </summary>
        [TestVariable("bd21e350-4916-45bd-8f98-9978a0a46562")]
        public string Programm
        {
            get { return _Programm; }
            set { _Programm = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable Datei.
        /// </summary>
        [TestVariable("b7b159bb-301a-4741-9a80-4cecdd2bd5c4")]
        public string Datei
        {
            get { return repo.Datei; }
            set { repo.Datei = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText='Service Center: Tickets') on item 'Servicecenter.Download_TicketUebersicht.Downloads.U_Tickets'.", repo.Servicecenter.Download_TicketUebersicht.Downloads.U_TicketsInfo, new RecordItemIndex(0));
            Validate.AttributeEqual(repo.Servicecenter.Download_TicketUebersicht.Downloads.U_TicketsInfo, "InnerText", "Service Center: Tickets");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText=$Datum) on item 'Servicecenter.U_Datum'.", repo.Servicecenter.U_DatumInfo, new RecordItemIndex(1));
            Validate.AttributeEqual(repo.Servicecenter.U_DatumInfo, "InnerText", Datum);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText=$Programm) on item 'Servicecenter.U_Programm'.", repo.Servicecenter.U_ProgrammInfo, new RecordItemIndex(2));
            Validate.AttributeEqual(repo.Servicecenter.U_ProgrammInfo, "InnerText", Programm);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'InnerText' from item 'Servicecenter.U_Ticket' and assigning its value to variable 'FFTicket'.", repo.Servicecenter.U_TicketInfo, new RecordItemIndex(3));
            FFTicket = repo.Servicecenter.U_Ticket.Element.GetAttributeValueText("InnerText");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Servicecenter.U_Ticket' at Center.", repo.Servicecenter.U_TicketInfo, new RecordItemIndex(4));
            repo.Servicecenter.U_Ticket.Click();
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText=$Titel) on item 'Servicecenter.Download_TicketUebersicht.Downloads.U_Titel'.", repo.Servicecenter.Download_TicketUebersicht.Downloads.U_TitelInfo, new RecordItemIndex(5));
            Validate.AttributeEqual(repo.Servicecenter.Download_TicketUebersicht.Downloads.U_TitelInfo, "InnerText", Titel);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText=$Text) on item 'Servicecenter.Download_TicketUebersicht.Downloads.U_Text'.", repo.Servicecenter.Download_TicketUebersicht.Downloads.U_TextInfo, new RecordItemIndex(6));
            Validate.AttributeEqual(repo.Servicecenter.Download_TicketUebersicht.Downloads.U_TextInfo, "InnerText", Text);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText=$Datei) on item 'Servicecenter.Download_TicketUebersicht.Downloads.U_Datei'.", repo.Servicecenter.Download_TicketUebersicht.Downloads.U_DateiInfo, new RecordItemIndex(7));
            Validate.AttributeEqual(repo.Servicecenter.Download_TicketUebersicht.Downloads.U_DateiInfo, "InnerText", Datei);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Servicecenter.Download_TicketUebersicht.Downloads.U_Zurueck' at Center.", repo.Servicecenter.Download_TicketUebersicht.Downloads.U_ZurueckInfo, new RecordItemIndex(8));
            repo.Servicecenter.Download_TicketUebersicht.Downloads.U_Zurueck.Click();
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Servicecenter.U_Suche' at Center.", repo.Servicecenter.U_SucheInfo, new RecordItemIndex(9));
            repo.Servicecenter.U_Suche.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$FFTicket' with focus on 'Servicecenter.U_Suche'.", repo.Servicecenter.U_SucheInfo, new RecordItemIndex(10));
            repo.Servicecenter.U_Suche.PressKeys(FFTicket);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Enter' Press with focus on 'Servicecenter.U_Suche'.", repo.Servicecenter.U_SucheInfo, new RecordItemIndex(11));
            Keyboard.PrepareFocus(repo.Servicecenter.U_Suche);
            Keyboard.Press(System.Windows.Forms.Keys.Return, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 500ms.", new RecordItemIndex(12));
            Delay.Duration(500, false);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Value=$FFTicket) on item 'Servicecenter.U_Suche'.", repo.Servicecenter.U_SucheInfo, new RecordItemIndex(13));
            Validate.AttributeEqual(repo.Servicecenter.U_SucheInfo, "Value", FFTicket);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText=$FFTicket) on item 'Servicecenter.U_Ticket'.", repo.Servicecenter.U_TicketInfo, new RecordItemIndex(14));
            Validate.AttributeEqual(repo.Servicecenter.U_TicketInfo, "InnerText", FFTicket);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText=$Programm) on item 'Servicecenter.U_Programm'.", repo.Servicecenter.U_ProgrammInfo, new RecordItemIndex(15));
            Validate.AttributeEqual(repo.Servicecenter.U_ProgrammInfo, "InnerText", Programm);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText=$Datum) on item 'Servicecenter.U_Datum'.", repo.Servicecenter.U_DatumInfo, new RecordItemIndex(16));
            Validate.AttributeEqual(repo.Servicecenter.U_DatumInfo, "InnerText", Datum);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
