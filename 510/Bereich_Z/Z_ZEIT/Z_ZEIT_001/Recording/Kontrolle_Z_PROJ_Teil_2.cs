///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace Z_ZEIT_001.Recording
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Kontrolle_Z_PROJ_Teil_2 recording.
    /// </summary>
    [TestModule("45d6198e-a4f7-4b8d-8f4b-2a409337b09c", ModuleType.Recording, 1)]
    public partial class Kontrolle_Z_PROJ_Teil_2 : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::Z_ZEIT_001.Z_ZEIT_001Repository repository.
        /// </summary>
        public static global::Z_ZEIT_001.Z_ZEIT_001Repository repo = global::Z_ZEIT_001.Z_ZEIT_001Repository.Instance;

        static Kontrolle_Z_PROJ_Teil_2 instance = new Kontrolle_Z_PROJ_Teil_2();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Kontrolle_Z_PROJ_Teil_2()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Kontrolle_Z_PROJ_Teil_2 Instance
        {
            get { return instance; }
        }

#region Variables

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='200') on item 'FrmTabProjekt.Tabelle.Zeile_6.ColPhasCdRow6'.", repo.FrmTabProjekt.Tabelle.Zeile_6.ColPhasCdRow6Info, new RecordItemIndex(0));
            Validate.AttributeEqual(repo.FrmTabProjekt.Tabelle.Zeile_6.ColPhasCdRow6Info, "Text", "200");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='0,00') on item 'FrmTabProjekt.Tabelle.Zeile_6.ColPhasIstStdRow6'.", repo.FrmTabProjekt.Tabelle.Zeile_6.ColPhasIstStdRow6Info, new RecordItemIndex(1));
            Validate.AttributeEqual(repo.FrmTabProjekt.Tabelle.Zeile_6.ColPhasIstStdRow6Info, "Text", "0,00");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='2,00') on item 'FrmTabProjekt.Tabelle.Zeile_6.ColPhasIstStdSumRow6'.", repo.FrmTabProjekt.Tabelle.Zeile_6.ColPhasIstStdSumRow6Info, new RecordItemIndex(2));
            Validate.AttributeEqual(repo.FrmTabProjekt.Tabelle.Zeile_6.ColPhasIstStdSumRow6Info, "Text", "2,00");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='201') on item 'FrmTabProjekt.Tabelle.Zeile_7.ColPhasCdRow7'.", repo.FrmTabProjekt.Tabelle.Zeile_7.ColPhasCdRow7Info, new RecordItemIndex(3));
            Validate.AttributeEqual(repo.FrmTabProjekt.Tabelle.Zeile_7.ColPhasCdRow7Info, "Text", "201");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='0,00') on item 'FrmTabProjekt.Tabelle.Zeile_7.ColPhasIstStdRow7'.", repo.FrmTabProjekt.Tabelle.Zeile_7.ColPhasIstStdRow7Info, new RecordItemIndex(4));
            Validate.AttributeEqual(repo.FrmTabProjekt.Tabelle.Zeile_7.ColPhasIstStdRow7Info, "Text", "0,00");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='0,00') on item 'FrmTabProjekt.Tabelle.Zeile_7.ColPhasIstStdSumRow7'.", repo.FrmTabProjekt.Tabelle.Zeile_7.ColPhasIstStdSumRow7Info, new RecordItemIndex(5));
            Validate.AttributeEqual(repo.FrmTabProjekt.Tabelle.Zeile_7.ColPhasIstStdSumRow7Info, "Text", "0,00");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='202') on item 'FrmTabProjekt.Tabelle.Zeile_8.ColPhasCdRow8'.", repo.FrmTabProjekt.Tabelle.Zeile_8.ColPhasCdRow8Info, new RecordItemIndex(6));
            Validate.AttributeEqual(repo.FrmTabProjekt.Tabelle.Zeile_8.ColPhasCdRow8Info, "Text", "202");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='2,00') on item 'FrmTabProjekt.Tabelle.Zeile_8.ColPhasIstStdRow8'.", repo.FrmTabProjekt.Tabelle.Zeile_8.ColPhasIstStdRow8Info, new RecordItemIndex(7));
            Validate.AttributeEqual(repo.FrmTabProjekt.Tabelle.Zeile_8.ColPhasIstStdRow8Info, "Text", "2,00");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='2,00') on item 'FrmTabProjekt.Tabelle.Zeile_8.ColPhasIstStdSumRow8'.", repo.FrmTabProjekt.Tabelle.Zeile_8.ColPhasIstStdSumRow8Info, new RecordItemIndex(8));
            Validate.AttributeEqual(repo.FrmTabProjekt.Tabelle.Zeile_8.ColPhasIstStdSumRow8Info, "Text", "2,00");
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
