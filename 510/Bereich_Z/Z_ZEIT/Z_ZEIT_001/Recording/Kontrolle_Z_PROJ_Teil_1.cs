///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace Z_ZEIT_001.Recording
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Kontrolle_Z_PROJ_Teil_1 recording.
    /// </summary>
    [TestModule("8c34f83e-a55e-4c99-b966-b79060aa0466", ModuleType.Recording, 1)]
    public partial class Kontrolle_Z_PROJ_Teil_1 : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::Z_ZEIT_001.Z_ZEIT_001Repository repository.
        /// </summary>
        public static global::Z_ZEIT_001.Z_ZEIT_001Repository repo = global::Z_ZEIT_001.Z_ZEIT_001Repository.Instance;

        static Kontrolle_Z_PROJ_Teil_1 instance = new Kontrolle_Z_PROJ_Teil_1();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Kontrolle_Z_PROJ_Teil_1()
        {
            Projekt = "ZEIT_001";
            Phase_Reise_buchen = "1011";
            Phase_Planung_Meeting = "101";
            Phase_Planung = "100";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Kontrolle_Z_PROJ_Teil_1 Instance
        {
            get { return instance; }
        }

#region Variables

        /// <summary>
        /// Gets or sets the value of variable Projekt.
        /// </summary>
        [TestVariable("28b6bcde-b494-45d1-aa1b-efefe03f40d7")]
        public string Projekt
        {
            get { return repo.Projekt; }
            set { repo.Projekt = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable Phase_Reise_buchen.
        /// </summary>
        [TestVariable("f0a160b4-ba8d-4ea1-b133-4049b4e7b2e3")]
        public string Phase_Reise_buchen
        {
            get { return repo.Phase_Reise_buchen; }
            set { repo.Phase_Reise_buchen = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable Phase_Planung_Meeting.
        /// </summary>
        [TestVariable("4d406965-3ec3-4bdc-a3e9-bb717c8302d4")]
        public string Phase_Planung_Meeting
        {
            get { return repo.Phase_Planung_Meeting; }
            set { repo.Phase_Planung_Meeting = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable Phase_Planung.
        /// </summary>
        [TestVariable("7b96c321-5d70-46e5-afbb-7bc73878dcac")]
        public string Phase_Planung
        {
            get { return repo.Phase_Planung; }
            set { repo.Phase_Planung = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left DoubleClick item 'FrmTabProjekt.Row_mit_Variable_Projektnr' at Center.", repo.FrmTabProjekt.Row_mit_Variable_ProjektnrInfo, new RecordItemIndex(0));
            repo.FrmTabProjekt.Row_mit_Variable_Projektnr.DoubleClick();
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 2m to exist. Associated repository item: 'FrmTabProjekt.TitleBar100ProjektVerwalten'", repo.FrmTabProjekt.TitleBar100ProjektVerwaltenInfo, new ActionTimeout(120000), new RecordItemIndex(1));
            repo.FrmTabProjekt.TitleBar100ProjektVerwaltenInfo.WaitForExists(120000);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (Text>'Projekt verwalten') on item 'FrmTabProjekt.TitleBar100ProjektVerwalten'.", repo.FrmTabProjekt.TitleBar100ProjektVerwaltenInfo, new RecordItemIndex(2));
            Validate.AttributeContains(repo.FrmTabProjekt.TitleBar100ProjektVerwaltenInfo, "Text", "Projekt verwalten");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (Text>$Projekt) on item 'FrmTabProjekt.DfProjNr'.", repo.FrmTabProjekt.DfProjNrInfo, new RecordItemIndex(3));
            Validate.AttributeContains(repo.FrmTabProjekt.DfProjNrInfo, "Text", Projekt);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmTabProjekt.TabPagePhasen' at Center.", repo.FrmTabProjekt.TabPagePhasenInfo, new RecordItemIndex(4));
            repo.FrmTabProjekt.TabPagePhasen.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{RWin down}{Up}{RWin up}'.", new RecordItemIndex(5));
            Keyboard.Press("{RWin down}{Up}{RWin up}");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Middle Click item 'FrmTabProjekt.PageRight' at Center.", repo.FrmTabProjekt.PageRightInfo, new RecordItemIndex(6));
            repo.FrmTabProjekt.PageRight.Click(System.Windows.Forms.MouseButtons.Middle);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='10') on item 'FrmTabProjekt.Tabelle.Zeile_1.ColPhasCdRow1'.", repo.FrmTabProjekt.Tabelle.Zeile_1.ColPhasCdRow1Info, new RecordItemIndex(7));
            Validate.AttributeEqual(repo.FrmTabProjekt.Tabelle.Zeile_1.ColPhasCdRow1Info, "Text", "10");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='0,00') on item 'FrmTabProjekt.Tabelle.Zeile_1.ColPhasIstStdRow1'.", repo.FrmTabProjekt.Tabelle.Zeile_1.ColPhasIstStdRow1Info, new RecordItemIndex(8));
            Validate.AttributeEqual(repo.FrmTabProjekt.Tabelle.Zeile_1.ColPhasIstStdRow1Info, "Text", "0,00");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='3,00') on item 'FrmTabProjekt.Tabelle.Zeile_1.ColPhasIstStdSumRow1'.", repo.FrmTabProjekt.Tabelle.Zeile_1.ColPhasIstStdSumRow1Info, new RecordItemIndex(9));
            Validate.AttributeEqual(repo.FrmTabProjekt.Tabelle.Zeile_1.ColPhasIstStdSumRow1Info, "Text", "3,00");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='100') on item 'FrmTabProjekt.Tabelle.Zeile_2.ColPhasCdRow2'.", repo.FrmTabProjekt.Tabelle.Zeile_2.ColPhasCdRow2Info, new RecordItemIndex(10));
            Validate.AttributeEqual(repo.FrmTabProjekt.Tabelle.Zeile_2.ColPhasCdRow2Info, "Text", "100");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='0,00') on item 'FrmTabProjekt.Tabelle.Zeile_2.ColPhasIstStdRow2'.", repo.FrmTabProjekt.Tabelle.Zeile_2.ColPhasIstStdRow2Info, new RecordItemIndex(11));
            Validate.AttributeEqual(repo.FrmTabProjekt.Tabelle.Zeile_2.ColPhasIstStdRow2Info, "Text", "0,00");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='1,00') on item 'FrmTabProjekt.Tabelle.Zeile_2.ColPhasIstStdSumRow2'.", repo.FrmTabProjekt.Tabelle.Zeile_2.ColPhasIstStdSumRow2Info, new RecordItemIndex(12));
            Validate.AttributeEqual(repo.FrmTabProjekt.Tabelle.Zeile_2.ColPhasIstStdSumRow2Info, "Text", "1,00");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='101') on item 'FrmTabProjekt.Tabelle.Zeile_3.ColPhasCdRow3'.", repo.FrmTabProjekt.Tabelle.Zeile_3.ColPhasCdRow3Info, new RecordItemIndex(13));
            Validate.AttributeEqual(repo.FrmTabProjekt.Tabelle.Zeile_3.ColPhasCdRow3Info, "Text", "101");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='0,00') on item 'FrmTabProjekt.Tabelle.Zeile_3.ColPhasIstStdRow3'.", repo.FrmTabProjekt.Tabelle.Zeile_3.ColPhasIstStdRow3Info, new RecordItemIndex(14));
            Validate.AttributeEqual(repo.FrmTabProjekt.Tabelle.Zeile_3.ColPhasIstStdRow3Info, "Text", "0,00");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='1,00') on item 'FrmTabProjekt.Tabelle.Zeile_3.ColPhasIstStdSumRow3'.", repo.FrmTabProjekt.Tabelle.Zeile_3.ColPhasIstStdSumRow3Info, new RecordItemIndex(15));
            Validate.AttributeEqual(repo.FrmTabProjekt.Tabelle.Zeile_3.ColPhasIstStdSumRow3Info, "Text", "1,00");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='1011') on item 'FrmTabProjekt.Tabelle.Zeile_4.ColPhasCdRow4'.", repo.FrmTabProjekt.Tabelle.Zeile_4.ColPhasCdRow4Info, new RecordItemIndex(16));
            Validate.AttributeEqual(repo.FrmTabProjekt.Tabelle.Zeile_4.ColPhasCdRow4Info, "Text", "1011");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='1,00') on item 'FrmTabProjekt.Tabelle.Zeile_4.ColPhasIstStdRow4'.", repo.FrmTabProjekt.Tabelle.Zeile_4.ColPhasIstStdRow4Info, new RecordItemIndex(17));
            Validate.AttributeEqual(repo.FrmTabProjekt.Tabelle.Zeile_4.ColPhasIstStdRow4Info, "Text", "1,00");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='1,00') on item 'FrmTabProjekt.Tabelle.Zeile_4.ColPhasIstStdSumRow4'.", repo.FrmTabProjekt.Tabelle.Zeile_4.ColPhasIstStdSumRow4Info, new RecordItemIndex(18));
            Validate.AttributeEqual(repo.FrmTabProjekt.Tabelle.Zeile_4.ColPhasIstStdSumRow4Info, "Text", "1,00");
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
