///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace Z_PROJ_004.Recordings
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The I_AUSFLUG_Meilenstein_verschieben recording.
    /// </summary>
    [TestModule("5c5149c5-669e-49a0-a259-b35a0e5e2d90", ModuleType.Recording, 1)]
    public partial class I_AUSFLUG_Meilenstein_verschieben : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::Z_PROJ_004.Z_PROJ_004Repository repository.
        /// </summary>
        public static global::Z_PROJ_004.Z_PROJ_004Repository repo = global::Z_PROJ_004.Z_PROJ_004Repository.Instance;

        static I_AUSFLUG_Meilenstein_verschieben instance = new I_AUSFLUG_Meilenstein_verschieben();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public I_AUSFLUG_Meilenstein_verschieben()
        {
            PROJ_NR_I_AUSFLUG_IP = "I-AUSFLUG";
            bis_Datum2 = "31.12.2050";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static I_AUSFLUG_Meilenstein_verschieben Instance
        {
            get { return instance; }
        }

#region Variables

        string _PROJ_NR_I_AUSFLUG_IP;

        /// <summary>
        /// Gets or sets the value of variable PROJ_NR_I_AUSFLUG_IP.
        /// </summary>
        [TestVariable("fe6d7e6d-d9ac-4c36-adf4-43e31838ef28")]
        public string PROJ_NR_I_AUSFLUG_IP
        {
            get { return _PROJ_NR_I_AUSFLUG_IP; }
            set { _PROJ_NR_I_AUSFLUG_IP = value; }
        }

        string _bis_Datum2;

        /// <summary>
        /// Gets or sets the value of variable bis_Datum2.
        /// </summary>
        [TestVariable("ef46111a-9876-4920-bb84-a1919a4d2f9c")]
        public string bis_Datum2
        {
            get { return _bis_Datum2; }
            set { _bis_Datum2 = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmTabProjekt.Register_Phasen.Phasen_Zeilen.Row10Column0' at Center.", repo.FrmTabProjekt.Register_Phasen.Phasen_Zeilen.Row10Column0Info, new RecordItemIndex(0));
            repo.FrmTabProjekt.Register_Phasen.Phasen_Zeilen.Row10Column0.Click();
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Right Click item 'FrmTabProjekt.Register_Phasen.Phasen_Zeilen.Row10Column0' at Center.", repo.FrmTabProjekt.Register_Phasen.Phasen_Zeilen.Row10Column0Info, new RecordItemIndex(1));
            //repo.FrmTabProjekt.Register_Phasen.Phasen_Zeilen.Row10Column0.Click(System.Windows.Forms.MouseButtons.Right);
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ZPROJ.PhaseNachObenSchieben_Alt_Umschalttaste_Pfeil_nach_oben' at Center.", repo.ZPROJ.PhaseNachObenSchieben_Alt_Umschalttaste_Pfeil_nach_obenInfo, new RecordItemIndex(2));
            //repo.ZPROJ.PhaseNachObenSchieben_Alt_Umschalttaste_Pfeil_nach_oben.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Alt+Shift+Up' Press with focus on 'FrmTabProjekt.Register_Phasen.Phasen_Zeilen.Row10Column0'.", repo.FrmTabProjekt.Register_Phasen.Phasen_Zeilen.Row10Column0Info, new RecordItemIndex(3));
            Keyboard.PrepareFocus(repo.FrmTabProjekt.Register_Phasen.Phasen_Zeilen.Row10Column0);
            Keyboard.Press(System.Windows.Forms.Keys.Up | System.Windows.Forms.Keys.Shift | System.Windows.Forms.Keys.Alt, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 2s.", new RecordItemIndex(4));
            Delay.Duration(2000, false);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='1') on item 'FrmTabProjekt.Register_Phasen.Phasen_Zeilen.ColPhasPspCodeRow1'.", repo.FrmTabProjekt.Register_Phasen.Phasen_Zeilen.ColPhasPspCodeRow1Info, new RecordItemIndex(5));
            Validate.AttributeEqual(repo.FrmTabProjekt.Register_Phasen.Phasen_Zeilen.ColPhasPspCodeRow1Info, "Text", "1");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='50') on item 'FrmTabProjekt.Register_Phasen.Phasen_Zeilen.ColPhasCdRow1'.", repo.FrmTabProjekt.Register_Phasen.Phasen_Zeilen.ColPhasCdRow1Info, new RecordItemIndex(6));
            Validate.AttributeEqual(repo.FrmTabProjekt.Register_Phasen.Phasen_Zeilen.ColPhasCdRow1Info, "Text", "50");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='MEILENSTEIN') on item 'FrmTabProjekt.Register_Phasen.Phasen_Zeilen.ColPhasBezRow1'.", repo.FrmTabProjekt.Register_Phasen.Phasen_Zeilen.ColPhasBezRow1Info, new RecordItemIndex(7));
            Validate.AttributeEqual(repo.FrmTabProjekt.Register_Phasen.Phasen_Zeilen.ColPhasBezRow1Info, "Text", "MEILENSTEIN");
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 2s.", new RecordItemIndex(8));
            Delay.Duration(2000, false);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmTabProjekt.Register_Phasen.Phasen_Zeilen.Row1Column0' at Center.", repo.FrmTabProjekt.Register_Phasen.Phasen_Zeilen.Row1Column0Info, new RecordItemIndex(9));
            repo.FrmTabProjekt.Register_Phasen.Phasen_Zeilen.Row1Column0.Click();
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Right Click item 'FrmTabProjekt.Register_Phasen.Phasen_Zeilen.Row1Column0' at Center.", repo.FrmTabProjekt.Register_Phasen.Phasen_Zeilen.Row1Column0Info, new RecordItemIndex(10));
            //repo.FrmTabProjekt.Register_Phasen.Phasen_Zeilen.Row1Column0.Click(System.Windows.Forms.MouseButtons.Right);
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ZPROJ.PhaseNachUntenSchieben_Alt_Umschalttaste_Pfeil_nach_unten' at Center.", repo.ZPROJ.PhaseNachUntenSchieben_Alt_Umschalttaste_Pfeil_nach_untenInfo, new RecordItemIndex(11));
            //repo.ZPROJ.PhaseNachUntenSchieben_Alt_Umschalttaste_Pfeil_nach_unten.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Alt+Shift+Down' Press with focus on 'FrmTabProjekt.Register_Phasen.Phasen_Zeilen.Row1Column0'.", repo.FrmTabProjekt.Register_Phasen.Phasen_Zeilen.Row1Column0Info, new RecordItemIndex(12));
            Keyboard.PrepareFocus(repo.FrmTabProjekt.Register_Phasen.Phasen_Zeilen.Row1Column0);
            Keyboard.Press(System.Windows.Forms.Keys.Down | System.Windows.Forms.Keys.Shift | System.Windows.Forms.Keys.Alt, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            // warten auf Verschieben
            Report.Log(ReportLevel.Info, "Delay", "warten auf Verschieben\r\nWaiting for 3s.", new RecordItemIndex(13));
            Delay.Duration(3000, false);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='2') on item 'FrmTabProjekt.Register_Phasen.Phasen_Zeilen.ColPhasPspCodeRow10'.", repo.FrmTabProjekt.Register_Phasen.Phasen_Zeilen.ColPhasPspCodeRow10Info, new RecordItemIndex(14));
            Validate.AttributeEqual(repo.FrmTabProjekt.Register_Phasen.Phasen_Zeilen.ColPhasPspCodeRow10Info, "Text", "2");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='50') on item 'FrmTabProjekt.Register_Phasen.Phasen_Zeilen.ColPhasCdRow10'.", repo.FrmTabProjekt.Register_Phasen.Phasen_Zeilen.ColPhasCdRow10Info, new RecordItemIndex(15));
            Validate.AttributeEqual(repo.FrmTabProjekt.Register_Phasen.Phasen_Zeilen.ColPhasCdRow10Info, "Text", "50");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='MEILENSTEIN') on item 'FrmTabProjekt.Register_Phasen.Phasen_Zeilen.ColPhasBezRow10'.", repo.FrmTabProjekt.Register_Phasen.Phasen_Zeilen.ColPhasBezRow10Info, new RecordItemIndex(16));
            Validate.AttributeEqual(repo.FrmTabProjekt.Register_Phasen.Phasen_Zeilen.ColPhasBezRow10Info, "Text", "MEILENSTEIN");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmTabProjekt.Register_Phasen.Phasen_Zeilen.Row10Column0' at Center.", repo.FrmTabProjekt.Register_Phasen.Phasen_Zeilen.Row10Column0Info, new RecordItemIndex(17));
            repo.FrmTabProjekt.Register_Phasen.Phasen_Zeilen.Row10Column0.Click();
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Right Click item 'FrmTabProjekt.Register_Phasen.Phasen_Zeilen.Row10Column0' at Center.", repo.FrmTabProjekt.Register_Phasen.Phasen_Zeilen.Row10Column0Info, new RecordItemIndex(18));
            //repo.FrmTabProjekt.Register_Phasen.Phasen_Zeilen.Row10Column0.Click(System.Windows.Forms.MouseButtons.Right);
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ZPROJ.PhaseNachUntenSchieben_Alt_Umschalttaste_Pfeil_nach_unten' at Center.", repo.ZPROJ.PhaseNachUntenSchieben_Alt_Umschalttaste_Pfeil_nach_untenInfo, new RecordItemIndex(19));
            //repo.ZPROJ.PhaseNachUntenSchieben_Alt_Umschalttaste_Pfeil_nach_unten.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Alt+Shift+Down' Press with focus on 'FrmTabProjekt.Register_Phasen.Phasen_Zeilen.Row10Column0'.", repo.FrmTabProjekt.Register_Phasen.Phasen_Zeilen.Row10Column0Info, new RecordItemIndex(20));
            Keyboard.PrepareFocus(repo.FrmTabProjekt.Register_Phasen.Phasen_Zeilen.Row10Column0);
            Keyboard.Press(System.Windows.Forms.Keys.Down | System.Windows.Forms.Keys.Shift | System.Windows.Forms.Keys.Alt, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            // warten auf Verschieben
            Report.Log(ReportLevel.Info, "Delay", "warten auf Verschieben\r\nWaiting for 3s.", new RecordItemIndex(21));
            Delay.Duration(3000, false);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='3') on item 'FrmTabProjekt.Register_Phasen.Phasen_Zeilen.ColPhasPspCodeRow11'.", repo.FrmTabProjekt.Register_Phasen.Phasen_Zeilen.ColPhasPspCodeRow11Info, new RecordItemIndex(22));
            Validate.AttributeEqual(repo.FrmTabProjekt.Register_Phasen.Phasen_Zeilen.ColPhasPspCodeRow11Info, "Text", "3");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='50') on item 'FrmTabProjekt.Register_Phasen.Phasen_Zeilen.ColPhasCdRow11'.", repo.FrmTabProjekt.Register_Phasen.Phasen_Zeilen.ColPhasCdRow11Info, new RecordItemIndex(23));
            Validate.AttributeEqual(repo.FrmTabProjekt.Register_Phasen.Phasen_Zeilen.ColPhasCdRow11Info, "Text", "50");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='MEILENSTEIN') on item 'FrmTabProjekt.Register_Phasen.Phasen_Zeilen.ColPhasBezRow11'.", repo.FrmTabProjekt.Register_Phasen.Phasen_Zeilen.ColPhasBezRow11Info, new RecordItemIndex(24));
            Validate.AttributeEqual(repo.FrmTabProjekt.Register_Phasen.Phasen_Zeilen.ColPhasBezRow11Info, "Text", "MEILENSTEIN");
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
