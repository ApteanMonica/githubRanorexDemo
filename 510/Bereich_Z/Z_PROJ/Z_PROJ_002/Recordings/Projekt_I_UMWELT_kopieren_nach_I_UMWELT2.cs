///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace Z_PROJ_002.Recordings
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Projekt_I_UMWELT_kopieren_nach_I_UMWELT2 recording.
    /// </summary>
    [TestModule("8a7764ba-7936-4f5e-afeb-f8051077b341", ModuleType.Recording, 1)]
    public partial class Projekt_I_UMWELT_kopieren_nach_I_UMWELT2 : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::Z_PROJ_002.Z_PROJ_002Repository repository.
        /// </summary>
        public static global::Z_PROJ_002.Z_PROJ_002Repository repo = global::Z_PROJ_002.Z_PROJ_002Repository.Instance;

        static Projekt_I_UMWELT_kopieren_nach_I_UMWELT2 instance = new Projekt_I_UMWELT_kopieren_nach_I_UMWELT2();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Projekt_I_UMWELT_kopieren_nach_I_UMWELT2()
        {
            PROJ_NR_I_UMWELT_Quelle = "I-UMWELT";
            PROJ_NR_I_UMWELT2_Ziel = "I-UMWELT2";
            PROJ_BEZ_I_UMWELT2_Ziel = "I-UMWELT_Z_PROJ_002";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Projekt_I_UMWELT_kopieren_nach_I_UMWELT2 Instance
        {
            get { return instance; }
        }

#region Variables

        string _PROJ_NR_I_UMWELT_Quelle;

        /// <summary>
        /// Gets or sets the value of variable PROJ_NR_I_UMWELT_Quelle.
        /// </summary>
        [TestVariable("76222f73-4a67-4091-a824-c6fd06b7f605")]
        public string PROJ_NR_I_UMWELT_Quelle
        {
            get { return _PROJ_NR_I_UMWELT_Quelle; }
            set { _PROJ_NR_I_UMWELT_Quelle = value; }
        }

        string _PROJ_NR_I_UMWELT2_Ziel;

        /// <summary>
        /// Gets or sets the value of variable PROJ_NR_I_UMWELT2_Ziel.
        /// </summary>
        [TestVariable("b9877069-5d2c-4935-82d1-397d541d8f03")]
        public string PROJ_NR_I_UMWELT2_Ziel
        {
            get { return _PROJ_NR_I_UMWELT2_Ziel; }
            set { _PROJ_NR_I_UMWELT2_Ziel = value; }
        }

        string _PROJ_BEZ_I_UMWELT2_Ziel;

        /// <summary>
        /// Gets or sets the value of variable PROJ_BEZ_I_UMWELT2_Ziel.
        /// </summary>
        [TestVariable("9417cbe4-dd5f-4423-8549-f26e52447b81")]
        public string PROJ_BEZ_I_UMWELT2_Ziel
        {
            get { return _PROJ_BEZ_I_UMWELT2_Ziel; }
            set { _PROJ_BEZ_I_UMWELT2_Ziel = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'FrmTabProjekt.TitleBar100ProjektVerwalten'.", repo.FrmTabProjekt.TitleBar100ProjektVerwaltenInfo, new RecordItemIndex(0));
            Validate.Exists(repo.FrmTabProjekt.TitleBar100ProjektVerwaltenInfo);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$PROJ_NR_I_UMWELT_Quelle) on item 'FrmTabProjekt.Projektnr'.", repo.FrmTabProjekt.ProjektnrInfo, new RecordItemIndex(1));
            Validate.AttributeEqual(repo.FrmTabProjekt.ProjektnrInfo, "Text", PROJ_NR_I_UMWELT_Quelle);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmTabProjekt.PbCommonKopieren' at Center.", repo.FrmTabProjekt.PbCommonKopierenInfo, new RecordItemIndex(2));
            repo.FrmTabProjekt.PbCommonKopieren.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$PROJ_NR_I_UMWELT2_Ziel' with focus on 'FrmTabProjekt.Projektnr'.", repo.FrmTabProjekt.ProjektnrInfo, new RecordItemIndex(3));
            repo.FrmTabProjekt.Projektnr.PressKeys(PROJ_NR_I_UMWELT2_Ziel);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Tab' Press with focus on 'FrmTabProjekt.Projektnr'.", repo.FrmTabProjekt.ProjektnrInfo, new RecordItemIndex(4));
            Keyboard.PrepareFocus(repo.FrmTabProjekt.Projektnr);
            Keyboard.Press(System.Windows.Forms.Keys.Tab, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$PROJ_BEZ_I_UMWELT2_Ziel' with focus on 'FrmTabProjekt.Bezeichnung'.", repo.FrmTabProjekt.BezeichnungInfo, new RecordItemIndex(5));
            repo.FrmTabProjekt.Bezeichnung.PressKeys(PROJ_BEZ_I_UMWELT2_Ziel);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Tab' Press with focus on 'FrmTabProjekt.Bezeichnung'.", repo.FrmTabProjekt.BezeichnungInfo, new RecordItemIndex(6));
            Keyboard.PrepareFocus(repo.FrmTabProjekt.Bezeichnung);
            Keyboard.Press(System.Windows.Forms.Keys.Tab, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$PROJ_NR_I_UMWELT2_Ziel) on item 'FrmTabProjekt.Projektnr'.", repo.FrmTabProjekt.ProjektnrInfo, new RecordItemIndex(7));
            Validate.AttributeEqual(repo.FrmTabProjekt.ProjektnrInfo, "Text", PROJ_NR_I_UMWELT2_Ziel);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$PROJ_BEZ_I_UMWELT2_Ziel) on item 'FrmTabProjekt.Bezeichnung'.", repo.FrmTabProjekt.BezeichnungInfo, new RecordItemIndex(8));
            Validate.AttributeEqual(repo.FrmTabProjekt.BezeichnungInfo, "Text", PROJ_BEZ_I_UMWELT2_Ziel);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
