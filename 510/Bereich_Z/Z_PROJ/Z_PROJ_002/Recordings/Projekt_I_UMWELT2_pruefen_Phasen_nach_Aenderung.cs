///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace Z_PROJ_002.Recordings
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Projekt_I_UMWELT2_pruefen_Phasen_nach_Aenderung recording.
    /// </summary>
    [TestModule("44069391-3124-43b0-994f-109f9f1053cf", ModuleType.Recording, 1)]
    public partial class Projekt_I_UMWELT2_pruefen_Phasen_nach_Aenderung : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::Z_PROJ_002.Z_PROJ_002Repository repository.
        /// </summary>
        public static global::Z_PROJ_002.Z_PROJ_002Repository repo = global::Z_PROJ_002.Z_PROJ_002Repository.Instance;

        static Projekt_I_UMWELT2_pruefen_Phasen_nach_Aenderung instance = new Projekt_I_UMWELT2_pruefen_Phasen_nach_Aenderung();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Projekt_I_UMWELT2_pruefen_Phasen_nach_Aenderung()
        {
            PROJ_NR_I_UMWELT2_Ziel = "I-UMWELT2";
            von_Datum = "28.05.2021";
            bis_Datum2 = "31.12.2050";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Projekt_I_UMWELT2_pruefen_Phasen_nach_Aenderung Instance
        {
            get { return instance; }
        }

#region Variables

        string _PROJ_NR_I_UMWELT2_Ziel;

        /// <summary>
        /// Gets or sets the value of variable PROJ_NR_I_UMWELT2_Ziel.
        /// </summary>
        [TestVariable("66e7b2fd-abf8-47c9-94b6-ff658eb4abb8")]
        public string PROJ_NR_I_UMWELT2_Ziel
        {
            get { return _PROJ_NR_I_UMWELT2_Ziel; }
            set { _PROJ_NR_I_UMWELT2_Ziel = value; }
        }

        string _von_Datum;

        /// <summary>
        /// Gets or sets the value of variable von_Datum.
        /// </summary>
        [TestVariable("dc49bb6e-0798-4dc5-9299-15e108ab6254")]
        public string von_Datum
        {
            get { return _von_Datum; }
            set { _von_Datum = value; }
        }

        string _bis_Datum2;

        /// <summary>
        /// Gets or sets the value of variable bis_Datum2.
        /// </summary>
        [TestVariable("b47812a6-b476-4ee8-b044-ce42a7948228")]
        public string bis_Datum2
        {
            get { return _bis_Datum2; }
            set { _bis_Datum2 = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmTabProjekt.TabPagePhasen' at Center.", repo.FrmTabProjekt.TabPagePhasenInfo, new RecordItemIndex(0));
            repo.FrmTabProjekt.TabPagePhasen.Click();
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$PROJ_NR_I_UMWELT2_Ziel) on item 'FrmTabProjekt.Projektnr'.", repo.FrmTabProjekt.ProjektnrInfo, new RecordItemIndex(1));
            Validate.AttributeEqual(repo.FrmTabProjekt.ProjektnrInfo, "Text", PROJ_NR_I_UMWELT2_Ziel);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='1') on item 'FrmTabProjekt.Register_Phasen.Phasen_Zeilen.ColPhasPspCodeRow1'.", repo.FrmTabProjekt.Register_Phasen.Phasen_Zeilen.ColPhasPspCodeRow1Info, new RecordItemIndex(2));
            Validate.AttributeEqual(repo.FrmTabProjekt.Register_Phasen.Phasen_Zeilen.ColPhasPspCodeRow1Info, "Text", "1");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='10') on item 'FrmTabProjekt.Register_Phasen.Phasen_Zeilen.ColPhasCdRow1'.", repo.FrmTabProjekt.Register_Phasen.Phasen_Zeilen.ColPhasCdRow1Info, new RecordItemIndex(3));
            Validate.AttributeEqual(repo.FrmTabProjekt.Register_Phasen.Phasen_Zeilen.ColPhasCdRow1Info, "Text", "10");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$von_Datum) on item 'FrmTabProjekt.Register_Phasen.Phasen_Zeilen.ColdtPhasVonRow1'.", repo.FrmTabProjekt.Register_Phasen.Phasen_Zeilen.ColdtPhasVonRow1Info, new RecordItemIndex(4));
            Validate.AttributeEqual(repo.FrmTabProjekt.Register_Phasen.Phasen_Zeilen.ColdtPhasVonRow1Info, "Text", von_Datum);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$bis_Datum2) on item 'FrmTabProjekt.Register_Phasen.Phasen_Zeilen.ColdtPhasBisRow1'.", repo.FrmTabProjekt.Register_Phasen.Phasen_Zeilen.ColdtPhasBisRow1Info, new RecordItemIndex(5));
            Validate.AttributeEqual(repo.FrmTabProjekt.Register_Phasen.Phasen_Zeilen.ColdtPhasBisRow1Info, "Text", bis_Datum2);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='0') on item 'FrmTabProjekt.Register_Phasen.Phasen_Zeilen.ColPhasStatusExtRow1'.", repo.FrmTabProjekt.Register_Phasen.Phasen_Zeilen.ColPhasStatusExtRow1Info, new RecordItemIndex(6));
            Validate.AttributeEqual(repo.FrmTabProjekt.Register_Phasen.Phasen_Zeilen.ColPhasStatusExtRow1Info, "Text", "0");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='1.1.1.1') on item 'FrmTabProjekt.Register_Phasen.Phasen_Zeilen.ColPhasPspCodeRow4'.", repo.FrmTabProjekt.Register_Phasen.Phasen_Zeilen.ColPhasPspCodeRow4Info, new RecordItemIndex(7));
            Validate.AttributeEqual(repo.FrmTabProjekt.Register_Phasen.Phasen_Zeilen.ColPhasPspCodeRow4Info, "Text", "1.1.1.1");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='1011') on item 'FrmTabProjekt.Register_Phasen.Phasen_Zeilen.ColPhasCdRow4'.", repo.FrmTabProjekt.Register_Phasen.Phasen_Zeilen.ColPhasCdRow4Info, new RecordItemIndex(8));
            Validate.AttributeEqual(repo.FrmTabProjekt.Register_Phasen.Phasen_Zeilen.ColPhasCdRow4Info, "Text", "1011");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$von_Datum) on item 'FrmTabProjekt.Register_Phasen.Phasen_Zeilen.ColdtPhasVonRow4'.", repo.FrmTabProjekt.Register_Phasen.Phasen_Zeilen.ColdtPhasVonRow4Info, new RecordItemIndex(9));
            Validate.AttributeEqual(repo.FrmTabProjekt.Register_Phasen.Phasen_Zeilen.ColdtPhasVonRow4Info, "Text", von_Datum);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$bis_Datum2) on item 'FrmTabProjekt.Register_Phasen.Phasen_Zeilen.ColdtPhasBisRow4'.", repo.FrmTabProjekt.Register_Phasen.Phasen_Zeilen.ColdtPhasBisRow4Info, new RecordItemIndex(10));
            Validate.AttributeEqual(repo.FrmTabProjekt.Register_Phasen.Phasen_Zeilen.ColdtPhasBisRow4Info, "Text", bis_Datum2);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='0') on item 'FrmTabProjekt.Register_Phasen.Phasen_Zeilen.ColPhasStatusExtRow4'.", repo.FrmTabProjekt.Register_Phasen.Phasen_Zeilen.ColPhasStatusExtRow4Info, new RecordItemIndex(11));
            Validate.AttributeEqual(repo.FrmTabProjekt.Register_Phasen.Phasen_Zeilen.ColPhasStatusExtRow4Info, "Text", "0");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='1.2.2') on item 'FrmTabProjekt.Register_Phasen.Phasen_Zeilen.ColPhasPspCodeRow8'.", repo.FrmTabProjekt.Register_Phasen.Phasen_Zeilen.ColPhasPspCodeRow8Info, new RecordItemIndex(12));
            Validate.AttributeEqual(repo.FrmTabProjekt.Register_Phasen.Phasen_Zeilen.ColPhasPspCodeRow8Info, "Text", "1.2.2");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='202') on item 'FrmTabProjekt.Register_Phasen.Phasen_Zeilen.ColPhasCdRow8'.", repo.FrmTabProjekt.Register_Phasen.Phasen_Zeilen.ColPhasCdRow8Info, new RecordItemIndex(13));
            Validate.AttributeEqual(repo.FrmTabProjekt.Register_Phasen.Phasen_Zeilen.ColPhasCdRow8Info, "Text", "202");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$von_Datum) on item 'FrmTabProjekt.Register_Phasen.Phasen_Zeilen.ColdtPhasVonRow8'.", repo.FrmTabProjekt.Register_Phasen.Phasen_Zeilen.ColdtPhasVonRow8Info, new RecordItemIndex(14));
            Validate.AttributeEqual(repo.FrmTabProjekt.Register_Phasen.Phasen_Zeilen.ColdtPhasVonRow8Info, "Text", von_Datum);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$bis_Datum2) on item 'FrmTabProjekt.Register_Phasen.Phasen_Zeilen.ColdtPhasBisRow8'.", repo.FrmTabProjekt.Register_Phasen.Phasen_Zeilen.ColdtPhasBisRow8Info, new RecordItemIndex(15));
            Validate.AttributeEqual(repo.FrmTabProjekt.Register_Phasen.Phasen_Zeilen.ColdtPhasBisRow8Info, "Text", bis_Datum2);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='0') on item 'FrmTabProjekt.Register_Phasen.Phasen_Zeilen.ColPhasStatusExtRow8'.", repo.FrmTabProjekt.Register_Phasen.Phasen_Zeilen.ColPhasStatusExtRow8Info, new RecordItemIndex(16));
            Validate.AttributeEqual(repo.FrmTabProjekt.Register_Phasen.Phasen_Zeilen.ColPhasStatusExtRow8Info, "Text", "0");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='2') on item 'FrmTabProjekt.Register_Phasen.Phasen_Zeilen.ColPhasPspCodeRow10'.", repo.FrmTabProjekt.Register_Phasen.Phasen_Zeilen.ColPhasPspCodeRow10Info, new RecordItemIndex(17));
            Validate.AttributeEqual(repo.FrmTabProjekt.Register_Phasen.Phasen_Zeilen.ColPhasPspCodeRow10Info, "Text", "2");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='20') on item 'FrmTabProjekt.Register_Phasen.Phasen_Zeilen.ColPhasCdRow10'.", repo.FrmTabProjekt.Register_Phasen.Phasen_Zeilen.ColPhasCdRow10Info, new RecordItemIndex(18));
            Validate.AttributeEqual(repo.FrmTabProjekt.Register_Phasen.Phasen_Zeilen.ColPhasCdRow10Info, "Text", "20");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$von_Datum) on item 'FrmTabProjekt.Register_Phasen.Phasen_Zeilen.ColdtPhasVonRow10'.", repo.FrmTabProjekt.Register_Phasen.Phasen_Zeilen.ColdtPhasVonRow10Info, new RecordItemIndex(19));
            Validate.AttributeEqual(repo.FrmTabProjekt.Register_Phasen.Phasen_Zeilen.ColdtPhasVonRow10Info, "Text", von_Datum);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$bis_Datum2) on item 'FrmTabProjekt.Register_Phasen.Phasen_Zeilen.ColdtPhasBisRow10'.", repo.FrmTabProjekt.Register_Phasen.Phasen_Zeilen.ColdtPhasBisRow10Info, new RecordItemIndex(20));
            Validate.AttributeEqual(repo.FrmTabProjekt.Register_Phasen.Phasen_Zeilen.ColdtPhasBisRow10Info, "Text", bis_Datum2);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='0') on item 'FrmTabProjekt.Register_Phasen.Phasen_Zeilen.ColPhasStatusExtRow10'.", repo.FrmTabProjekt.Register_Phasen.Phasen_Zeilen.ColPhasStatusExtRow10Info, new RecordItemIndex(21));
            Validate.AttributeEqual(repo.FrmTabProjekt.Register_Phasen.Phasen_Zeilen.ColPhasStatusExtRow10Info, "Text", "0");
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
