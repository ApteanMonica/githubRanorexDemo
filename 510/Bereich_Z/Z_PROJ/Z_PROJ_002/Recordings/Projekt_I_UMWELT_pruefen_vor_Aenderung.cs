///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace Z_PROJ_002.Recordings
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Projekt_I_UMWELT_pruefen_vor_Aenderung recording.
    /// </summary>
    [TestModule("71e2eefd-06c7-4139-84a4-5d8d30d49649", ModuleType.Recording, 1)]
    public partial class Projekt_I_UMWELT_pruefen_vor_Aenderung : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::Z_PROJ_002.Z_PROJ_002Repository repository.
        /// </summary>
        public static global::Z_PROJ_002.Z_PROJ_002Repository repo = global::Z_PROJ_002.Z_PROJ_002Repository.Instance;

        static Projekt_I_UMWELT_pruefen_vor_Aenderung instance = new Projekt_I_UMWELT_pruefen_vor_Aenderung();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Projekt_I_UMWELT_pruefen_vor_Aenderung()
        {
            bis_Datum = "31.12.2099";
            User_RS = "RS";
            User_RSX = "RSX";
            PROJ_BEZ_I_UMWELT_Quelle = "Umwelt INT";
            PROJ_NR_I_UMWELT_Quelle = "I-UMWELT";
            von_Datum = "28.05.2021";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Projekt_I_UMWELT_pruefen_vor_Aenderung Instance
        {
            get { return instance; }
        }

#region Variables

        string _bis_Datum;

        /// <summary>
        /// Gets or sets the value of variable bis_Datum.
        /// </summary>
        [TestVariable("6a69c65f-9577-477b-9221-524c1693f863")]
        public string bis_Datum
        {
            get { return _bis_Datum; }
            set { _bis_Datum = value; }
        }

        string _User_RS;

        /// <summary>
        /// Gets or sets the value of variable User_RS.
        /// </summary>
        [TestVariable("3b991088-38d0-4bc3-b530-cf14f309fe7f")]
        public string User_RS
        {
            get { return _User_RS; }
            set { _User_RS = value; }
        }

        string _User_RSX;

        /// <summary>
        /// Gets or sets the value of variable User_RSX.
        /// </summary>
        [TestVariable("632c8ac1-a061-4533-883a-819ab2455678")]
        public string User_RSX
        {
            get { return _User_RSX; }
            set { _User_RSX = value; }
        }

        string _PROJ_BEZ_I_UMWELT_Quelle;

        /// <summary>
        /// Gets or sets the value of variable PROJ_BEZ_I_UMWELT_Quelle.
        /// </summary>
        [TestVariable("378f4745-57f9-49d8-8f18-6092b60e68da")]
        public string PROJ_BEZ_I_UMWELT_Quelle
        {
            get { return _PROJ_BEZ_I_UMWELT_Quelle; }
            set { _PROJ_BEZ_I_UMWELT_Quelle = value; }
        }

        string _PROJ_NR_I_UMWELT_Quelle;

        /// <summary>
        /// Gets or sets the value of variable PROJ_NR_I_UMWELT_Quelle.
        /// </summary>
        [TestVariable("99c66403-bc5b-4c55-a8e9-f798ba4f7280")]
        public string PROJ_NR_I_UMWELT_Quelle
        {
            get { return _PROJ_NR_I_UMWELT_Quelle; }
            set { _PROJ_NR_I_UMWELT_Quelle = value; }
        }

        string _von_Datum;

        /// <summary>
        /// Gets or sets the value of variable von_Datum.
        /// </summary>
        [TestVariable("427d63c9-4184-4cab-9bf9-22dadb570133")]
        public string von_Datum
        {
            get { return _von_Datum; }
            set { _von_Datum = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$PROJ_NR_I_UMWELT_Quelle) on item 'FrmTabProjekt.Projektnr'.", repo.FrmTabProjekt.ProjektnrInfo, new RecordItemIndex(0));
            Validate.AttributeEqual(repo.FrmTabProjekt.ProjektnrInfo, "Text", PROJ_NR_I_UMWELT_Quelle);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='IP') on item 'FrmTabProjekt.TextArt'.", repo.FrmTabProjekt.TextArtInfo, new RecordItemIndex(1));
            Validate.AttributeEqual(repo.FrmTabProjekt.TextArtInfo, "Text", "IP");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='VORLAGE_IP') on item 'FrmTabProjekt.VorlageProjektnr'.", repo.FrmTabProjekt.VorlageProjektnrInfo, new RecordItemIndex(2));
            Validate.AttributeEqual(repo.FrmTabProjekt.VorlageProjektnrInfo, "Text", "VORLAGE_IP");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$PROJ_BEZ_I_UMWELT_Quelle) on item 'FrmTabProjekt.Bezeichnung'.", repo.FrmTabProjekt.BezeichnungInfo, new RecordItemIndex(3));
            Validate.AttributeEqual(repo.FrmTabProjekt.BezeichnungInfo, "Text", PROJ_BEZ_I_UMWELT_Quelle);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='') on item 'FrmTabProjekt.Register_Projekt.DfProjStatusExt'.", repo.FrmTabProjekt.Register_Projekt.DfProjStatusExtInfo, new RecordItemIndex(4));
            Validate.AttributeEqual(repo.FrmTabProjekt.Register_Projekt.DfProjStatusExtInfo, "Text", "");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$von_Datum) on item 'FrmTabProjekt.Register_Projekt.Zeitraum'.", repo.FrmTabProjekt.Register_Projekt.ZeitraumInfo, new RecordItemIndex(5));
            Validate.AttributeEqual(repo.FrmTabProjekt.Register_Projekt.ZeitraumInfo, "Text", von_Datum);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$bis_Datum) on item 'FrmTabProjekt.Register_Projekt.TextBis'.", repo.FrmTabProjekt.Register_Projekt.TextBisInfo, new RecordItemIndex(6));
            Validate.AttributeEqual(repo.FrmTabProjekt.Register_Projekt.TextBisInfo, "Text", bis_Datum);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$User_RS) on item 'FrmTabProjekt.Register_Projekt.ColPersNrRow1'.", repo.FrmTabProjekt.Register_Projekt.ColPersNrRow1Info, new RecordItemIndex(7));
            Validate.AttributeEqual(repo.FrmTabProjekt.Register_Projekt.ColPersNrRow1Info, "Text", User_RS);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$User_RSX) on item 'FrmTabProjekt.Register_Projekt.ColPersNrRow2'.", repo.FrmTabProjekt.Register_Projekt.ColPersNrRow2Info, new RecordItemIndex(8));
            Validate.AttributeEqual(repo.FrmTabProjekt.Register_Projekt.ColPersNrRow2Info, "Text", User_RSX);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmTabProjekt.Allgemein' at Center.", repo.FrmTabProjekt.AllgemeinInfo, new RecordItemIndex(9));
            repo.FrmTabProjekt.Allgemein.Click();
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='1') on item 'FrmTabProjekt.Register_Allgemein.Text'.", repo.FrmTabProjekt.Register_Allgemein.TextInfo, new RecordItemIndex(10));
            Validate.AttributeEqual(repo.FrmTabProjekt.Register_Allgemein.TextInfo, "Text", "1");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Checked='True') on item 'FrmTabProjekt.Register_Allgemein.CbProjBukzzeit'.", repo.FrmTabProjekt.Register_Allgemein.CbProjBukzzeitInfo, new RecordItemIndex(11));
            Validate.AttributeEqual(repo.FrmTabProjekt.Register_Allgemein.CbProjBukzzeitInfo, "Checked", "True");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Checked='True') on item 'FrmTabProjekt.Register_Allgemein.CbProjKzuhr'.", repo.FrmTabProjekt.Register_Allgemein.CbProjKzuhrInfo, new RecordItemIndex(12));
            Validate.AttributeEqual(repo.FrmTabProjekt.Register_Allgemein.CbProjKzuhrInfo, "Checked", "True");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Checked='False') on item 'FrmTabProjekt.Register_Allgemein.CbProjKzdauer'.", repo.FrmTabProjekt.Register_Allgemein.CbProjKzdauerInfo, new RecordItemIndex(13));
            Validate.AttributeEqual(repo.FrmTabProjekt.Register_Allgemein.CbProjKzdauerInfo, "Checked", "False");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmTabProjekt.Projekt' at Center.", repo.FrmTabProjekt.ProjektInfo, new RecordItemIndex(14));
            repo.FrmTabProjekt.Projekt.Click();
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
