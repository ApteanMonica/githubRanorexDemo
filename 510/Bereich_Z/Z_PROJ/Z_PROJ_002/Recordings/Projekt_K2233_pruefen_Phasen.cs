///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace Z_PROJ_002.Recordings
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Projekt_K2233_pruefen_Phasen recording.
    /// </summary>
    [TestModule("a8fdf8bf-595e-44e3-8ea7-05dcbd21ad63", ModuleType.Recording, 1)]
    public partial class Projekt_K2233_pruefen_Phasen : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::Z_PROJ_002.Z_PROJ_002Repository repository.
        /// </summary>
        public static global::Z_PROJ_002.Z_PROJ_002Repository repo = global::Z_PROJ_002.Z_PROJ_002Repository.Instance;

        static Projekt_K2233_pruefen_Phasen instance = new Projekt_K2233_pruefen_Phasen();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Projekt_K2233_pruefen_Phasen()
        {
            PROJ_NR_K2233_Ziel = "K2233";
            von_Datum2 = "27.05.2021";
            bis_Datum1 = "31.12.2999";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Projekt_K2233_pruefen_Phasen Instance
        {
            get { return instance; }
        }

#region Variables

        string _PROJ_NR_K2233_Ziel;

        /// <summary>
        /// Gets or sets the value of variable PROJ_NR_K2233_Ziel.
        /// </summary>
        [TestVariable("48f4b728-7205-4ba4-b11f-18edef4d232d")]
        public string PROJ_NR_K2233_Ziel
        {
            get { return _PROJ_NR_K2233_Ziel; }
            set { _PROJ_NR_K2233_Ziel = value; }
        }

        string _von_Datum2;

        /// <summary>
        /// Gets or sets the value of variable von_Datum2.
        /// </summary>
        [TestVariable("321e7fb6-6781-4742-808c-2a51d684920c")]
        public string von_Datum2
        {
            get { return _von_Datum2; }
            set { _von_Datum2 = value; }
        }

        string _bis_Datum1;

        /// <summary>
        /// Gets or sets the value of variable bis_Datum1.
        /// </summary>
        [TestVariable("aa020c0b-b7e0-4399-a573-ef45ec52265f")]
        public string bis_Datum1
        {
            get { return _bis_Datum1; }
            set { _bis_Datum1 = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmTabProjekt.TabPagePhasen' at Center.", repo.FrmTabProjekt.TabPagePhasenInfo, new RecordItemIndex(0));
            repo.FrmTabProjekt.TabPagePhasen.Click();
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$PROJ_NR_K2233_Ziel) on item 'FrmTabProjekt.Projektnr'.", repo.FrmTabProjekt.ProjektnrInfo, new RecordItemIndex(1));
            Validate.AttributeEqual(repo.FrmTabProjekt.ProjektnrInfo, "Text", PROJ_NR_K2233_Ziel);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='1') on item 'FrmTabProjekt.Register_Phasen.Phasen_Zeilen.ColPhasPspCodeRow1'.", repo.FrmTabProjekt.Register_Phasen.Phasen_Zeilen.ColPhasPspCodeRow1Info, new RecordItemIndex(2));
            Validate.AttributeEqual(repo.FrmTabProjekt.Register_Phasen.Phasen_Zeilen.ColPhasPspCodeRow1Info, "Text", "1");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='10') on item 'FrmTabProjekt.Register_Phasen.Phasen_Zeilen.ColPhasCdRow1'.", repo.FrmTabProjekt.Register_Phasen.Phasen_Zeilen.ColPhasCdRow1Info, new RecordItemIndex(3));
            Validate.AttributeEqual(repo.FrmTabProjekt.Register_Phasen.Phasen_Zeilen.ColPhasCdRow1Info, "Text", "10");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='') on item 'FrmTabProjekt.Register_Phasen.Phasen_Zeilen.ColPhasStatusExtRow1'.", repo.FrmTabProjekt.Register_Phasen.Phasen_Zeilen.ColPhasStatusExtRow1Info, new RecordItemIndex(4));
            Validate.AttributeEqual(repo.FrmTabProjekt.Register_Phasen.Phasen_Zeilen.ColPhasStatusExtRow1Info, "Text", "");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$von_Datum2) on item 'FrmTabProjekt.Register_Phasen.Phasen_Zeilen.ColdtPhasVonRow1'.", repo.FrmTabProjekt.Register_Phasen.Phasen_Zeilen.ColdtPhasVonRow1Info, new RecordItemIndex(5));
            Validate.AttributeEqual(repo.FrmTabProjekt.Register_Phasen.Phasen_Zeilen.ColdtPhasVonRow1Info, "Text", von_Datum2);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$bis_Datum1) on item 'FrmTabProjekt.Register_Phasen.Phasen_Zeilen.ColdtPhasBisRow1'.", repo.FrmTabProjekt.Register_Phasen.Phasen_Zeilen.ColdtPhasBisRow1Info, new RecordItemIndex(6));
            Validate.AttributeEqual(repo.FrmTabProjekt.Register_Phasen.Phasen_Zeilen.ColdtPhasBisRow1Info, "Text", bis_Datum1);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='4') on item 'FrmTabProjekt.Register_Phasen.Phasen_Zeilen.ColPhasPspCodeRow4'.", repo.FrmTabProjekt.Register_Phasen.Phasen_Zeilen.ColPhasPspCodeRow4Info, new RecordItemIndex(7));
            Validate.AttributeEqual(repo.FrmTabProjekt.Register_Phasen.Phasen_Zeilen.ColPhasPspCodeRow4Info, "Text", "4");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='600') on item 'FrmTabProjekt.Register_Phasen.Phasen_Zeilen.ColPhasCdRow4'.", repo.FrmTabProjekt.Register_Phasen.Phasen_Zeilen.ColPhasCdRow4Info, new RecordItemIndex(8));
            Validate.AttributeEqual(repo.FrmTabProjekt.Register_Phasen.Phasen_Zeilen.ColPhasCdRow4Info, "Text", "600");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='4.1') on item 'FrmTabProjekt.Register_Phasen.Phasen_Zeilen.ColPhasPspCodeRow5'.", repo.FrmTabProjekt.Register_Phasen.Phasen_Zeilen.ColPhasPspCodeRow5Info, new RecordItemIndex(9));
            Validate.AttributeEqual(repo.FrmTabProjekt.Register_Phasen.Phasen_Zeilen.ColPhasPspCodeRow5Info, "Text", "4.1");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='610') on item 'FrmTabProjekt.Register_Phasen.Phasen_Zeilen.ColPhasCdRow5'.", repo.FrmTabProjekt.Register_Phasen.Phasen_Zeilen.ColPhasCdRow5Info, new RecordItemIndex(10));
            Validate.AttributeEqual(repo.FrmTabProjekt.Register_Phasen.Phasen_Zeilen.ColPhasCdRow5Info, "Text", "610");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='5') on item 'FrmTabProjekt.Register_Phasen.Phasen_Zeilen.ColPhasPspCodeRow14'.", repo.FrmTabProjekt.Register_Phasen.Phasen_Zeilen.ColPhasPspCodeRow14Info, new RecordItemIndex(11));
            Validate.AttributeEqual(repo.FrmTabProjekt.Register_Phasen.Phasen_Zeilen.ColPhasPspCodeRow14Info, "Text", "5");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='700') on item 'FrmTabProjekt.Register_Phasen.Phasen_Zeilen.ColPhasCdRow14'.", repo.FrmTabProjekt.Register_Phasen.Phasen_Zeilen.ColPhasCdRow14Info, new RecordItemIndex(12));
            Validate.AttributeEqual(repo.FrmTabProjekt.Register_Phasen.Phasen_Zeilen.ColPhasCdRow14Info, "Text", "700");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='5.1') on item 'FrmTabProjekt.Register_Phasen.Phasen_Zeilen.ColPhasPspCodeRow15'.", repo.FrmTabProjekt.Register_Phasen.Phasen_Zeilen.ColPhasPspCodeRow15Info, new RecordItemIndex(13));
            Validate.AttributeEqual(repo.FrmTabProjekt.Register_Phasen.Phasen_Zeilen.ColPhasPspCodeRow15Info, "Text", "5.1");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='730') on item 'FrmTabProjekt.Register_Phasen.Phasen_Zeilen.ColPhasCdRow15'.", repo.FrmTabProjekt.Register_Phasen.Phasen_Zeilen.ColPhasCdRow15Info, new RecordItemIndex(14));
            Validate.AttributeEqual(repo.FrmTabProjekt.Register_Phasen.Phasen_Zeilen.ColPhasCdRow15Info, "Text", "730");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='6.2') on item 'FrmTabProjekt.Register_Phasen.Phasen_Zeilen.ColPhasPspCodeRow22'.", repo.FrmTabProjekt.Register_Phasen.Phasen_Zeilen.ColPhasPspCodeRow22Info, new RecordItemIndex(15));
            Validate.AttributeEqual(repo.FrmTabProjekt.Register_Phasen.Phasen_Zeilen.ColPhasPspCodeRow22Info, "Text", "6.2");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='RP2') on item 'FrmTabProjekt.Register_Phasen.Phasen_Zeilen.ColPhasCdRow22'.", repo.FrmTabProjekt.Register_Phasen.Phasen_Zeilen.ColPhasCdRow22Info, new RecordItemIndex(16));
            Validate.AttributeEqual(repo.FrmTabProjekt.Register_Phasen.Phasen_Zeilen.ColPhasCdRow22Info, "Text", "RP2");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='') on item 'FrmTabProjekt.Register_Phasen.Phasen_Zeilen.ColPhasStatusExtRow22'.", repo.FrmTabProjekt.Register_Phasen.Phasen_Zeilen.ColPhasStatusExtRow22Info, new RecordItemIndex(17));
            Validate.AttributeEqual(repo.FrmTabProjekt.Register_Phasen.Phasen_Zeilen.ColPhasStatusExtRow22Info, "Text", "");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$von_Datum2) on item 'FrmTabProjekt.Register_Phasen.Phasen_Zeilen.ColdtPhasVonRow22'.", repo.FrmTabProjekt.Register_Phasen.Phasen_Zeilen.ColdtPhasVonRow22Info, new RecordItemIndex(18));
            Validate.AttributeEqual(repo.FrmTabProjekt.Register_Phasen.Phasen_Zeilen.ColdtPhasVonRow22Info, "Text", von_Datum2);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$bis_Datum1) on item 'FrmTabProjekt.Register_Phasen.Phasen_Zeilen.ColdtPhasBisRow22'.", repo.FrmTabProjekt.Register_Phasen.Phasen_Zeilen.ColdtPhasBisRow22Info, new RecordItemIndex(19));
            Validate.AttributeEqual(repo.FrmTabProjekt.Register_Phasen.Phasen_Zeilen.ColdtPhasBisRow22Info, "Text", bis_Datum1);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
