///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace Z_PROJ_006.Recording
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Kontrolle_Register_Daten_Zahlen recording.
    /// </summary>
    [TestModule("50d45b4c-0524-4c43-9c17-879924b4642f", ModuleType.Recording, 1)]
    public partial class Kontrolle_Register_Daten_Zahlen : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::Z_PROJ_006.Z_PROJ_006Repository repository.
        /// </summary>
        public static global::Z_PROJ_006.Z_PROJ_006Repository repo = global::Z_PROJ_006.Z_PROJ_006Repository.Instance;

        static Kontrolle_Register_Daten_Zahlen instance = new Kontrolle_Register_Daten_Zahlen();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Kontrolle_Register_Daten_Zahlen()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Kontrolle_Register_Daten_Zahlen Instance
        {
            get { return instance; }
        }

#region Variables

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmTabProjekt.Register_Phasen.Phasen_Felder.Row2Column0' at Center.", repo.FrmTabProjekt.Register_Phasen.Phasen_Felder.Row2Column0Info, new RecordItemIndex(0));
            repo.FrmTabProjekt.Register_Phasen.Phasen_Felder.Row2Column0.Click();
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmTabProjekt.Register_Phasen.Phasen_Felder.Row1Column0' at Center.", repo.FrmTabProjekt.Register_Phasen.Phasen_Felder.Row1Column0Info, new RecordItemIndex(1));
            repo.FrmTabProjekt.Register_Phasen.Phasen_Felder.Row1Column0.Click();
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='5,50') on item 'FrmTabProjekt.Register_Phasen.SyncdfPhasPlanmengeSum'.", repo.FrmTabProjekt.Register_Phasen.SyncdfPhasPlanmengeSumInfo, new RecordItemIndex(2));
            Validate.AttributeEqual(repo.FrmTabProjekt.Register_Phasen.SyncdfPhasPlanmengeSumInfo, "Text", "5,50");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='0,00') on item 'FrmTabProjekt.Register_Phasen.SyncdfPhasPlanmengeRevSum'.", repo.FrmTabProjekt.Register_Phasen.SyncdfPhasPlanmengeRevSumInfo, new RecordItemIndex(3));
            Validate.AttributeEqual(repo.FrmTabProjekt.Register_Phasen.SyncdfPhasPlanmengeRevSumInfo, "Text", "0,00");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='5,50') on item 'FrmTabProjekt.Register_Phasen.DfPhasPlanmengeGesSum'.", repo.FrmTabProjekt.Register_Phasen.DfPhasPlanmengeGesSumInfo, new RecordItemIndex(4));
            Validate.AttributeEqual(repo.FrmTabProjekt.Register_Phasen.DfPhasPlanmengeGesSumInfo, "Text", "5,50");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='1,00') on item 'FrmTabProjekt.Register_Phasen.SyncdfPhasIstStdSum'.", repo.FrmTabProjekt.Register_Phasen.SyncdfPhasIstStdSumInfo, new RecordItemIndex(5));
            Validate.AttributeEqual(repo.FrmTabProjekt.Register_Phasen.SyncdfPhasIstStdSumInfo, "Text", "1,00");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='4,50') on item 'FrmTabProjekt.Register_Phasen.SyncdfPhasOffenSum'.", repo.FrmTabProjekt.Register_Phasen.SyncdfPhasOffenSumInfo, new RecordItemIndex(6));
            Validate.AttributeEqual(repo.FrmTabProjekt.Register_Phasen.SyncdfPhasOffenSumInfo, "Text", "4,50");
            
            // Zeile mit Phase 1011
            Report.Log(ReportLevel.Info, "Section", "Zeile mit Phase 1011", new RecordItemIndex(7));
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmTabProjekt.Register_Phasen.Phasen_Felder.Row4Column0' at Center.", repo.FrmTabProjekt.Register_Phasen.Phasen_Felder.Row4Column0Info, new RecordItemIndex(8));
            repo.FrmTabProjekt.Register_Phasen.Phasen_Felder.Row4Column0.Click();
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='3,00') on item 'FrmTabProjekt.Register_Phasen.SyncdfPhasPlanmengeSum'.", repo.FrmTabProjekt.Register_Phasen.SyncdfPhasPlanmengeSumInfo, new RecordItemIndex(9));
            Validate.AttributeEqual(repo.FrmTabProjekt.Register_Phasen.SyncdfPhasPlanmengeSumInfo, "Text", "3,00");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='1,00') on item 'FrmTabProjekt.Register_Phasen.SyncdfPhasIstStdSum'.", repo.FrmTabProjekt.Register_Phasen.SyncdfPhasIstStdSumInfo, new RecordItemIndex(10));
            Validate.AttributeEqual(repo.FrmTabProjekt.Register_Phasen.SyncdfPhasIstStdSumInfo, "Text", "1,00");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='2,00') on item 'FrmTabProjekt.Register_Phasen.SyncdfPhasOffenSum'.", repo.FrmTabProjekt.Register_Phasen.SyncdfPhasOffenSumInfo, new RecordItemIndex(11));
            Validate.AttributeEqual(repo.FrmTabProjekt.Register_Phasen.SyncdfPhasOffenSumInfo, "Text", "2,00");
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
