///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace Z_PROJ_005.Recordings
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Projekt_K2002_2_Phasen_pruefen_vor_loeschen_Feldpruefung recording.
    /// </summary>
    [TestModule("62e52bcc-369d-4415-8071-1fee25440fd4", ModuleType.Recording, 1)]
    public partial class Projekt_K2002_2_Phasen_pruefen_vor_loeschen_Feldpruefung : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::Z_PROJ_005.Z_PROJ_005Repository repository.
        /// </summary>
        public static global::Z_PROJ_005.Z_PROJ_005Repository repo = global::Z_PROJ_005.Z_PROJ_005Repository.Instance;

        static Projekt_K2002_2_Phasen_pruefen_vor_loeschen_Feldpruefung instance = new Projekt_K2002_2_Phasen_pruefen_vor_loeschen_Feldpruefung();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Projekt_K2002_2_Phasen_pruefen_vor_loeschen_Feldpruefung()
        {
            PROJ_NR_K2002_2 = "K2002_2";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Projekt_K2002_2_Phasen_pruefen_vor_loeschen_Feldpruefung Instance
        {
            get { return instance; }
        }

#region Variables

        string _PROJ_NR_K2002_2;

        /// <summary>
        /// Gets or sets the value of variable PROJ_NR_K2002_2.
        /// </summary>
        [TestVariable("11d00fa1-c300-47f9-9085-edf067698bb1")]
        public string PROJ_NR_K2002_2
        {
            get { return _PROJ_NR_K2002_2; }
            set { _PROJ_NR_K2002_2 = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$PROJ_NR_K2002_2) on item 'FrmTabProjekt.Projektnr'.", repo.FrmTabProjekt.ProjektnrInfo, new RecordItemIndex(0));
            Validate.AttributeEqual(repo.FrmTabProjekt.ProjektnrInfo, "Text", PROJ_NR_K2002_2);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='1') on item 'FrmTabProjekt.Register_Phasen.Phasen_Zeilen.Row1.ColPhasPspCodeRow1'.", repo.FrmTabProjekt.Register_Phasen.Phasen_Zeilen.Row1.ColPhasPspCodeRow1Info, new RecordItemIndex(1));
            Validate.AttributeEqual(repo.FrmTabProjekt.Register_Phasen.Phasen_Zeilen.Row1.ColPhasPspCodeRow1Info, "Text", "1");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='10') on item 'FrmTabProjekt.Register_Phasen.Phasen_Zeilen.Row1.ColPhasCdRow1'.", repo.FrmTabProjekt.Register_Phasen.Phasen_Zeilen.Row1.ColPhasCdRow1Info, new RecordItemIndex(2));
            Validate.AttributeEqual(repo.FrmTabProjekt.Register_Phasen.Phasen_Zeilen.Row1.ColPhasCdRow1Info, "Text", "10");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='Projektleitung') on item 'FrmTabProjekt.Register_Phasen.Phasen_Zeilen.Row1.ColPhasBezRow1'.", repo.FrmTabProjekt.Register_Phasen.Phasen_Zeilen.Row1.ColPhasBezRow1Info, new RecordItemIndex(3));
            Validate.AttributeEqual(repo.FrmTabProjekt.Register_Phasen.Phasen_Zeilen.Row1.ColPhasBezRow1Info, "Text", "Projektleitung");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='4') on item 'FrmTabProjekt.Register_Phasen.Phasen_Zeilen.Row4.ColPhasPspCodeRow4'.", repo.FrmTabProjekt.Register_Phasen.Phasen_Zeilen.Row4.ColPhasPspCodeRow4Info, new RecordItemIndex(4));
            Validate.AttributeEqual(repo.FrmTabProjekt.Register_Phasen.Phasen_Zeilen.Row4.ColPhasPspCodeRow4Info, "Text", "4");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='600') on item 'FrmTabProjekt.Register_Phasen.Phasen_Zeilen.Row4.ColPhasCdRow4'.", repo.FrmTabProjekt.Register_Phasen.Phasen_Zeilen.Row4.ColPhasCdRow4Info, new RecordItemIndex(5));
            Validate.AttributeEqual(repo.FrmTabProjekt.Register_Phasen.Phasen_Zeilen.Row4.ColPhasCdRow4Info, "Text", "600");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='*** Sondermodule ***') on item 'FrmTabProjekt.Register_Phasen.Phasen_Zeilen.Row4.ColPhasBezRow4'.", repo.FrmTabProjekt.Register_Phasen.Phasen_Zeilen.Row4.ColPhasBezRow4Info, new RecordItemIndex(6));
            Validate.AttributeEqual(repo.FrmTabProjekt.Register_Phasen.Phasen_Zeilen.Row4.ColPhasBezRow4Info, "Text", "*** Sondermodule ***");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='5') on item 'FrmTabProjekt.Register_Phasen.Phasen_Zeilen.Row14.ColPhasPspCodeRow14'.", repo.FrmTabProjekt.Register_Phasen.Phasen_Zeilen.Row14.ColPhasPspCodeRow14Info, new RecordItemIndex(7));
            Validate.AttributeEqual(repo.FrmTabProjekt.Register_Phasen.Phasen_Zeilen.Row14.ColPhasPspCodeRow14Info, "Text", "5");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='700') on item 'FrmTabProjekt.Register_Phasen.Phasen_Zeilen.Row14.ColPhasCdRow14'.", repo.FrmTabProjekt.Register_Phasen.Phasen_Zeilen.Row14.ColPhasCdRow14Info, new RecordItemIndex(8));
            Validate.AttributeEqual(repo.FrmTabProjekt.Register_Phasen.Phasen_Zeilen.Row14.ColPhasCdRow14Info, "Text", "700");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='*** Administration / nicht verrechenbare Tätigkeiten ***') on item 'FrmTabProjekt.Register_Phasen.Phasen_Zeilen.Row14.ColPhasBezRow14'.", repo.FrmTabProjekt.Register_Phasen.Phasen_Zeilen.Row14.ColPhasBezRow14Info, new RecordItemIndex(9));
            Validate.AttributeEqual(repo.FrmTabProjekt.Register_Phasen.Phasen_Zeilen.Row14.ColPhasBezRow14Info, "Text", "*** Administration / nicht verrechenbare Tätigkeiten ***");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='5.3') on item 'FrmTabProjekt.Register_Phasen.Phasen_Zeilen.Row17.ColPhasPspCodeRow17'.", repo.FrmTabProjekt.Register_Phasen.Phasen_Zeilen.Row17.ColPhasPspCodeRow17Info, new RecordItemIndex(10));
            Validate.AttributeEqual(repo.FrmTabProjekt.Register_Phasen.Phasen_Zeilen.Row17.ColPhasPspCodeRow17Info, "Text", "5.3");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='750') on item 'FrmTabProjekt.Register_Phasen.Phasen_Zeilen.Row17.ColPhasCdRow17'.", repo.FrmTabProjekt.Register_Phasen.Phasen_Zeilen.Row17.ColPhasCdRow17Info, new RecordItemIndex(11));
            Validate.AttributeEqual(repo.FrmTabProjekt.Register_Phasen.Phasen_Zeilen.Row17.ColPhasCdRow17Info, "Text", "750");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='Support durch Consultant') on item 'FrmTabProjekt.Register_Phasen.Phasen_Zeilen.Row17.ColPhasBezRow17'.", repo.FrmTabProjekt.Register_Phasen.Phasen_Zeilen.Row17.ColPhasBezRow17Info, new RecordItemIndex(12));
            Validate.AttributeEqual(repo.FrmTabProjekt.Register_Phasen.Phasen_Zeilen.Row17.ColPhasBezRow17Info, "Text", "Support durch Consultant");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='6') on item 'FrmTabProjekt.Register_Phasen.Phasen_Zeilen.Row20.ColPhasPspCodeRow20'.", repo.FrmTabProjekt.Register_Phasen.Phasen_Zeilen.Row20.ColPhasPspCodeRow20Info, new RecordItemIndex(13));
            Validate.AttributeEqual(repo.FrmTabProjekt.Register_Phasen.Phasen_Zeilen.Row20.ColPhasPspCodeRow20Info, "Text", "6");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='RP') on item 'FrmTabProjekt.Register_Phasen.Phasen_Zeilen.Row20.ColPhasCdRow20'.", repo.FrmTabProjekt.Register_Phasen.Phasen_Zeilen.Row20.ColPhasCdRow20Info, new RecordItemIndex(14));
            Validate.AttributeEqual(repo.FrmTabProjekt.Register_Phasen.Phasen_Zeilen.Row20.ColPhasCdRow20Info, "Text", "RP");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='Ressourcenplanung') on item 'FrmTabProjekt.Register_Phasen.Phasen_Zeilen.Row20.ColPhasBezRow20'.", repo.FrmTabProjekt.Register_Phasen.Phasen_Zeilen.Row20.ColPhasBezRow20Info, new RecordItemIndex(15));
            Validate.AttributeEqual(repo.FrmTabProjekt.Register_Phasen.Phasen_Zeilen.Row20.ColPhasBezRow20Info, "Text", "Ressourcenplanung");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='6.2') on item 'FrmTabProjekt.Register_Phasen.Phasen_Zeilen.Row22.ColPhasPspCodeRow22'.", repo.FrmTabProjekt.Register_Phasen.Phasen_Zeilen.Row22.ColPhasPspCodeRow22Info, new RecordItemIndex(16));
            Validate.AttributeEqual(repo.FrmTabProjekt.Register_Phasen.Phasen_Zeilen.Row22.ColPhasPspCodeRow22Info, "Text", "6.2");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='RP2') on item 'FrmTabProjekt.Register_Phasen.Phasen_Zeilen.Row22.ColPhasCdRow22'.", repo.FrmTabProjekt.Register_Phasen.Phasen_Zeilen.Row22.ColPhasCdRow22Info, new RecordItemIndex(17));
            Validate.AttributeEqual(repo.FrmTabProjekt.Register_Phasen.Phasen_Zeilen.Row22.ColPhasCdRow22Info, "Text", "RP2");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='RP - Angebot') on item 'FrmTabProjekt.Register_Phasen.Phasen_Zeilen.Row22.ColPhasBezRow22'.", repo.FrmTabProjekt.Register_Phasen.Phasen_Zeilen.Row22.ColPhasBezRow22Info, new RecordItemIndex(18));
            Validate.AttributeEqual(repo.FrmTabProjekt.Register_Phasen.Phasen_Zeilen.Row22.ColPhasBezRow22Info, "Text", "RP - Angebot");
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
