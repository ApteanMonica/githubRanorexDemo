///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace Z_PROJ_005.Recordings
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Projekt_K2002_2_Phasen_600_Z4_750_Z17_loeschen recording.
    /// </summary>
    [TestModule("b0129d85-d179-497b-a951-37570db003dc", ModuleType.Recording, 1)]
    public partial class Projekt_K2002_2_Phasen_600_Z4_750_Z17_loeschen : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::Z_PROJ_005.Z_PROJ_005Repository repository.
        /// </summary>
        public static global::Z_PROJ_005.Z_PROJ_005Repository repo = global::Z_PROJ_005.Z_PROJ_005Repository.Instance;

        static Projekt_K2002_2_Phasen_600_Z4_750_Z17_loeschen instance = new Projekt_K2002_2_Phasen_600_Z4_750_Z17_loeschen();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Projekt_K2002_2_Phasen_600_Z4_750_Z17_loeschen()
        {
            PROJ_NR_K2002_2 = "K2002_2";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Projekt_K2002_2_Phasen_600_Z4_750_Z17_loeschen Instance
        {
            get { return instance; }
        }

#region Variables

        string _PROJ_NR_K2002_2;

        /// <summary>
        /// Gets or sets the value of variable PROJ_NR_K2002_2.
        /// </summary>
        [TestVariable("325dd4d8-238b-4445-9059-11ed155c6fef")]
        public string PROJ_NR_K2002_2
        {
            get { return _PROJ_NR_K2002_2; }
            set { _PROJ_NR_K2002_2 = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'FrmTabProjekt.TitleBar100ProjektVerwalten'.", repo.FrmTabProjekt.TitleBar100ProjektVerwaltenInfo, new RecordItemIndex(0));
            Validate.Exists(repo.FrmTabProjekt.TitleBar100ProjektVerwaltenInfo);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$PROJ_NR_K2002_2) on item 'FrmTabProjekt.Projektnr'.", repo.FrmTabProjekt.ProjektnrInfo, new RecordItemIndex(1));
            Validate.AttributeEqual(repo.FrmTabProjekt.ProjektnrInfo, "Text", PROJ_NR_K2002_2);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmTabProjekt.Register_Phasen.Phasen_Zeilen.Row4.Row4Column0' at Center.", repo.FrmTabProjekt.Register_Phasen.Phasen_Zeilen.Row4.Row4Column0Info, new RecordItemIndex(2));
            repo.FrmTabProjekt.Register_Phasen.Phasen_Zeilen.Row4.Row4Column0.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{LControlKey down}' with focus on 'FrmTabProjekt.Register_Phasen.Phasen_Zeilen.Row4.Row4Column0'.", repo.FrmTabProjekt.Register_Phasen.Phasen_Zeilen.Row4.Row4Column0Info, new RecordItemIndex(3));
            repo.FrmTabProjekt.Register_Phasen.Phasen_Zeilen.Row4.Row4Column0.PressKeys("{LControlKey down}");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmTabProjekt.Register_Phasen.Phasen_Zeilen.Row17.Row17Column0' at Center.", repo.FrmTabProjekt.Register_Phasen.Phasen_Zeilen.Row17.Row17Column0Info, new RecordItemIndex(4));
            repo.FrmTabProjekt.Register_Phasen.Phasen_Zeilen.Row17.Row17Column0.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{LControlKey up}' with focus on 'FrmTabProjekt.Register_Phasen.Phasen_Zeilen.Row17.Row17Column0'.", repo.FrmTabProjekt.Register_Phasen.Phasen_Zeilen.Row17.Row17Column0Info, new RecordItemIndex(5));
            repo.FrmTabProjekt.Register_Phasen.Phasen_Zeilen.Row17.Row17Column0.PressKeys("{LControlKey up}");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Delete' Press.", new RecordItemIndex(6));
            Keyboard.Press(System.Windows.Forms.Keys.Delete, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='Beim Löschen von Projektphasen werden auch Arbeitspakte und Meilensteine der Projektphase gelöscht!\r\nTrotzdem fortfahren?') on item 'DlgMessageBox.LabelMeldungstext'.", repo.DlgMessageBox.LabelMeldungstextInfo, new RecordItemIndex(7));
            Validate.AttributeEqual(repo.DlgMessageBox.LabelMeldungstextInfo, "Text", "Beim Löschen von Projektphasen werden auch Arbeitspakte und Meilensteine der Projektphase gelöscht!\r\nTrotzdem fortfahren?");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'DlgMessageBox.Button0' at Center.", repo.DlgMessageBox.Button0Info, new RecordItemIndex(8));
            repo.DlgMessageBox.Button0.Click();
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating ContainsImage (Screenshot: 'Screenshot1' with region {X=20,Y=121,Width=333,Height=422}) on item 'FrmTabProjekt.Register_Phasen.ClientArea'.", repo.FrmTabProjekt.Register_Phasen.ClientAreaInfo, new RecordItemIndex(9));
            //Validate.ContainsImage(repo.FrmTabProjekt.Register_Phasen.ClientAreaInfo, ClientArea_Screenshot1, ClientArea_Screenshot1_Options);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmTabProjekt.PbDataAccessSave' at Center.", repo.FrmTabProjekt.PbDataAccessSaveInfo, new RecordItemIndex(10));
            repo.FrmTabProjekt.PbDataAccessSave.Click();
            
        }

#region Image Feature Data
        /// <summary>
        /// DO NOT REFERENCE THIS CODE  - auto generated
        /// </summary>
        CompressedImage ClientArea_Screenshot1
        { get { return repo.FrmTabProjekt.Register_Phasen.ClientAreaInfo.GetScreenshot1(new Rectangle(20, 121, 333, 422)); } }

        /// <summary>
        /// DO NOT REFERENCE THIS CODE  - auto generated
        /// </summary>
        Imaging.FindOptions ClientArea_Screenshot1_Options
        { get { return Imaging.FindOptions.Default; } }

#endregion
    }
#pragma warning restore 0436
}
