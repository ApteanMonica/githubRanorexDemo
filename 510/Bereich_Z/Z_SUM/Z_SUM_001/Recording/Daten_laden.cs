///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace Z_SUM_001.Recording
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Daten_laden recording.
    /// </summary>
    [TestModule("6088b96c-ff60-4bfb-832c-8d0cda9f33fe", ModuleType.Recording, 1)]
    public partial class Daten_laden : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::Z_SUM_001.Z_SUM_001Repository repository.
        /// </summary>
        public static global::Z_SUM_001.Z_SUM_001Repository repo = global::Z_SUM_001.Z_SUM_001Repository.Instance;

        static Daten_laden instance = new Daten_laden();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Daten_laden()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Daten_laden Instance
        {
            get { return instance; }
        }

#region Variables

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmMain.PbDataAccessNeu' at Center.", repo.FrmMain.PbDataAccessNeuInfo, new RecordItemIndex(0));
            //repo.FrmMain.PbDataAccessNeu.Click();
            
            //Report.Log(ReportLevel.Info, "Keyboard", "Key 'Delete' Press.", new RecordItemIndex(1));
            //Keyboard.Press(System.Windows.Forms.Keys.Delete, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            //Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '01.02.2022'.", new RecordItemIndex(2));
            //Keyboard.Press("01.02.2022");
            
            //Report.Log(ReportLevel.Info, "Keyboard", "Key 'Tab' Press.", new RecordItemIndex(3));
            //Keyboard.Press(System.Windows.Forms.Keys.Tab, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            //Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '28.02.2022{Tab}'.", new RecordItemIndex(4));
            //Keyboard.Press("28.02.2022{Tab}");
            
            //Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'sum_001_E{Tab down}'.", new RecordItemIndex(5));
            //Keyboard.Press("sum_001_E{Tab down}");
            
            // Header text
            Report.Log(ReportLevel.Info, "Section", "Header text", new RecordItemIndex(6));
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmMain.PbDataAccessNeu' at Center.", repo.FrmMain.PbDataAccessNeuInfo, new RecordItemIndex(7));
            repo.FrmMain.PbDataAccessNeu.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '01.02.2022' with focus on 'FrmMain.Einschraenkungen.Df_Dt_Von_Version_521_510_angepasst'.", repo.FrmMain.Einschraenkungen.Df_Dt_Von_Version_521_510_angepasstInfo, new RecordItemIndex(8));
            repo.FrmMain.Einschraenkungen.Df_Dt_Von_Version_521_510_angepasst.PressKeys("01.02.2022");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='01.02.2022') on item 'FrmMain.Einschraenkungen.Df_Dt_Von_Version_521_510_angepasst'.", repo.FrmMain.Einschraenkungen.Df_Dt_Von_Version_521_510_angepasstInfo, new RecordItemIndex(9));
            Validate.AttributeEqual(repo.FrmMain.Einschraenkungen.Df_Dt_Von_Version_521_510_angepasstInfo, "Text", "01.02.2022");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Tab' Press.", new RecordItemIndex(10));
            Keyboard.Press(System.Windows.Forms.Keys.Tab, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            // Zeitraum bis geändert von 28.02.2022 auf 06.02 um zu sehen ob der Testfall dann in der Nacht ohne Fehler durchläuft./Dementsprechend wird auch nur die Erste Woche überpürft rest wird ausgeblendet!
            Report.Log(ReportLevel.Info, "Keyboard", "Zeitraum bis geändert von 28.02.2022 auf 06.02 um zu sehen ob der Testfall dann in der Nacht ohne Fehler durchläuft./Dementsprechend wird auch nur die Erste Woche überpürft rest wird ausgeblendet!\r\nKey sequence '28.02.2022' with focus on 'FrmMain.Einschraenkungen.Df_Dt_Bis_Version_521_510_angepasst'.", repo.FrmMain.Einschraenkungen.Df_Dt_Bis_Version_521_510_angepasstInfo, new RecordItemIndex(11));
            repo.FrmMain.Einschraenkungen.Df_Dt_Bis_Version_521_510_angepasst.PressKeys("28.02.2022");
            
            // Zeitraum bis geändert von 28.02.2022 auf 06.02 um zu sehen ob der Testfall dann in der Nacht ohne Fehler durchläuft./Dementsprechend wird auch nur die Erste Woche überpürft rest wird ausgeblendet!
            Report.Log(ReportLevel.Info, "Validation", "Zeitraum bis geändert von 28.02.2022 auf 06.02 um zu sehen ob der Testfall dann in der Nacht ohne Fehler durchläuft./Dementsprechend wird auch nur die Erste Woche überpürft rest wird ausgeblendet!\r\nValidating AttributeEqual (Text='28.02.2022') on item 'FrmMain.Einschraenkungen.Df_Dt_Bis_Version_521_510_angepasst'.", repo.FrmMain.Einschraenkungen.Df_Dt_Bis_Version_521_510_angepasstInfo, new RecordItemIndex(12));
            Validate.AttributeEqual(repo.FrmMain.Einschraenkungen.Df_Dt_Bis_Version_521_510_angepasstInfo, "Text", "28.02.2022");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Tab' Press.", new RecordItemIndex(13));
            Keyboard.Press(System.Windows.Forms.Keys.Tab, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'sum_001_E' with focus on 'FrmMain.Einschraenkungen.Pers_Nr_angepasst_fuer_521_510'.", repo.FrmMain.Einschraenkungen.Pers_Nr_angepasst_fuer_521_510Info, new RecordItemIndex(14));
            repo.FrmMain.Einschraenkungen.Pers_Nr_angepasst_fuer_521_510.PressKeys("sum_001_E");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='SUM_001_E') on item 'FrmMain.Einschraenkungen.Pers_Nr_angepasst_fuer_521_510'.", repo.FrmMain.Einschraenkungen.Pers_Nr_angepasst_fuer_521_510Info, new RecordItemIndex(15));
            Validate.AttributeEqual(repo.FrmMain.Einschraenkungen.Pers_Nr_angepasst_fuer_521_510Info, "Text", "SUM_001_E");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Tab' Press.", new RecordItemIndex(16));
            Keyboard.Press(System.Windows.Forms.Keys.Tab, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
