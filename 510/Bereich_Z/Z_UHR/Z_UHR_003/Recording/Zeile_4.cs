///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace Z_UHR_003.Recording
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Zeile_4 recording.
    /// </summary>
    [TestModule("10e2b8a2-4523-4122-bc05-5613e3b84aae", ModuleType.Recording, 1)]
    public partial class Zeile_4 : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::Z_UHR_003.Z_UHR_003Repository repository.
        /// </summary>
        public static global::Z_UHR_003.Z_UHR_003Repository repo = global::Z_UHR_003.Z_UHR_003Repository.Instance;

        static Zeile_4 instance = new Zeile_4();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Zeile_4()
        {
            Datum = "01.07.2022";
            Uhrzeit_beginn_2 = "13:30";
            Uhrzeit_Ende_2 = "16:30";
            Zeittyp_im_Haus = "im Hause: ";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Zeile_4 Instance
        {
            get { return instance; }
        }

#region Variables

        string _Datum;

        /// <summary>
        /// Gets or sets the value of variable Datum.
        /// </summary>
        [TestVariable("6010963e-6701-4333-b5ac-516acb407887")]
        public string Datum
        {
            get { return _Datum; }
            set { _Datum = value; }
        }

        string _Uhrzeit_beginn_2;

        /// <summary>
        /// Gets or sets the value of variable Uhrzeit_beginn_2.
        /// </summary>
        [TestVariable("5374cf67-dde0-46a4-b82f-eea808c08150")]
        public string Uhrzeit_beginn_2
        {
            get { return _Uhrzeit_beginn_2; }
            set { _Uhrzeit_beginn_2 = value; }
        }

        string _Uhrzeit_Ende_2;

        /// <summary>
        /// Gets or sets the value of variable Uhrzeit_Ende_2.
        /// </summary>
        [TestVariable("d3ca6c10-2ac5-41b8-9289-88e9d89683bd")]
        public string Uhrzeit_Ende_2
        {
            get { return _Uhrzeit_Ende_2; }
            set { _Uhrzeit_Ende_2 = value; }
        }

        string _Zeittyp_im_Haus;

        /// <summary>
        /// Gets or sets the value of variable Zeittyp_im_Haus.
        /// </summary>
        [TestVariable("28d152a8-9188-455e-8bdb-215d702e6278")]
        public string Zeittyp_im_Haus
        {
            get { return _Zeittyp_im_Haus; }
            set { _Zeittyp_im_Haus = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='Fr') on item 'Form100ZeitsystemStechuhrAuswert.Zeile_4.ColTagRow4'.", repo.Form100ZeitsystemStechuhrAuswert.Zeile_4.ColTagRow4Info, new RecordItemIndex(0));
            Validate.AttributeEqual(repo.Form100ZeitsystemStechuhrAuswert.Zeile_4.ColTagRow4Info, "Text", "Fr");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Datum) on item 'Form100ZeitsystemStechuhrAuswert.Zeile_4.ColDatumRow4'.", repo.Form100ZeitsystemStechuhrAuswert.Zeile_4.ColDatumRow4Info, new RecordItemIndex(1));
            Validate.AttributeEqual(repo.Form100ZeitsystemStechuhrAuswert.Zeile_4.ColDatumRow4Info, "Text", Datum);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (Text>$Uhrzeit_beginn_2) on item 'Form100ZeitsystemStechuhrAuswert.Zeile_4.ColUhrDtbeginnRow4'.", repo.Form100ZeitsystemStechuhrAuswert.Zeile_4.ColUhrDtbeginnRow4Info, new RecordItemIndex(2));
            Validate.AttributeContains(repo.Form100ZeitsystemStechuhrAuswert.Zeile_4.ColUhrDtbeginnRow4Info, "Text", Uhrzeit_beginn_2);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (Text>$Uhrzeit_Ende_2) on item 'Form100ZeitsystemStechuhrAuswert.Zeile_4.ColUhrDtendeRow4'.", repo.Form100ZeitsystemStechuhrAuswert.Zeile_4.ColUhrDtendeRow4Info, new RecordItemIndex(3));
            Validate.AttributeContains(repo.Form100ZeitsystemStechuhrAuswert.Zeile_4.ColUhrDtendeRow4Info, "Text", Uhrzeit_Ende_2);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='') on item 'Form100ZeitsystemStechuhrAuswert.Zeile_4.ColPausenRow4'.", repo.Form100ZeitsystemStechuhrAuswert.Zeile_4.ColPausenRow4Info, new RecordItemIndex(4));
            Validate.AttributeEqual(repo.Form100ZeitsystemStechuhrAuswert.Zeile_4.ColPausenRow4Info, "Text", "");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='03:00') on item 'Form100ZeitsystemStechuhrAuswert.Zeile_4.ColDauerRow4'.", repo.Form100ZeitsystemStechuhrAuswert.Zeile_4.ColDauerRow4Info, new RecordItemIndex(5));
            Validate.AttributeEqual(repo.Form100ZeitsystemStechuhrAuswert.Zeile_4.ColDauerRow4Info, "Text", "03:00");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Zeittyp_im_Haus) on item 'Form100ZeitsystemStechuhrAuswert.Zeile_4.ColTextRow4'.", repo.Form100ZeitsystemStechuhrAuswert.Zeile_4.ColTextRow4Info, new RecordItemIndex(6));
            Validate.AttributeEqual(repo.Form100ZeitsystemStechuhrAuswert.Zeile_4.ColTextRow4Info, "Text", Zeittyp_im_Haus);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
