///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace Z_UHR_004.Recording
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Urlaubsantrag_laden recording.
    /// </summary>
    [TestModule("23993128-6517-42b3-87e1-9001a8794327", ModuleType.Recording, 1)]
    public partial class Urlaubsantrag_laden : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::Z_UHR_004.Z_UHR_003Repository repository.
        /// </summary>
        public static global::Z_UHR_004.Z_UHR_003Repository repo = global::Z_UHR_004.Z_UHR_003Repository.Instance;

        static Urlaubsantrag_laden instance = new Urlaubsantrag_laden();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Urlaubsantrag_laden()
        {
            pers_nr = "Z_UHR_004";
            Mitarbeiter = "Z_UHR_004 - Bürger Simon";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Urlaubsantrag_laden Instance
        {
            get { return instance; }
        }

#region Variables

        string _pers_nr;

        /// <summary>
        /// Gets or sets the value of variable pers_nr.
        /// </summary>
        [TestVariable("dd8d2205-c990-4208-9224-56a826532368")]
        public string pers_nr
        {
            get { return _pers_nr; }
            set { _pers_nr = value; }
        }

        string _Mitarbeiter;

        /// <summary>
        /// Gets or sets the value of variable Mitarbeiter.
        /// </summary>
        [TestVariable("03f94018-c825-41e4-95c0-ab4ab9b19916")]
        public string Mitarbeiter
        {
            get { return _Mitarbeiter; }
            set { _Mitarbeiter = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'DlgKorrekturZeiten.RbDatum' at Center.", repo.DlgKorrekturZeiten.RbDatumInfo, new RecordItemIndex(0));
            repo.DlgKorrekturZeiten.RbDatum.Click();
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left DoubleClick item 'DlgKorrekturZeiten.DfDatumVon' at Center.", repo.DlgKorrekturZeiten.DfDatumVonInfo, new RecordItemIndex(1));
            repo.DlgKorrekturZeiten.DfDatumVon.DoubleClick();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '01.01.2023' with focus on 'DlgKorrekturZeiten.DfDatumVon'.", repo.DlgKorrekturZeiten.DfDatumVonInfo, new RecordItemIndex(2));
            repo.DlgKorrekturZeiten.DfDatumVon.PressKeys("01.01.2023");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Tab' Press.", new RecordItemIndex(3));
            Keyboard.Press(System.Windows.Forms.Keys.Tab, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '28.02.2023' with focus on 'DlgKorrekturZeiten.DfDatumBis'.", repo.DlgKorrekturZeiten.DfDatumBisInfo, new RecordItemIndex(4));
            repo.DlgKorrekturZeiten.DfDatumBis.PressKeys("28.02.2023");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Tab' Press.", new RecordItemIndex(5));
            Keyboard.Press(System.Windows.Forms.Keys.Tab, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Checked='True') on item 'DlgKorrekturZeiten.RbDatum'.", repo.DlgKorrekturZeiten.RbDatumInfo, new RecordItemIndex(6));
            Validate.AttributeEqual(repo.DlgKorrekturZeiten.RbDatumInfo, "Checked", "True");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='01012023') on item 'DlgKorrekturZeiten.DfDatumVon'.", repo.DlgKorrekturZeiten.DfDatumVonInfo, new RecordItemIndex(7));
            Validate.AttributeEqual(repo.DlgKorrekturZeiten.DfDatumVonInfo, "Text", "01012023");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='28022023') on item 'DlgKorrekturZeiten.DfDatumBis'.", repo.DlgKorrekturZeiten.DfDatumBisInfo, new RecordItemIndex(8));
            Validate.AttributeEqual(repo.DlgKorrekturZeiten.DfDatumBisInfo, "Text", "28022023");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'DlgKorrekturZeiten.PbDataAccessLaden' at Center.", repo.DlgKorrekturZeiten.PbDataAccessLadenInfo, new RecordItemIndex(9));
            repo.DlgKorrekturZeiten.PbDataAccessLaden.Click();
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
