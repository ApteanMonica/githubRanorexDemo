///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace Z_UHR_004.Recording
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Urlaub_genehmigen recording.
    /// </summary>
    [TestModule("704e9c3c-b17f-429c-82f4-7472da33c249", ModuleType.Recording, 1)]
    public partial class Urlaub_genehmigen : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::Z_UHR_004.Z_UHR_004Repository repository.
        /// </summary>
        public static global::Z_UHR_004.Z_UHR_004Repository repo = global::Z_UHR_004.Z_UHR_004Repository.Instance;

        static Urlaub_genehmigen instance = new Urlaub_genehmigen();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Urlaub_genehmigen()
        {
            Pers_nr = "Z_UHR_004";
            Stauts_nicht_genehmigt = "0";
            Bezeichnung_Status_n_G = "nicht Genehmigt";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Urlaub_genehmigen Instance
        {
            get { return instance; }
        }

#region Variables

        string _Pers_nr;

        /// <summary>
        /// Gets or sets the value of variable Pers_nr.
        /// </summary>
        [TestVariable("c5263977-6bec-486f-bcfd-532f3c9947b2")]
        public string Pers_nr
        {
            get { return _Pers_nr; }
            set { _Pers_nr = value; }
        }

        string _Stauts_nicht_genehmigt;

        /// <summary>
        /// Gets or sets the value of variable Stauts_nicht_genehmigt.
        /// </summary>
        [TestVariable("2bdcba16-ccab-4e92-9c4a-eeddb6832c93")]
        public string Stauts_nicht_genehmigt
        {
            get { return _Stauts_nicht_genehmigt; }
            set { _Stauts_nicht_genehmigt = value; }
        }

        string _Bezeichnung_Status_n_G;

        /// <summary>
        /// Gets or sets the value of variable Bezeichnung_Status_n_G.
        /// </summary>
        [TestVariable("fcf488f0-b08e-46b2-9781-cb19e2f05805")]
        public string Bezeichnung_Status_n_G
        {
            get { return _Bezeichnung_Status_n_G; }
            set { _Bezeichnung_Status_n_G = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Pers_nr) on item 'DlgKorrekturZeiten.Row2.ColPersNrRow2'.", repo.DlgKorrekturZeiten.Row2.ColPersNrRow2Info, new RecordItemIndex(0));
            Validate.AttributeEqual(repo.DlgKorrekturZeiten.Row2.ColPersNrRow2Info, "Text", Pers_nr);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='3') on item 'DlgKorrekturZeiten.Row2.ColZtypCdRow2'.", repo.DlgKorrekturZeiten.Row2.ColZtypCdRow2Info, new RecordItemIndex(1));
            Validate.AttributeEqual(repo.DlgKorrekturZeiten.Row2.ColZtypCdRow2Info, "Text", "3");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='01.02.2023') on item 'DlgKorrekturZeiten.Row2.ColUhrDtbeginnTagRow2'.", repo.DlgKorrekturZeiten.Row2.ColUhrDtbeginnTagRow2Info, new RecordItemIndex(2));
            Validate.AttributeEqual(repo.DlgKorrekturZeiten.Row2.ColUhrDtbeginnTagRow2Info, "Text", "01.02.2023");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='03.02.2023') on item 'DlgKorrekturZeiten.Row2.ColUhrDtendeTagRow2'.", repo.DlgKorrekturZeiten.Row2.ColUhrDtendeTagRow2Info, new RecordItemIndex(3));
            Validate.AttributeEqual(repo.DlgKorrekturZeiten.Row2.ColUhrDtendeTagRow2Info, "Text", "03.02.2023");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Stauts_nicht_genehmigt) on item 'DlgKorrekturZeiten.Row2.ColUhrGenstatusRow2'.", repo.DlgKorrekturZeiten.Row2.ColUhrGenstatusRow2Info, new RecordItemIndex(4));
            Validate.AttributeEqual(repo.DlgKorrekturZeiten.Row2.ColUhrGenstatusRow2Info, "Text", Stauts_nicht_genehmigt);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Bezeichnung_Status_n_G) on item 'DlgKorrekturZeiten.ColUhrGenstatusBezRow3'.", repo.DlgKorrekturZeiten.ColUhrGenstatusBezRow3Info, new RecordItemIndex(5));
            Validate.AttributeEqual(repo.DlgKorrekturZeiten.ColUhrGenstatusBezRow3Info, "Text", Bezeichnung_Status_n_G);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'DlgKorrekturZeiten.Row2.Row2Column0' at Center.", repo.DlgKorrekturZeiten.Row2.Row2Column0Info, new RecordItemIndex(6));
            repo.DlgKorrekturZeiten.Row2.Row2Column0.Click();
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'DlgKorrekturZeiten.PbGenehmigenTool' at Center.", repo.DlgKorrekturZeiten.PbGenehmigenToolInfo, new RecordItemIndex(7));
            repo.DlgKorrekturZeiten.PbGenehmigenTool.Click();
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
