///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace Z_UHR_004.Recording_H_ANSPR
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Urlaubskennzahlen_Monat_1_laden recording.
    /// </summary>
    [TestModule("12ea466d-7d1b-4b99-90c5-a70dbf436443", ModuleType.Recording, 1)]
    public partial class Urlaubskennzahlen_Monat_1_laden : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::Z_UHR_004.Z_UHR_004Repository repository.
        /// </summary>
        public static global::Z_UHR_004.Z_UHR_004Repository repo = global::Z_UHR_004.Z_UHR_004Repository.Instance;

        static Urlaubskennzahlen_Monat_1_laden instance = new Urlaubskennzahlen_Monat_1_laden();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Urlaubskennzahlen_Monat_1_laden()
        {
            Monat_1 = "1";
            Jahr = "2023";
            Pers_nr = "Z_UHR_004";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Urlaubskennzahlen_Monat_1_laden Instance
        {
            get { return instance; }
        }

#region Variables

        string _Monat_1;

        /// <summary>
        /// Gets or sets the value of variable Monat_1.
        /// </summary>
        [TestVariable("87059833-65b6-4027-b38c-feeafe5a6bbb")]
        public string Monat_1
        {
            get { return _Monat_1; }
            set { _Monat_1 = value; }
        }

        string _Jahr;

        /// <summary>
        /// Gets or sets the value of variable Jahr.
        /// </summary>
        [TestVariable("a0171b5c-23d7-4a07-86ec-c685d0169f30")]
        public string Jahr
        {
            get { return _Jahr; }
            set { _Jahr = value; }
        }

        string _Pers_nr;

        /// <summary>
        /// Gets or sets the value of variable Pers_nr.
        /// </summary>
        [TestVariable("0dceba99-d5e3-4c9d-9a4a-29f4b23e2fbd")]
        public string Pers_nr
        {
            get { return _Pers_nr; }
            set { _Pers_nr = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Wait", "Waiting 2m to exist. Associated repository item: 'FormURLUebersicht.TitleBar100UEbersichtUrlaub'", repo.FormURLUebersicht.TitleBar100UEbersichtUrlaubInfo, new ActionTimeout(120000), new RecordItemIndex(0));
            repo.FormURLUebersicht.TitleBar100UEbersichtUrlaubInfo.WaitForExists(120000);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Monat_1' with focus on 'FormURLUebersicht.DfMonat'.", repo.FormURLUebersicht.DfMonatInfo, new RecordItemIndex(1));
            repo.FormURLUebersicht.DfMonat.PressKeys(Monat_1);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Tab' Press with focus on 'FormURLUebersicht.DfMonat'.", repo.FormURLUebersicht.DfMonatInfo, new RecordItemIndex(2));
            Keyboard.PrepareFocus(repo.FormURLUebersicht.DfMonat);
            Keyboard.Press(System.Windows.Forms.Keys.Tab, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Monat_1) on item 'FormURLUebersicht.DfMonat'.", repo.FormURLUebersicht.DfMonatInfo, new RecordItemIndex(3));
            Validate.AttributeEqual(repo.FormURLUebersicht.DfMonatInfo, "Text", Monat_1);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Jahr' with focus on 'FormURLUebersicht.DfJahr'.", repo.FormURLUebersicht.DfJahrInfo, new RecordItemIndex(4));
            repo.FormURLUebersicht.DfJahr.PressKeys(Jahr);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Jahr) on item 'FormURLUebersicht.DfJahr'.", repo.FormURLUebersicht.DfJahrInfo, new RecordItemIndex(5));
            Validate.AttributeEqual(repo.FormURLUebersicht.DfJahrInfo, "Text", Jahr);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Pers_nr' with focus on 'FormURLUebersicht.DfPersNr'.", repo.FormURLUebersicht.DfPersNrInfo, new RecordItemIndex(6));
            repo.FormURLUebersicht.DfPersNr.PressKeys(Pers_nr);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Pers_nr) on item 'FormURLUebersicht.DfPersNr'.", repo.FormURLUebersicht.DfPersNrInfo, new RecordItemIndex(7));
            Validate.AttributeEqual(repo.FormURLUebersicht.DfPersNrInfo, "Text", Pers_nr);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FormURLUebersicht.PbCommonReload' at Center.", repo.FormURLUebersicht.PbCommonReloadInfo, new RecordItemIndex(8));
            repo.FormURLUebersicht.PbCommonReload.Click();
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
