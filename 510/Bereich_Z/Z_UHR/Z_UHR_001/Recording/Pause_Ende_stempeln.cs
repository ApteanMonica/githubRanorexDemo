///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace Z_UHR_001.Recording
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Pause_Ende_stempeln recording.
    /// </summary>
    [TestModule("0dc24657-59b3-469e-8323-5026e430e10b", ModuleType.Recording, 1)]
    public partial class Pause_Ende_stempeln : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::Z_UHR_001.Z_UHR_001Repository repository.
        /// </summary>
        public static global::Z_UHR_001.Z_UHR_001Repository repo = global::Z_UHR_001.Z_UHR_001Repository.Instance;

        static Pause_Ende_stempeln instance = new Pause_Ende_stempeln();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Pause_Ende_stempeln()
        {
            Personal_Nr = "UHR_001_A";
            Uhrzeit_Stunde_Minute = "";
            Uhrzeit_plus_1Minute = "";
            Uhrzeit_plus_2Minuten = "";
            Uhrzeit_plus_3Minuten = "";
            Mitarbeiter = "UHR_001_A - Muster Hans";
            Einlesen_Uhrzeit = "";
            angepasste_Uhrzeit_einlesen = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Pause_Ende_stempeln Instance
        {
            get { return instance; }
        }

#region Variables

        string _Uhrzeit_Stunde_Minute;

        /// <summary>
        /// Gets or sets the value of variable Uhrzeit_Stunde_Minute.
        /// </summary>
        [TestVariable("2b5e20b9-f880-4e1a-8a77-4c1267fac3a7")]
        public string Uhrzeit_Stunde_Minute
        {
            get { return _Uhrzeit_Stunde_Minute; }
            set { _Uhrzeit_Stunde_Minute = value; }
        }

        string _Uhrzeit_plus_1Minute;

        /// <summary>
        /// Gets or sets the value of variable Uhrzeit_plus_1Minute.
        /// </summary>
        [TestVariable("f6430d9f-bd1f-41ea-a087-542e2056f54d")]
        public string Uhrzeit_plus_1Minute
        {
            get { return _Uhrzeit_plus_1Minute; }
            set { _Uhrzeit_plus_1Minute = value; }
        }

        string _Uhrzeit_plus_2Minuten;

        /// <summary>
        /// Gets or sets the value of variable Uhrzeit_plus_2Minuten.
        /// </summary>
        [TestVariable("8b4b5b38-a181-4128-8c7a-fe9e8b287e4f")]
        public string Uhrzeit_plus_2Minuten
        {
            get { return _Uhrzeit_plus_2Minuten; }
            set { _Uhrzeit_plus_2Minuten = value; }
        }

        string _Uhrzeit_plus_3Minuten;

        /// <summary>
        /// Gets or sets the value of variable Uhrzeit_plus_3Minuten.
        /// </summary>
        [TestVariable("bd1ad4b8-ba8f-4a62-98e7-8a6542d3bec2")]
        public string Uhrzeit_plus_3Minuten
        {
            get { return _Uhrzeit_plus_3Minuten; }
            set { _Uhrzeit_plus_3Minuten = value; }
        }

        string _Mitarbeiter;

        /// <summary>
        /// Gets or sets the value of variable Mitarbeiter.
        /// </summary>
        [TestVariable("cbd45f57-da2e-4e39-859d-84e3f0503875")]
        public string Mitarbeiter
        {
            get { return _Mitarbeiter; }
            set { _Mitarbeiter = value; }
        }

        string _Einlesen_Uhrzeit;

        /// <summary>
        /// Gets or sets the value of variable Einlesen_Uhrzeit.
        /// </summary>
        [TestVariable("d2a6e150-d906-4366-a735-58ba60883432")]
        public string Einlesen_Uhrzeit
        {
            get { return _Einlesen_Uhrzeit; }
            set { _Einlesen_Uhrzeit = value; }
        }

        string _angepasste_Uhrzeit_einlesen;

        /// <summary>
        /// Gets or sets the value of variable angepasste_Uhrzeit_einlesen.
        /// </summary>
        [TestVariable("46904bc5-23bd-4ad4-8dfe-46f8410f6600")]
        public string angepasste_Uhrzeit_einlesen
        {
            get { return _angepasste_Uhrzeit_einlesen; }
            set { _angepasste_Uhrzeit_einlesen = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable Personal_Nr.
        /// </summary>
        [TestVariable("85ba92be-e8c9-4c3e-a680-0d97bb55e80e")]
        public string Personal_Nr
        {
            get { return repo.Personal_Nr; }
            set { repo.Personal_Nr = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Delay", "Waiting for 1s.", new RecordItemIndex(0));
            Delay.Duration(1000, false);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmUhr.Tabelle_links_mit_Zeile_mit_Variable_Personal_Nr.Column0_mit_Variable_Personal_Nr' at Center.", repo.FrmUhr.Tabelle_links_mit_Zeile_mit_Variable_Personal_Nr.Column0_mit_Variable_Personal_NrInfo, new RecordItemIndex(1));
            repo.FrmUhr.Tabelle_links_mit_Zeile_mit_Variable_Personal_Nr.Column0_mit_Variable_Personal_Nr.Click();
            
            // Probleme bei Überprüfung mit Repository und Variable in 521
            Report.Log(ReportLevel.Info, "Validation", "Probleme bei Überprüfung mit Repository und Variable in 521\r\nValidating AttributeEqual (Text=$Mitarbeiter) on item 'FrmUhr.Mitarbeiter_510_521'.", repo.FrmUhr.Mitarbeiter_510_521Info, new RecordItemIndex(2));
            Validate.AttributeEqual(repo.FrmUhr.Mitarbeiter_510_521Info, "Text", Mitarbeiter);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmUhr.PbTimecontrolPause' at Center.", repo.FrmUhr.PbTimecontrolPauseInfo, new RecordItemIndex(3));
            repo.FrmUhr.PbTimecontrolPause.Click();
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmUhr.PbRefreshRefresh' at Center.", repo.FrmUhr.PbRefreshRefreshInfo, new RecordItemIndex(4));
            repo.FrmUhr.PbRefreshRefresh.Click();
            
            Uhrzeit_Stunde_Minute = Ranorex.AutomationHelpers.UserCodeCollections.SystemLibrary.GetDateTimeAsString("HH:mm");
            
            // continue on fail (falls es zur Minutenüberschreiung
            try {
                //Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\ncontinue on fail (falls es zur Minutenüberschreiung\r\nValidating AttributeContains (Text>$Uhrzeit_Stunde_Minute) on item 'FrmUhr.Tabelle_links_mit_Zeile_mit_Variable_Personal_Nr.ColUhrDtbeginn_Zeile_mit_Variable_Personal_Nr'.", repo.FrmUhr.Tabelle_links_mit_Zeile_mit_Variable_Personal_Nr.ColUhrDtbeginn_Zeile_mit_Variable_Personal_NrInfo, new RecordItemIndex(6));
                //Validate.AttributeContains(repo.FrmUhr.Tabelle_links_mit_Zeile_mit_Variable_Personal_Nr.ColUhrDtbeginn_Zeile_mit_Variable_Personal_NrInfo, "Text", Uhrzeit_Stunde_Minute, null, false);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(6)); }
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'Text' from item 'FrmUhr.Tabelle_links_mit_Zeile_mit_Variable_Personal_Nr.ColUhrDtbeginn_Zeile_mit_Variable_Personal_Nr' and assigning its value to variable 'Einlesen_Uhrzeit'.", repo.FrmUhr.Tabelle_links_mit_Zeile_mit_Variable_Personal_Nr.ColUhrDtbeginn_Zeile_mit_Variable_Personal_NrInfo, new RecordItemIndex(7));
            Einlesen_Uhrzeit = repo.FrmUhr.Tabelle_links_mit_Zeile_mit_Variable_Personal_Nr.ColUhrDtbeginn_Zeile_mit_Variable_Personal_Nr.Element.GetAttributeValueText("Text");
            
            angepasste_Uhrzeit_einlesen = Ranorex.AutomationHelpers.UserCodeCollections.Aptean.GetDateAsString(Einlesen_Uhrzeit, "HH:mm");
            
            Uhrzeit_plus_1Minute = Ranorex.AutomationHelpers.UserCodeCollections.Aptean.GetDateTimePlus(Uhrzeit_Stunde_Minute, "m", ValueConverter.ArgumentFromString<int>("counter", "1"), "HH:mm");
            
            Ranorex.AutomationHelpers.UserCodeCollections.Aptean.ValidateVar1Var2(angepasste_Uhrzeit_einlesen, Uhrzeit_Stunde_Minute, Uhrzeit_plus_1Minute);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Personal_Nr) on item 'FrmUhr.Tabelle_links_mit_Zeile_mit_Variable_Personal_Nr.ColPersNr_Zeile_mit_Varibale_Personal_Nr'.", repo.FrmUhr.Tabelle_links_mit_Zeile_mit_Variable_Personal_Nr.ColPersNr_Zeile_mit_Varibale_Personal_NrInfo, new RecordItemIndex(11));
            Validate.AttributeEqual(repo.FrmUhr.Tabelle_links_mit_Zeile_mit_Variable_Personal_Nr.ColPersNr_Zeile_mit_Varibale_Personal_NrInfo, "Text", Personal_Nr);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (Text>$Uhrzeit_plus_1Minute) on item 'FrmUhr.Tabelle_links.ColPersNrRow11'.", repo.FrmUhr.Tabelle_links.ColPersNrRow11Info, new RecordItemIndex(12));
            //Validate.AttributeContains(repo.FrmUhr.Tabelle_links.ColPersNrRow11Info, "Text", Uhrzeit_plus_1Minute);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (Text>$Uhrzeit_plus_2Minuten) on item 'FrmUhr.Tabelle_links.ColPersNrRow11'.", repo.FrmUhr.Tabelle_links.ColPersNrRow11Info, new RecordItemIndex(13));
            //Validate.AttributeContains(repo.FrmUhr.Tabelle_links.ColPersNrRow11Info, "Text", Uhrzeit_plus_2Minuten);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (Text>$Uhrzeit_plus_3Minuten) on item 'FrmUhr.Tabelle_links.ColPersNrRow11'.", repo.FrmUhr.Tabelle_links.ColPersNrRow11Info, new RecordItemIndex(14));
            //Validate.AttributeContains(repo.FrmUhr.Tabelle_links.ColPersNrRow11Info, "Text", Uhrzeit_plus_3Minuten);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
