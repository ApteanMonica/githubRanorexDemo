///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace Z_UHR_001.Recording
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Uhrzeit_Minuten_addieren recording.
    /// </summary>
    [TestModule("69c0605a-1878-4cd9-b245-7615eee23f7b", ModuleType.Recording, 1)]
    public partial class Uhrzeit_Minuten_addieren : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::Z_UHR_001.Z_UHR_001Repository repository.
        /// </summary>
        public static global::Z_UHR_001.Z_UHR_001Repository repo = global::Z_UHR_001.Z_UHR_001Repository.Instance;

        static Uhrzeit_Minuten_addieren instance = new Uhrzeit_Minuten_addieren();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Uhrzeit_Minuten_addieren()
        {
            Uhrzeit_Stunde_Minute = "";
            Uhrzeit_plus_1Minute = "";
            Uhrzeit_plus_2Minuten = "";
            Uhrzeit_plus_3Minuten = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Uhrzeit_Minuten_addieren Instance
        {
            get { return instance; }
        }

#region Variables

        string _Uhrzeit_Stunde_Minute;

        /// <summary>
        /// Gets or sets the value of variable Uhrzeit_Stunde_Minute.
        /// </summary>
        [TestVariable("a47e859a-4937-47e7-bcab-2b12a74e6572")]
        public string Uhrzeit_Stunde_Minute
        {
            get { return _Uhrzeit_Stunde_Minute; }
            set { _Uhrzeit_Stunde_Minute = value; }
        }

        string _Uhrzeit_plus_1Minute;

        /// <summary>
        /// Gets or sets the value of variable Uhrzeit_plus_1Minute.
        /// </summary>
        [TestVariable("afa907d3-d866-468a-96fc-a7092d89e4be")]
        public string Uhrzeit_plus_1Minute
        {
            get { return _Uhrzeit_plus_1Minute; }
            set { _Uhrzeit_plus_1Minute = value; }
        }

        string _Uhrzeit_plus_2Minuten;

        /// <summary>
        /// Gets or sets the value of variable Uhrzeit_plus_2Minuten.
        /// </summary>
        [TestVariable("38dd6c7d-dfd3-4c62-9b86-c0ec5bce4c20")]
        public string Uhrzeit_plus_2Minuten
        {
            get { return _Uhrzeit_plus_2Minuten; }
            set { _Uhrzeit_plus_2Minuten = value; }
        }

        string _Uhrzeit_plus_3Minuten;

        /// <summary>
        /// Gets or sets the value of variable Uhrzeit_plus_3Minuten.
        /// </summary>
        [TestVariable("87488cfc-1757-475e-bbcb-d322d1cda51a")]
        public string Uhrzeit_plus_3Minuten
        {
            get { return _Uhrzeit_plus_3Minuten; }
            set { _Uhrzeit_plus_3Minuten = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            //Uhrzeit_Stunde_Minute = Ranorex.AutomationHelpers.UserCodeCollections.SystemLibrary.GetDateTimeAsString("HH:mm");
            
            //Uhrzeit_plus_1Minute = GetHourMinutePlusOne("HH:mm");
            
            //Uhrzeit_plus_2Minuten = GetHourMinutePlusTwo("HH:mm");
            
            //Uhrzeit_plus_3Minuten = GetHourMinutePlusThree("HH:mm");
            
            //Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Uhrzeit_Stunde_Minute'.", new RecordItemIndex(4));
            //Keyboard.Press(Uhrzeit_Stunde_Minute);
            
            //Report.Log(ReportLevel.Info, "Keyboard", "Key 'Enter' Down.", new RecordItemIndex(5));
            //Keyboard.Down(System.Windows.Forms.Keys.Return, Keyboard.DefaultScanCode, true);
            
            //Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Uhrzeit_plus_1Minute'.", new RecordItemIndex(6));
            //Keyboard.Press(Uhrzeit_plus_1Minute);
            
            //Report.Log(ReportLevel.Info, "Keyboard", "Key 'Enter' Press.", new RecordItemIndex(7));
            //Keyboard.Press(System.Windows.Forms.Keys.Return, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            //Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Uhrzeit_plus_2Minuten'.", new RecordItemIndex(8));
            //Keyboard.Press(Uhrzeit_plus_2Minuten);
            
            //Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Uhrzeit_plus_3Minuten'.", new RecordItemIndex(9));
            //Keyboard.Press(Uhrzeit_plus_3Minuten);
            
            //Report.Log(ReportLevel.Info, "Keyboard", "Key 'Enter' Press.", new RecordItemIndex(10));
            //Keyboard.Press(System.Windows.Forms.Keys.Return, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
