///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace Z_UHR_001.Recording
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Beginn_Pause_stempeln recording.
    /// </summary>
    [TestModule("c372970f-69d6-4314-8529-37c06cec665c", ModuleType.Recording, 1)]
    public partial class Beginn_Pause_stempeln : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::Z_UHR_001.Z_UHR_001Repository repository.
        /// </summary>
        public static global::Z_UHR_001.Z_UHR_001Repository repo = global::Z_UHR_001.Z_UHR_001Repository.Instance;

        static Beginn_Pause_stempeln instance = new Beginn_Pause_stempeln();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Beginn_Pause_stempeln()
        {
            Personal_Nr = "UHR_001_A";
            Systemzeit = "";
            Systemzeit_plus_1_Minute = "";
            Stempelzeit_Start_Pause = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Beginn_Pause_stempeln Instance
        {
            get { return instance; }
        }

#region Variables

        string _Systemzeit;

        /// <summary>
        /// Gets or sets the value of variable Systemzeit.
        /// </summary>
        [TestVariable("aa0f31f4-bec7-4a59-964e-59820c789bb6")]
        public string Systemzeit
        {
            get { return _Systemzeit; }
            set { _Systemzeit = value; }
        }

        string _Systemzeit_plus_1_Minute;

        /// <summary>
        /// Gets or sets the value of variable Systemzeit_plus_1_Minute.
        /// </summary>
        [TestVariable("f7105869-9003-4723-8bff-6582f2e186b4")]
        public string Systemzeit_plus_1_Minute
        {
            get { return _Systemzeit_plus_1_Minute; }
            set { _Systemzeit_plus_1_Minute = value; }
        }

        string _Stempelzeit_Start_Pause;

        /// <summary>
        /// Gets or sets the value of variable Stempelzeit_Start_Pause.
        /// </summary>
        [TestVariable("eb9c0bab-2b8d-41ce-892d-9d40b35bd3b8")]
        public string Stempelzeit_Start_Pause
        {
            get { return _Stempelzeit_Start_Pause; }
            set { _Stempelzeit_Start_Pause = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable Personal_Nr.
        /// </summary>
        [TestVariable("0af84285-2514-4b3b-a3ab-f7314fa726f0")]
        public string Personal_Nr
        {
            get { return repo.Personal_Nr; }
            set { repo.Personal_Nr = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Delay", "Waiting for 1s.", new RecordItemIndex(0));
            Delay.Duration(1000, false);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmUhr.Tabelle_links_mit_Zeile_mit_Variable_Personal_Nr.Column0_mit_Variable_Personal_Nr' at Center.", repo.FrmUhr.Tabelle_links_mit_Zeile_mit_Variable_Personal_Nr.Column0_mit_Variable_Personal_NrInfo, new RecordItemIndex(1));
            repo.FrmUhr.Tabelle_links_mit_Zeile_mit_Variable_Personal_Nr.Column0_mit_Variable_Personal_Nr.Click();
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (Text>$Personal_Nr) on item 'FrmUhr.Mitarbeiter_510_521'.", repo.FrmUhr.Mitarbeiter_510_521Info, new RecordItemIndex(2));
            Validate.AttributeContains(repo.FrmUhr.Mitarbeiter_510_521Info, "Text", Personal_Nr);
            
            Systemzeit = Ranorex.AutomationHelpers.UserCodeCollections.SystemLibrary.GetDateTimeAsString("HH:mm");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmUhr.PbTimecontrolPause' at Center.", repo.FrmUhr.PbTimecontrolPauseInfo, new RecordItemIndex(4));
            repo.FrmUhr.PbTimecontrolPause.Click();
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 2m to exist. Associated repository item: 'FrmUhr.Tabelle_links_mit_Zeile_mit_Variable_Personal_Nr.ColUhrDtbeginn_Zeile_mit_Variable_Personal_Nr'", repo.FrmUhr.Tabelle_links_mit_Zeile_mit_Variable_Personal_Nr.ColUhrDtbeginn_Zeile_mit_Variable_Personal_NrInfo, new ActionTimeout(120000), new RecordItemIndex(5));
            repo.FrmUhr.Tabelle_links_mit_Zeile_mit_Variable_Personal_Nr.ColUhrDtbeginn_Zeile_mit_Variable_Personal_NrInfo.WaitForExists(120000);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'Text' from item 'FrmUhr.Tabelle_links_mit_Zeile_mit_Variable_Personal_Nr.ColUhrDtbeginn_Zeile_mit_Variable_Personal_Nr' and assigning its value to variable 'Stempelzeit_Start_Pause'.", repo.FrmUhr.Tabelle_links_mit_Zeile_mit_Variable_Personal_Nr.ColUhrDtbeginn_Zeile_mit_Variable_Personal_NrInfo, new RecordItemIndex(6));
            Stempelzeit_Start_Pause = repo.FrmUhr.Tabelle_links_mit_Zeile_mit_Variable_Personal_Nr.ColUhrDtbeginn_Zeile_mit_Variable_Personal_Nr.Element.GetAttributeValueText("Text");
            
            Stempelzeit_Start_Pause = Ranorex.AutomationHelpers.UserCodeCollections.Aptean.GetDateAsString(Stempelzeit_Start_Pause, "HH:mm");
            
            Systemzeit_plus_1_Minute = Ranorex.AutomationHelpers.UserCodeCollections.Aptean.GetDateTimePlus(Systemzeit, "m", ValueConverter.ArgumentFromString<int>("counter", "1"), "HH:mm");
            
            Ranorex.AutomationHelpers.UserCodeCollections.Aptean.ValidateVar1Var2(Stempelzeit_Start_Pause, Systemzeit, Systemzeit_plus_1_Minute);
            
            Report.Log(ReportLevel.Info, "User", Systemzeit, new RecordItemIndex(10));
            
            Report.Log(ReportLevel.Info, "User", Systemzeit_plus_1_Minute, new RecordItemIndex(11));
            
            Report.Log(ReportLevel.Info, "User", Stempelzeit_Start_Pause, new RecordItemIndex(12));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Personal_Nr) on item 'FrmUhr.Tabelle_links_mit_Zeile_mit_Variable_Personal_Nr.ColPersNr_Zeile_mit_Varibale_Personal_Nr'.", repo.FrmUhr.Tabelle_links_mit_Zeile_mit_Variable_Personal_Nr.ColPersNr_Zeile_mit_Varibale_Personal_NrInfo, new RecordItemIndex(13));
            Validate.AttributeEqual(repo.FrmUhr.Tabelle_links_mit_Zeile_mit_Variable_Personal_Nr.ColPersNr_Zeile_mit_Varibale_Personal_NrInfo, "Text", Personal_Nr);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
