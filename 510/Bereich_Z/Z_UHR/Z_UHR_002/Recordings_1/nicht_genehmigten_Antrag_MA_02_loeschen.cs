///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace Z_UHR_002.Recordings_1
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The nicht_genehmigten_Antrag_MA_02_loeschen recording.
    /// </summary>
    [TestModule("f5733eba-3d93-49a1-9d47-d6a770b34575", ModuleType.Recording, 1)]
    public partial class nicht_genehmigten_Antrag_MA_02_loeschen : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::Z_UHR_002.Z_UHR_002Repository repository.
        /// </summary>
        public static global::Z_UHR_002.Z_UHR_002Repository repo = global::Z_UHR_002.Z_UHR_002Repository.Instance;

        static nicht_genehmigten_Antrag_MA_02_loeschen instance = new nicht_genehmigten_Antrag_MA_02_loeschen();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public nicht_genehmigten_Antrag_MA_02_loeschen()
        {
            Tagesdatum_plus_3 = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static nicht_genehmigten_Antrag_MA_02_loeschen Instance
        {
            get { return instance; }
        }

#region Variables

        string _Tagesdatum_plus_3;

        /// <summary>
        /// Gets or sets the value of variable Tagesdatum_plus_3.
        /// </summary>
        [TestVariable("664cfaee-6b02-4efb-83de-e1ac1ba47918")]
        public string Tagesdatum_plus_3
        {
            get { return _Tagesdatum_plus_3; }
            set { _Tagesdatum_plus_3 = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable Personalnr_MA_02.
        /// </summary>
        [TestVariable("dfd0135f-c7f2-4272-bd41-b4815aa06839")]
        public string Personalnr_MA_02
        {
            get { return repo.Personalnr_MA_02; }
            set { repo.Personalnr_MA_02 = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmUhr.PbExtrasExtras' at Center.", repo.FrmUhr.PbExtrasExtrasInfo, new RecordItemIndex(0));
            repo.FrmUhr.PbExtrasExtras.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Down}{Return}' with focus on 'FrmUhr.PbExtrasExtras'.", repo.FrmUhr.PbExtrasExtrasInfo, new RecordItemIndex(1));
            repo.FrmUhr.PbExtrasExtras.PressKeys("{Down}{Return}");
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 2m to exist. Associated repository item: 'DlgKorrekturZeiten.TitleBar100KorrekturMitarbeiterzeit'", repo.DlgKorrekturZeiten.TitleBar100KorrekturMitarbeiterzeitInfo, new ActionTimeout(120000), new RecordItemIndex(2));
            repo.DlgKorrekturZeiten.TitleBar100KorrekturMitarbeiterzeitInfo.WaitForExists(120000);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (Text>'Korrektur Mitarbeiterzeiten') on item 'DlgKorrekturZeiten.TitleBar100KorrekturMitarbeiterzeit'.", repo.DlgKorrekturZeiten.TitleBar100KorrekturMitarbeiterzeitInfo, new RecordItemIndex(3));
            Validate.AttributeContains(repo.DlgKorrekturZeiten.TitleBar100KorrekturMitarbeiterzeitInfo, "Text", "Korrektur Mitarbeiterzeiten");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'DlgKorrekturZeiten.RbDatum' at Center.", repo.DlgKorrekturZeiten.RbDatumInfo, new RecordItemIndex(4));
            repo.DlgKorrekturZeiten.RbDatum.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Tagesdatum_plus_3' with focus on 'DlgKorrekturZeiten.Text_Datum_richtiges_Format'.", repo.DlgKorrekturZeiten.Text_Datum_richtiges_FormatInfo, new RecordItemIndex(5));
            repo.DlgKorrekturZeiten.Text_Datum_richtiges_Format.PressKeys(Tagesdatum_plus_3);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Tab' Press.", new RecordItemIndex(6));
            Keyboard.Press(System.Windows.Forms.Keys.Tab, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'DlgKorrekturZeiten.PbDataAccessLaden' at Center.", repo.DlgKorrekturZeiten.PbDataAccessLadenInfo, new RecordItemIndex(7));
            repo.DlgKorrekturZeiten.PbDataAccessLaden.Click();
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (Checked>'True') on item 'DlgKorrekturZeiten.RbDatum'.", repo.DlgKorrekturZeiten.RbDatumInfo, new RecordItemIndex(8));
            Validate.AttributeContains(repo.DlgKorrekturZeiten.RbDatumInfo, "Checked", "True");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (Text>$Tagesdatum_plus_3) on item 'DlgKorrekturZeiten.Text_Datum_richtiges_Format'.", repo.DlgKorrekturZeiten.Text_Datum_richtiges_FormatInfo, new RecordItemIndex(9));
            Validate.AttributeContains(repo.DlgKorrekturZeiten.Text_Datum_richtiges_FormatInfo, "Text", Tagesdatum_plus_3);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'DlgKorrekturZeiten.erfasste_Urlaubszeile_mit_Variable_Personalnr_MA_02.Row_mit_Variable_MA_02'.", repo.DlgKorrekturZeiten.erfasste_Urlaubszeile_mit_Variable_Personalnr_MA_02.Row_mit_Variable_MA_02Info, new RecordItemIndex(10));
            Validate.Exists(repo.DlgKorrekturZeiten.erfasste_Urlaubszeile_mit_Variable_Personalnr_MA_02.Row_mit_Variable_MA_02Info);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'DlgKorrekturZeiten.erfasste_Urlaubszeile_mit_Variable_Personalnr_MA_02.Row_mit_Variable_MA_02' at Center.", repo.DlgKorrekturZeiten.erfasste_Urlaubszeile_mit_Variable_Personalnr_MA_02.Row_mit_Variable_MA_02Info, new RecordItemIndex(11));
            repo.DlgKorrekturZeiten.erfasste_Urlaubszeile_mit_Variable_Personalnr_MA_02.Row_mit_Variable_MA_02.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Delete' Press with focus on 'DlgKorrekturZeiten.erfasste_Urlaubszeile_mit_Variable_Personalnr_MA_02.Row_mit_Variable_MA_02'.", repo.DlgKorrekturZeiten.erfasste_Urlaubszeile_mit_Variable_Personalnr_MA_02.Row_mit_Variable_MA_02Info, new RecordItemIndex(12));
            Keyboard.PrepareFocus(repo.DlgKorrekturZeiten.erfasste_Urlaubszeile_mit_Variable_Personalnr_MA_02.Row_mit_Variable_MA_02);
            Keyboard.Press(System.Windows.Forms.Keys.Delete, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'F12' Press.", new RecordItemIndex(13));
            Keyboard.Press(System.Windows.Forms.Keys.F12, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
