///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace Z_REISE_001.Recording
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Ueberpruefung_erfasste_Daten_Teil_2 recording.
    /// </summary>
    [TestModule("79410687-b969-4167-a005-6af3cc5f47db", ModuleType.Recording, 1)]
    public partial class Ueberpruefung_erfasste_Daten_Teil_2 : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::Z_REISE_001.Z_REISE_001Repository repository.
        /// </summary>
        public static global::Z_REISE_001.Z_REISE_001Repository repo = global::Z_REISE_001.Z_REISE_001Repository.Instance;

        static Ueberpruefung_erfasste_Daten_Teil_2 instance = new Ueberpruefung_erfasste_Daten_Teil_2();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Ueberpruefung_erfasste_Daten_Teil_2()
        {
            Firmenherkunft = "100";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Ueberpruefung_erfasste_Daten_Teil_2 Instance
        {
            get { return instance; }
        }

#region Variables

        string _Firmenherkunft;

        /// <summary>
        /// Gets or sets the value of variable Firmenherkunft.
        /// </summary>
        [TestVariable("acf99fd3-6491-4376-a6a5-55a96b9e578d")]
        public string Firmenherkunft
        {
            get { return _Firmenherkunft; }
            set { _Firmenherkunft = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='0') on item 'FormRart.FlexGrid1.ColRartaArtRow1'.", repo.FormRart.FlexGrid1.ColRartaArtRow1Info, new RecordItemIndex(0));
            Validate.AttributeEqual(repo.FormRart.FlexGrid1.ColRartaArtRow1Info, "Text", "0");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='Reisegrund') on item 'FormRart.FlexGrid1.ColRartaArtBezRow1'.", repo.FormRart.FlexGrid1.ColRartaArtBezRow1Info, new RecordItemIndex(1));
            Validate.AttributeEqual(repo.FormRart.FlexGrid1.ColRartaArtBezRow1Info, "Text", "Reisegrund");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='KB') on item 'FormRart.FlexGrid1.ColRartaWertRow1'.", repo.FormRart.FlexGrid1.ColRartaWertRow1Info, new RecordItemIndex(2));
            Validate.AttributeEqual(repo.FormRart.FlexGrid1.ColRartaWertRow1Info, "Text", "KB");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='01.01.1900') on item 'FormRart.FlexGrid1.ColDatumVonRow1'.", repo.FormRart.FlexGrid1.ColDatumVonRow1Info, new RecordItemIndex(3));
            Validate.AttributeEqual(repo.FormRart.FlexGrid1.ColDatumVonRow1Info, "Text", "01.01.1900");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='31.12.2999') on item 'FormRart.FlexGrid1.ColDatumBisRow1'.", repo.FormRart.FlexGrid1.ColDatumBisRow1Info, new RecordItemIndex(4));
            Validate.AttributeEqual(repo.FormRart.FlexGrid1.ColDatumBisRow1Info, "Text", "31.12.2999");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FormRart.PbDataAccessSave' at Center.", repo.FormRart.PbDataAccessSaveInfo, new RecordItemIndex(5));
            repo.FormRart.PbDataAccessSave.Click();
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Firmenherkunft) on item 'FormRart.FlexGrid1.ColFirmNrRootRow1'.", repo.FormRart.FlexGrid1.ColFirmNrRootRow1Info, new RecordItemIndex(6));
            Validate.AttributeEqual(repo.FormRart.FlexGrid1.ColFirmNrRootRow1Info, "Text", Firmenherkunft);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
