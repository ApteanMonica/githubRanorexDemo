///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace Z_REISE_001.Recording_Reiseerfassung
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Ueberpruefung_Eingabe_Allgemein recording.
    /// </summary>
    [TestModule("c69fd7fc-f4ef-42a8-9cc4-a79f5987d141", ModuleType.Recording, 1)]
    public partial class Ueberpruefung_Eingabe_Allgemein : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::Z_REISE_001.Z_REISE_001Repository repository.
        /// </summary>
        public static global::Z_REISE_001.Z_REISE_001Repository repo = global::Z_REISE_001.Z_REISE_001Repository.Instance;

        static Ueberpruefung_Eingabe_Allgemein instance = new Ueberpruefung_Eingabe_Allgemein();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Ueberpruefung_Eingabe_Allgemein()
        {
            Datum_Beginn = "20.05.2022";
            Datum_Ende = "20.05.2022";
            Beginn_Uhrzeit = "06:00";
            Ende_Uhrzeit = "17:00";
            Text_Beschreibung = "Besuch Musterkunde";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Ueberpruefung_Eingabe_Allgemein Instance
        {
            get { return instance; }
        }

#region Variables

        string _Datum_Beginn;

        /// <summary>
        /// Gets or sets the value of variable Datum_Beginn.
        /// </summary>
        [TestVariable("f4ee9400-6b86-4ab9-b8bd-e4c9efe0fa44")]
        public string Datum_Beginn
        {
            get { return _Datum_Beginn; }
            set { _Datum_Beginn = value; }
        }

        string _Datum_Ende;

        /// <summary>
        /// Gets or sets the value of variable Datum_Ende.
        /// </summary>
        [TestVariable("f5d4c93d-af66-4e53-9c0a-004d9b4b9750")]
        public string Datum_Ende
        {
            get { return _Datum_Ende; }
            set { _Datum_Ende = value; }
        }

        string _Beginn_Uhrzeit;

        /// <summary>
        /// Gets or sets the value of variable Beginn_Uhrzeit.
        /// </summary>
        [TestVariable("af5c6522-67d6-4e3d-b433-33650c5a3d80")]
        public string Beginn_Uhrzeit
        {
            get { return _Beginn_Uhrzeit; }
            set { _Beginn_Uhrzeit = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable Ende_Uhrzeit.
        /// </summary>
        [TestVariable("8333fb8d-7f58-4b5d-82f1-cab32987a521")]
        public string Ende_Uhrzeit
        {
            get { return repo.Ende_Uhrzeit; }
            set { repo.Ende_Uhrzeit = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable Text_Beschreibung.
        /// </summary>
        [TestVariable("c0d3d02b-2c70-4025-9b8a-4029be729c9c")]
        public string Text_Beschreibung
        {
            get { return repo.Text_Beschreibung; }
            set { repo.Text_Beschreibung = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Datum_Beginn) on item 'FormRk.Beginn'.", repo.FormRk.BeginnInfo, new RecordItemIndex(0));
            Validate.AttributeEqual(repo.FormRk.BeginnInfo, "Text", Datum_Beginn);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Datum_Ende) on item 'FormRk.Ende'.", repo.FormRk.EndeInfo, new RecordItemIndex(1));
            Validate.AttributeEqual(repo.FormRk.EndeInfo, "Text", Datum_Ende);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Beginn_Uhrzeit) on item 'FormRk.TpAllgemein.DfRkDtbeginnZ'.", repo.FormRk.TpAllgemein.DfRkDtbeginnZInfo, new RecordItemIndex(2));
            Validate.AttributeEqual(repo.FormRk.TpAllgemein.DfRkDtbeginnZInfo, "Text", Beginn_Uhrzeit);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Ende_Uhrzeit) on item 'FormRk.TpAllgemein.DfRkDtendeZ'.", repo.FormRk.TpAllgemein.DfRkDtendeZInfo, new RecordItemIndex(3));
            Validate.AttributeEqual(repo.FormRk.TpAllgemein.DfRkDtendeZInfo, "Text", Ende_Uhrzeit);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='KB') on item 'FormRk.DfRgrndCd'.", repo.FormRk.DfRgrndCdInfo, new RecordItemIndex(4));
            Validate.AttributeEqual(repo.FormRk.DfRgrndCdInfo, "Text", "KB");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Text_Beschreibung) on item 'FormRk.TpAllgemein.Beschreibung_511_521'.", repo.FormRk.TpAllgemein.Beschreibung_511_521Info, new RecordItemIndex(5));
            Validate.AttributeEqual(repo.FormRk.TpAllgemein.Beschreibung_511_521Info, "Text", Text_Beschreibung);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FormRk.PbDataAccessSave' at Center.", repo.FormRk.PbDataAccessSaveInfo, new RecordItemIndex(6));
            repo.FormRk.PbDataAccessSave.Click();
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='ENT') on item 'FormRk.TpAllgemein.DfRkStatus'.", repo.FormRk.TpAllgemein.DfRkStatusInfo, new RecordItemIndex(7));
            Validate.AttributeEqual(repo.FormRk.TpAllgemein.DfRkStatusInfo, "Text", "ENT");
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
