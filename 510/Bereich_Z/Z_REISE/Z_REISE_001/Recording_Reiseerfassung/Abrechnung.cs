///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace Z_REISE_001.Recording_Reiseerfassung
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Abrechnung recording.
    /// </summary>
    [TestModule("4b92712d-baff-40de-9618-e983df4e00f2", ModuleType.Recording, 1)]
    public partial class Abrechnung : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::Z_REISE_001.Z_REISE_001Repository repository.
        /// </summary>
        public static global::Z_REISE_001.Z_REISE_001Repository repo = global::Z_REISE_001.Z_REISE_001Repository.Instance;

        static Abrechnung instance = new Abrechnung();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Abrechnung()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Abrechnung Instance
        {
            get { return instance; }
        }

#region Variables

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FormRk.PbShareAktionen' at Center.", repo.FormRk.PbShareAktionenInfo, new RecordItemIndex(0));
            repo.FormRk.PbShareAktionen.Click();
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 2m to exist. Associated repository item: 'DlgDrucken.TitleBar100Drucken'", repo.DlgDrucken.TitleBar100DruckenInfo, new ActionTimeout(120000), new RecordItemIndex(1));
            repo.DlgDrucken.TitleBar100DruckenInfo.WaitForExists(120000);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='[100]  Drucken') on item 'DlgDrucken.TitleBar100Drucken'.", repo.DlgDrucken.TitleBar100DruckenInfo, new RecordItemIndex(2));
            Validate.AttributeEqual(repo.DlgDrucken.TitleBar100DruckenInfo, "Text", "[100]  Drucken");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Checked='True') on item 'DlgDrucken.CbAbrechnen'.", repo.DlgDrucken.CbAbrechnenInfo, new RecordItemIndex(3));
            Validate.AttributeEqual(repo.DlgDrucken.CbAbrechnenInfo, "Checked", "True");
            
            // Problem bei Validation mit Leerzeichen, Workarround: zwei Leerzeichen damit durchläuft
            Report.Log(ReportLevel.Info, "Validation", "Problem bei Validation mit Leerzeichen, Workarround: zwei Leerzeichen damit durchläuft\r\nValidating AttributeEqual (Checked='True') on item 'DlgDrucken.CbDrucken'.", repo.DlgDrucken.CbDruckenInfo, new RecordItemIndex(4));
            Validate.AttributeEqual(repo.DlgDrucken.CbDruckenInfo, "Checked", "True");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'DlgDrucken.PbStart' at Center.", repo.DlgDrucken.PbStartInfo, new RecordItemIndex(5));
            repo.DlgDrucken.PbStart.Click();
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 2m to exist. Associated repository item: 'DlgDrucken.TitleBar100Drucken'", repo.DlgDrucken.TitleBar100DruckenInfo, new ActionTimeout(120000), new RecordItemIndex(6));
            repo.DlgDrucken.TitleBar100DruckenInfo.WaitForExists(120000);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'DlgDrucken.PbVorschau' at Center.", repo.DlgDrucken.PbVorschauInfo, new RecordItemIndex(7));
            repo.DlgDrucken.PbVorschau.Click();
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
