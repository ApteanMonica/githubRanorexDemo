///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace Z_REISE_001.Recording_Reiseerfassung
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Ueberpruefung_Beleg_2 recording.
    /// </summary>
    [TestModule("a8266cad-56a3-4e68-96d0-dca38fda004d", ModuleType.Recording, 1)]
    public partial class Ueberpruefung_Beleg_2 : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::Z_REISE_001.Z_REISE_001Repository repository.
        /// </summary>
        public static global::Z_REISE_001.Z_REISE_001Repository repo = global::Z_REISE_001.Z_REISE_001Repository.Instance;

        static Ueberpruefung_Beleg_2 instance = new Ueberpruefung_Beleg_2();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Ueberpruefung_Beleg_2()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Ueberpruefung_Beleg_2 Instance
        {
            get { return instance; }
        }

#region Variables

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='20.04.2022') on item 'FormRk.TpBelege.BelegDatum'.", repo.FormRk.TpBelege.BelegDatumInfo, new RecordItemIndex(0));
            Validate.AttributeEqual(repo.FormRk.TpBelege.BelegDatumInfo, "Text", "20.04.2022");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='1') on item 'FormRk.TpBelege.DfRbelaCd'.", repo.FormRk.TpBelege.DfRbelaCdInfo, new RecordItemIndex(1));
            Validate.AttributeEqual(repo.FormRk.TpBelege.DfRbelaCdInfo, "Text", "1");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='B2') on item 'FormRk.TpBelege.DfRbelNummer'.", repo.FormRk.TpBelege.DfRbelNummerInfo, new RecordItemIndex(2));
            Validate.AttributeEqual(repo.FormRk.TpBelege.DfRbelNummerInfo, "Text", "B2");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='20.04.2022') on item 'FormRk.TpBelege.BelegDatum'.", repo.FormRk.TpBelege.BelegDatumInfo, new RecordItemIndex(3));
            Validate.AttributeEqual(repo.FormRk.TpBelege.BelegDatumInfo, "Text", "20.04.2022");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='50,00') on item 'FormRk.TpBelege.DfRbelBrutto'.", repo.FormRk.TpBelege.DfRbelBruttoInfo, new RecordItemIndex(4));
            Validate.AttributeEqual(repo.FormRk.TpBelege.DfRbelBruttoInfo, "Text", "50,00");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='EUR') on item 'FormRk.TpBelege.Waehrung_511'.", repo.FormRk.TpBelege.Waehrung_511Info, new RecordItemIndex(5));
            Validate.AttributeEqual(repo.FormRk.TpBelege.Waehrung_511Info, "Text", "EUR");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FormRk.PbDataAccessSave' at Center.", repo.FormRk.PbDataAccessSaveInfo, new RecordItemIndex(6));
            repo.FormRk.PbDataAccessSave.Click();
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
