///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace B_BUSAPR_001.Recordings
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Saldendifferenzen_pruefen recording.
    /// </summary>
    [TestModule("45cdeb90-8a57-40fa-bf63-722b4eeb2298", ModuleType.Recording, 1)]
    public partial class Saldendifferenzen_pruefen_Einschraenkungen : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::B_BUSAPR_001.B_BUSAPR_001Repository repository.
        /// </summary>
        public static global::B_BUSAPR_001.B_BUSAPR_001Repository repo = global::B_BUSAPR_001.B_BUSAPR_001Repository.Instance;

        static Saldendifferenzen_pruefen_Einschraenkungen instance = new Saldendifferenzen_pruefen_Einschraenkungen();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Saldendifferenzen_pruefen_Einschraenkungen()
        {
            Jahr = "2018";
            Periode_von = "1";
            Periode_bis = "2";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Saldendifferenzen_pruefen_Einschraenkungen Instance
        {
            get { return instance; }
        }

#region Variables

        string _Jahr;

        /// <summary>
        /// Gets or sets the value of variable Jahr.
        /// </summary>
        [TestVariable("1b0e7396-d861-41ed-a2a4-90a7388bb792")]
        public string Jahr
        {
            get { return _Jahr; }
            set { _Jahr = value; }
        }

        string _Periode_von;

        /// <summary>
        /// Gets or sets the value of variable Periode_von.
        /// </summary>
        [TestVariable("fed4a76b-2565-4db8-bbff-dadea57b2194")]
        public string Periode_von
        {
            get { return _Periode_von; }
            set { _Periode_von = value; }
        }

        string _Periode_bis;

        /// <summary>
        /// Gets or sets the value of variable Periode_bis.
        /// </summary>
        [TestVariable("be7280c6-0efe-4491-b137-38c180fe5185")]
        public string Periode_bis
        {
            get { return _Periode_bis; }
            set { _Periode_bis = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Delete' Press with focus on 'FrmMain.Jahr'.", repo.FrmMain.JahrInfo, new RecordItemIndex(0));
            Keyboard.PrepareFocus(repo.FrmMain.Jahr);
            Keyboard.Press(System.Windows.Forms.Keys.Delete, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left DoubleClick item 'FrmMain.Jahr' at Center.", repo.FrmMain.JahrInfo, new RecordItemIndex(1));
            //repo.FrmMain.Jahr.DoubleClick();
            
            //Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Back}' with focus on 'FrmMain.Jahr'.", repo.FrmMain.JahrInfo, new RecordItemIndex(2));
            //repo.FrmMain.Jahr.PressKeys("{Back}");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Jahr' with focus on 'FrmMain.Jahr'.", repo.FrmMain.JahrInfo, new RecordItemIndex(3));
            repo.FrmMain.Jahr.PressKeys(Jahr);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Tab' Press.", new RecordItemIndex(4));
            Keyboard.Press(System.Windows.Forms.Keys.Tab, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmMain.PeriodeVon' at Center.", repo.FrmMain.PeriodeVonInfo, new RecordItemIndex(5));
            repo.FrmMain.PeriodeVon.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Periode_von' with focus on 'FrmMain.PeriodeVon'.", repo.FrmMain.PeriodeVonInfo, new RecordItemIndex(6));
            repo.FrmMain.PeriodeVon.EnsureVisible();
            Keyboard.Press(Periode_von);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Tab' Press.", new RecordItemIndex(7));
            Keyboard.Press(System.Windows.Forms.Keys.Tab, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 1s.", new RecordItemIndex(8));
            Delay.Duration(1000, false);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Periode_bis' with focus on 'FrmMain.Bis'.", repo.FrmMain.BisInfo, new RecordItemIndex(9));
            repo.FrmMain.Bis.EnsureVisible();
            Keyboard.Press(Periode_bis);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Tab' Press.", new RecordItemIndex(10));
            Keyboard.Press(System.Windows.Forms.Keys.Tab, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Jahr) on item 'FrmMain.Jahr'.", repo.FrmMain.JahrInfo, new RecordItemIndex(11));
            Validate.AttributeEqual(repo.FrmMain.JahrInfo, "Text", Jahr);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Periode_von) on item 'FrmMain.PeriodeVon'.", repo.FrmMain.PeriodeVonInfo, new RecordItemIndex(12));
            Validate.AttributeEqual(repo.FrmMain.PeriodeVonInfo, "Text", Periode_von);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Periode_bis) on item 'FrmMain.Bis'.", repo.FrmMain.BisInfo, new RecordItemIndex(13));
            Validate.AttributeEqual(repo.FrmMain.BisInfo, "Text", Periode_bis);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Checked='True') on item 'FrmMain.CbNormal'.", repo.FrmMain.CbNormalInfo, new RecordItemIndex(14));
            Validate.AttributeEqual(repo.FrmMain.CbNormalInfo, "Checked", "True");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Checked='True') on item 'FrmMain.CbUst'.", repo.FrmMain.CbUstInfo, new RecordItemIndex(15));
            Validate.AttributeEqual(repo.FrmMain.CbUstInfo, "Checked", "True");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Checked='True') on item 'FrmMain.RbBasis'.", repo.FrmMain.RbBasisInfo, new RecordItemIndex(16));
            Validate.AttributeEqual(repo.FrmMain.RbBasisInfo, "Checked", "True");
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
