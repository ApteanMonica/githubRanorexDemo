///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace B_BUSAPR_001.Recordings
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Saldendifferenzen_pruefen recording.
    /// </summary>
    [TestModule("dc699b27-7194-4d58-b959-c4606b8969e6", ModuleType.Recording, 1)]
    public partial class Saldendifferenzen_pruefen_Start_Meldungen : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::B_BUSAPR_001.B_BUSAPR_001Repository repository.
        /// </summary>
        public static global::B_BUSAPR_001.B_BUSAPR_001Repository repo = global::B_BUSAPR_001.B_BUSAPR_001Repository.Instance;

        static Saldendifferenzen_pruefen_Start_Meldungen instance = new Saldendifferenzen_pruefen_Start_Meldungen();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Saldendifferenzen_pruefen_Start_Meldungen()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Saldendifferenzen_pruefen_Start_Meldungen Instance
        {
            get { return instance; }
        }

#region Variables

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmMain.PbStart' at Center.", repo.FrmMain.PbStartInfo, new RecordItemIndex(0));
            repo.FrmMain.PbStart.Click();
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 5m to exist. Associated repository item: 'DlgMessageBox.LabelMeldungstext'", repo.DlgMessageBox.LabelMeldungstextInfo, new ActionTimeout(300000), new RecordItemIndex(1));
            repo.DlgMessageBox.LabelMeldungstextInfo.WaitForExists(300000);
            
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeRegex (Text~'(Firma: 100\r\nKonto: 9910\tWährung: EUR\r\nPeriode: 1\r\nBuchung\tS 1.225,00\tH 0,00\r\nUmsatz\tS 1.200,00\tH 0,00)|(Firma: 100\r\nKonto: 9910\tWährung: EUR\r\nPeriode: 1\r\nBuchung\tS 1.225,00\tH 0,00\tSaldo 1.225,00\r\nUmsatz\tS 1.200,00\tH 0,00\tSaldo 1.200,00\r\n\r\n\t\t\t\tDifferenz 25,00)') on item 'DlgMessageBox.LabelMeldungstext'.", repo.DlgMessageBox.LabelMeldungstextInfo, new RecordItemIndex(2));
                Validate.AttributeRegex(repo.DlgMessageBox.LabelMeldungstextInfo, "Text", new Regex("(Firma: 100\r\nKonto: 9910\tWährung: EUR\r\nPeriode: 1\r\nBuchung\tS 1.225,00\tH 0,00\r\nUmsatz\tS 1.200,00\tH 0,00)|(Firma: 100\r\nKonto: 9910\tWährung: EUR\r\nPeriode: 1\r\nBuchung\tS 1.225,00\tH 0,00\tSaldo 1.225,00\r\nUmsatz\tS 1.200,00\tH 0,00\tSaldo 1.200,00\r\n\r\n\t\t\t\tDifferenz 25,00)"), null, false);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(2)); }
            
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeContains (Text>'Umsatz korrigieren ?') on item 'DlgMessageBox.LabelMeldungstext'.", repo.DlgMessageBox.LabelMeldungstextInfo, new RecordItemIndex(3));
                Validate.AttributeContains(repo.DlgMessageBox.LabelMeldungstextInfo, "Text", "Umsatz korrigieren ?", null, false);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(3)); }
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'DlgMessageBox.Button1' at Center.", repo.DlgMessageBox.Button1Info, new RecordItemIndex(4));
            repo.DlgMessageBox.Button1.Click();
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 2s.", new RecordItemIndex(5));
            Delay.Duration(2000, false);
            
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeRegex (Text~'(Firma: 100\r\nKonto: 9920 Währung: EUR\r\nPeriode: 1\r\nBuchung S 13.233,33 H 166,67\r\nUmsatz S 13.000,00 H 166,67)|(Firma: 100\r\nKonto: 9920\tWährung: EUR\r\nPeriode: 1\r\nBuchung\tS 13.233,33\tH 166,67\r\nUmsatz\tS 13.000,00\tH 166,67)|(Firma: 100\r\nKonto: 9920\tWährung: EUR\r\nPeriode: 1\r\nBuchung\tS 13.233,33\tH 166,67\tSaldo 13.066,66\r\nUmsatz\tS 13.000,00\tH 166,67\tSaldo 12.833,33\r\n\r\n\t\t\t\tDifferenz 233,33)') on item 'DlgMessageBox.LabelMeldungstext'.", repo.DlgMessageBox.LabelMeldungstextInfo, new RecordItemIndex(6));
                Validate.AttributeRegex(repo.DlgMessageBox.LabelMeldungstextInfo, "Text", new Regex("(Firma: 100\r\nKonto: 9920 Währung: EUR\r\nPeriode: 1\r\nBuchung S 13.233,33 H 166,67\r\nUmsatz S 13.000,00 H 166,67)|(Firma: 100\r\nKonto: 9920\tWährung: EUR\r\nPeriode: 1\r\nBuchung\tS 13.233,33\tH 166,67\r\nUmsatz\tS 13.000,00\tH 166,67)|(Firma: 100\r\nKonto: 9920\tWährung: EUR\r\nPeriode: 1\r\nBuchung\tS 13.233,33\tH 166,67\tSaldo 13.066,66\r\nUmsatz\tS 13.000,00\tH 166,67\tSaldo 12.833,33\r\n\r\n\t\t\t\tDifferenz 233,33)"), null, false);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(6)); }
            
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeContains (Text>'Umsatz korrigieren ?') on item 'DlgMessageBox.LabelMeldungstext'.", repo.DlgMessageBox.LabelMeldungstextInfo, new RecordItemIndex(7));
                Validate.AttributeContains(repo.DlgMessageBox.LabelMeldungstextInfo, "Text", "Umsatz korrigieren ?", null, false);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(7)); }
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'DlgMessageBox.Button1' at Center.", repo.DlgMessageBox.Button1Info, new RecordItemIndex(8));
            repo.DlgMessageBox.Button1.Click();
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 2s.", new RecordItemIndex(9));
            Delay.Duration(2000, false);
            
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeEqual (Text='1 Buchung(en) mit USt-Betrag ohne USt-Code gefunden!\r\nKonto 9910') on item 'DlgMessageBox.LabelMeldungstext'.", repo.DlgMessageBox.LabelMeldungstextInfo, new RecordItemIndex(10));
                Validate.AttributeEqual(repo.DlgMessageBox.LabelMeldungstextInfo, "Text", "1 Buchung(en) mit USt-Betrag ohne USt-Code gefunden!\r\nKonto 9910", null, false);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(10)); }
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'DlgMessageBox.Button0' at Center.", repo.DlgMessageBox.Button0Info, new RecordItemIndex(11));
            repo.DlgMessageBox.Button0.Click();
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 2s.", new RecordItemIndex(12));
            Delay.Duration(2000, false);
            
            // Regex . statt unerlaubtes /
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nRegex . statt unerlaubtes /\r\nValidating AttributeRegex (Text~'Soll.Haben-Ungleichheit!') on item 'DlgMessageBox.LabelMeldungstext'.", repo.DlgMessageBox.LabelMeldungstextInfo, new RecordItemIndex(13));
                Validate.AttributeRegex(repo.DlgMessageBox.LabelMeldungstextInfo, "Text", new Regex("Soll.Haben-Ungleichheit!"), null, false);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(13)); }
            
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeContains (Text>'Differenz -2.060,00\r') on item 'DlgMessageBox.LabelMeldungstext'.", repo.DlgMessageBox.LabelMeldungstextInfo, new RecordItemIndex(14));
                Validate.AttributeContains(repo.DlgMessageBox.LabelMeldungstextInfo, "Text", "Differenz -2.060,00\r", null, false);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(14)); }
            
            // neue  Meldung: Tickets FH920/FH100
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nneue  Meldung: Tickets FH920/FH100\r\nValidating AttributeContains (Text>'\nBitte SH - Prüfung durchführen!') on item 'DlgMessageBox.LabelMeldungstext'.", repo.DlgMessageBox.LabelMeldungstextInfo, new RecordItemIndex(15));
                Validate.AttributeContains(repo.DlgMessageBox.LabelMeldungstextInfo, "Text", "\nBitte SH - Prüfung durchführen!", null, false);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(15)); }
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'DlgMessageBox.Button0' at Center.", repo.DlgMessageBox.Button0Info, new RecordItemIndex(16));
            repo.DlgMessageBox.Button0.Click();
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
