///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace B_ERBU_003.Recordings_B_EXOPS
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The ERs_Periode_in_Schnittstelle_pruefen recording.
    /// </summary>
    [TestModule("ed1982ec-a1de-4da8-abe8-41efcfc308c9", ModuleType.Recording, 1)]
    public partial class ERs_Periode_in_Schnittstelle_pruefen : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::B_ERBU_003.B_ERBU_003Repository repository.
        /// </summary>
        public static global::B_ERBU_003.B_ERBU_003Repository repo = global::B_ERBU_003.B_ERBU_003Repository.Instance;

        static ERs_Periode_in_Schnittstelle_pruefen instance = new ERs_Periode_in_Schnittstelle_pruefen();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public ERs_Periode_in_Schnittstelle_pruefen()
        {
            ER_1 = "2300001";
            ER_2 = "2300002";
            ER_3 = "2300003";
            ER_4 = "2300004";
            ER_5 = "2300005";
            Tagesdatum = "21.02.2023";
            Jahr = "2023";
            Monat_2 = "2";
            Monat_1 = "1";
            Monat_3 = "3";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static ERs_Periode_in_Schnittstelle_pruefen Instance
        {
            get { return instance; }
        }

#region Variables

        string _ER_1;

        /// <summary>
        /// Gets or sets the value of variable ER_1.
        /// </summary>
        [TestVariable("54328a84-a1de-4049-aa27-7e8f8b08e9eb")]
        public string ER_1
        {
            get { return _ER_1; }
            set { _ER_1 = value; }
        }

        string _ER_2;

        /// <summary>
        /// Gets or sets the value of variable ER_2.
        /// </summary>
        [TestVariable("c0713bcb-3cb0-4142-b06b-4b63da0948ea")]
        public string ER_2
        {
            get { return _ER_2; }
            set { _ER_2 = value; }
        }

        string _ER_3;

        /// <summary>
        /// Gets or sets the value of variable ER_3.
        /// </summary>
        [TestVariable("4959d487-d43b-46d1-b63b-cc33249fc7d6")]
        public string ER_3
        {
            get { return _ER_3; }
            set { _ER_3 = value; }
        }

        string _ER_4;

        /// <summary>
        /// Gets or sets the value of variable ER_4.
        /// </summary>
        [TestVariable("1744ba8a-30eb-449e-9eab-0344d53403fd")]
        public string ER_4
        {
            get { return _ER_4; }
            set { _ER_4 = value; }
        }

        string _ER_5;

        /// <summary>
        /// Gets or sets the value of variable ER_5.
        /// </summary>
        [TestVariable("359e77cf-b2cd-43c5-8ad6-1291ec224d9b")]
        public string ER_5
        {
            get { return _ER_5; }
            set { _ER_5 = value; }
        }

        string _Tagesdatum;

        /// <summary>
        /// Gets or sets the value of variable Tagesdatum.
        /// </summary>
        [TestVariable("1338ef7c-95c3-4d12-9fb0-64ccb1dbe5dd")]
        public string Tagesdatum
        {
            get { return _Tagesdatum; }
            set { _Tagesdatum = value; }
        }

        string _Jahr;

        /// <summary>
        /// Gets or sets the value of variable Jahr.
        /// </summary>
        [TestVariable("06ed570b-da7e-4977-9b58-a94ae5aac011")]
        public string Jahr
        {
            get { return _Jahr; }
            set { _Jahr = value; }
        }

        string _Monat_2;

        /// <summary>
        /// Gets or sets the value of variable Monat_2.
        /// </summary>
        [TestVariable("4e784c29-6bec-474f-b25c-b00e23413502")]
        public string Monat_2
        {
            get { return _Monat_2; }
            set { _Monat_2 = value; }
        }

        string _Monat_1;

        /// <summary>
        /// Gets or sets the value of variable Monat_1.
        /// </summary>
        [TestVariable("23351440-4645-4c41-b9c8-75f36386cced")]
        public string Monat_1
        {
            get { return _Monat_1; }
            set { _Monat_1 = value; }
        }

        string _Monat_3;

        /// <summary>
        /// Gets or sets the value of variable Monat_3.
        /// </summary>
        [TestVariable("cc7bd976-3e5e-416d-85fa-515464d62864")]
        public string Monat_3
        {
            get { return _Monat_3; }
            set { _Monat_3 = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            // Zeile_1
            Report.Log(ReportLevel.Info, "Section", "Zeile_1", new RecordItemIndex(0));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$ER_1) on item 'FrmBEXOP.FlexGrid_EXOP_Belege_fixe_Zeilennr.Row_1.ColExopBelegnrRow1'.", repo.FrmBEXOP.FlexGrid_EXOP_Belege_fixe_Zeilennr.Row_1.ColExopBelegnrRow1Info, new RecordItemIndex(1));
            Validate.AttributeEqual(repo.FrmBEXOP.FlexGrid_EXOP_Belege_fixe_Zeilennr.Row_1.ColExopBelegnrRow1Info, "Text", ER_1);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (Text>$Tagesdatum) on item 'FrmBEXOP.FlexGrid_EXOP_Belege_fixe_Zeilennr.Row_1.ColExopDtherkunftRow1'.", repo.FrmBEXOP.FlexGrid_EXOP_Belege_fixe_Zeilennr.Row_1.ColExopDtherkunftRow1Info, new RecordItemIndex(2));
            Validate.AttributeContains(repo.FrmBEXOP.FlexGrid_EXOP_Belege_fixe_Zeilennr.Row_1.ColExopDtherkunftRow1Info, "Text", Tagesdatum);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (Text>$Jahr) on item 'FrmBEXOP.FlexGrid_EXOP_Belege_fixe_Zeilennr.Row_1.ColExopJahrRow1'.", repo.FrmBEXOP.FlexGrid_EXOP_Belege_fixe_Zeilennr.Row_1.ColExopJahrRow1Info, new RecordItemIndex(3));
            Validate.AttributeContains(repo.FrmBEXOP.FlexGrid_EXOP_Belege_fixe_Zeilennr.Row_1.ColExopJahrRow1Info, "Text", Jahr);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (Text>$Monat_2) on item 'FrmBEXOP.FlexGrid_EXOP_Belege_fixe_Zeilennr.Row_1.ColExopPeriodeRow1'.", repo.FrmBEXOP.FlexGrid_EXOP_Belege_fixe_Zeilennr.Row_1.ColExopPeriodeRow1Info, new RecordItemIndex(4));
            Validate.AttributeContains(repo.FrmBEXOP.FlexGrid_EXOP_Belege_fixe_Zeilennr.Row_1.ColExopPeriodeRow1Info, "Text", Monat_2);
            
            // Zeile_2
            Report.Log(ReportLevel.Info, "Section", "Zeile_2", new RecordItemIndex(5));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$ER_2) on item 'FrmBEXOP.FlexGrid_EXOP_Belege_fixe_Zeilennr.Row_2.ColExopBelegnrRow2'.", repo.FrmBEXOP.FlexGrid_EXOP_Belege_fixe_Zeilennr.Row_2.ColExopBelegnrRow2Info, new RecordItemIndex(6));
            Validate.AttributeEqual(repo.FrmBEXOP.FlexGrid_EXOP_Belege_fixe_Zeilennr.Row_2.ColExopBelegnrRow2Info, "Text", ER_2);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (Text>$Tagesdatum) on item 'FrmBEXOP.FlexGrid_EXOP_Belege_fixe_Zeilennr.Row_2.ColExopDtherkunftRow2'.", repo.FrmBEXOP.FlexGrid_EXOP_Belege_fixe_Zeilennr.Row_2.ColExopDtherkunftRow2Info, new RecordItemIndex(7));
            Validate.AttributeContains(repo.FrmBEXOP.FlexGrid_EXOP_Belege_fixe_Zeilennr.Row_2.ColExopDtherkunftRow2Info, "Text", Tagesdatum);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (Text>$Jahr) on item 'FrmBEXOP.FlexGrid_EXOP_Belege_fixe_Zeilennr.Row_2.ColExopJahrRow2'.", repo.FrmBEXOP.FlexGrid_EXOP_Belege_fixe_Zeilennr.Row_2.ColExopJahrRow2Info, new RecordItemIndex(8));
            Validate.AttributeContains(repo.FrmBEXOP.FlexGrid_EXOP_Belege_fixe_Zeilennr.Row_2.ColExopJahrRow2Info, "Text", Jahr);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (Text>$Monat_2) on item 'FrmBEXOP.FlexGrid_EXOP_Belege_fixe_Zeilennr.Row_2.ColExopPeriodeRow2'.", repo.FrmBEXOP.FlexGrid_EXOP_Belege_fixe_Zeilennr.Row_2.ColExopPeriodeRow2Info, new RecordItemIndex(9));
            Validate.AttributeContains(repo.FrmBEXOP.FlexGrid_EXOP_Belege_fixe_Zeilennr.Row_2.ColExopPeriodeRow2Info, "Text", Monat_2);
            
            // Zeile_3
            Report.Log(ReportLevel.Info, "Section", "Zeile_3", new RecordItemIndex(10));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$ER_3) on item 'FrmBEXOP.FlexGrid_EXOP_Belege_fixe_Zeilennr.Row_3.ColExopBelegnrRow3'.", repo.FrmBEXOP.FlexGrid_EXOP_Belege_fixe_Zeilennr.Row_3.ColExopBelegnrRow3Info, new RecordItemIndex(11));
            Validate.AttributeEqual(repo.FrmBEXOP.FlexGrid_EXOP_Belege_fixe_Zeilennr.Row_3.ColExopBelegnrRow3Info, "Text", ER_3);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (Text>$Tagesdatum) on item 'FrmBEXOP.FlexGrid_EXOP_Belege_fixe_Zeilennr.Row_3.ColExopDtherkunftRow3'.", repo.FrmBEXOP.FlexGrid_EXOP_Belege_fixe_Zeilennr.Row_3.ColExopDtherkunftRow3Info, new RecordItemIndex(12));
            Validate.AttributeContains(repo.FrmBEXOP.FlexGrid_EXOP_Belege_fixe_Zeilennr.Row_3.ColExopDtherkunftRow3Info, "Text", Tagesdatum);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (Text>$Jahr) on item 'FrmBEXOP.FlexGrid_EXOP_Belege_fixe_Zeilennr.Row_3.ColExopJahrRow3'.", repo.FrmBEXOP.FlexGrid_EXOP_Belege_fixe_Zeilennr.Row_3.ColExopJahrRow3Info, new RecordItemIndex(13));
            Validate.AttributeContains(repo.FrmBEXOP.FlexGrid_EXOP_Belege_fixe_Zeilennr.Row_3.ColExopJahrRow3Info, "Text", Jahr);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (Text>$Monat_1) on item 'FrmBEXOP.FlexGrid_EXOP_Belege_fixe_Zeilennr.Row_3.ColExopPeriodeRow3'.", repo.FrmBEXOP.FlexGrid_EXOP_Belege_fixe_Zeilennr.Row_3.ColExopPeriodeRow3Info, new RecordItemIndex(14));
            Validate.AttributeContains(repo.FrmBEXOP.FlexGrid_EXOP_Belege_fixe_Zeilennr.Row_3.ColExopPeriodeRow3Info, "Text", Monat_1);
            
            // Zeile_4
            Report.Log(ReportLevel.Info, "Section", "Zeile_4", new RecordItemIndex(15));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$ER_4) on item 'FrmBEXOP.FlexGrid_EXOP_Belege_fixe_Zeilennr.Row_4.ColExopBelegnrRow4'.", repo.FrmBEXOP.FlexGrid_EXOP_Belege_fixe_Zeilennr.Row_4.ColExopBelegnrRow4Info, new RecordItemIndex(16));
            Validate.AttributeEqual(repo.FrmBEXOP.FlexGrid_EXOP_Belege_fixe_Zeilennr.Row_4.ColExopBelegnrRow4Info, "Text", ER_4);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (Text>$Tagesdatum) on item 'FrmBEXOP.FlexGrid_EXOP_Belege_fixe_Zeilennr.Row_4.ColExopDtherkunftRow4'.", repo.FrmBEXOP.FlexGrid_EXOP_Belege_fixe_Zeilennr.Row_4.ColExopDtherkunftRow4Info, new RecordItemIndex(17));
            Validate.AttributeContains(repo.FrmBEXOP.FlexGrid_EXOP_Belege_fixe_Zeilennr.Row_4.ColExopDtherkunftRow4Info, "Text", Tagesdatum);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (Text>$Jahr) on item 'FrmBEXOP.FlexGrid_EXOP_Belege_fixe_Zeilennr.Row_4.ColExopJahrRow4'.", repo.FrmBEXOP.FlexGrid_EXOP_Belege_fixe_Zeilennr.Row_4.ColExopJahrRow4Info, new RecordItemIndex(18));
            Validate.AttributeContains(repo.FrmBEXOP.FlexGrid_EXOP_Belege_fixe_Zeilennr.Row_4.ColExopJahrRow4Info, "Text", Jahr);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (Text>$Monat_2) on item 'FrmBEXOP.FlexGrid_EXOP_Belege_fixe_Zeilennr.Row_4.ColExopPeriodeRow4'.", repo.FrmBEXOP.FlexGrid_EXOP_Belege_fixe_Zeilennr.Row_4.ColExopPeriodeRow4Info, new RecordItemIndex(19));
            Validate.AttributeContains(repo.FrmBEXOP.FlexGrid_EXOP_Belege_fixe_Zeilennr.Row_4.ColExopPeriodeRow4Info, "Text", Monat_2);
            
            // Zeile_5
            Report.Log(ReportLevel.Info, "Section", "Zeile_5", new RecordItemIndex(20));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$ER_5) on item 'FrmBEXOP.FlexGrid_EXOP_Belege_fixe_Zeilennr.Row_5.ColExopBelegnrRow5'.", repo.FrmBEXOP.FlexGrid_EXOP_Belege_fixe_Zeilennr.Row_5.ColExopBelegnrRow5Info, new RecordItemIndex(21));
            Validate.AttributeEqual(repo.FrmBEXOP.FlexGrid_EXOP_Belege_fixe_Zeilennr.Row_5.ColExopBelegnrRow5Info, "Text", ER_5);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (Text>$Tagesdatum) on item 'FrmBEXOP.FlexGrid_EXOP_Belege_fixe_Zeilennr.Row_5.ColExopDtherkunftRow5'.", repo.FrmBEXOP.FlexGrid_EXOP_Belege_fixe_Zeilennr.Row_5.ColExopDtherkunftRow5Info, new RecordItemIndex(22));
            Validate.AttributeContains(repo.FrmBEXOP.FlexGrid_EXOP_Belege_fixe_Zeilennr.Row_5.ColExopDtherkunftRow5Info, "Text", Tagesdatum);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (Text>$Jahr) on item 'FrmBEXOP.FlexGrid_EXOP_Belege_fixe_Zeilennr.Row_5.ColExopJahrRow5'.", repo.FrmBEXOP.FlexGrid_EXOP_Belege_fixe_Zeilennr.Row_5.ColExopJahrRow5Info, new RecordItemIndex(23));
            Validate.AttributeContains(repo.FrmBEXOP.FlexGrid_EXOP_Belege_fixe_Zeilennr.Row_5.ColExopJahrRow5Info, "Text", Jahr);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (Text>$Monat_3) on item 'FrmBEXOP.FlexGrid_EXOP_Belege_fixe_Zeilennr.Row_5.ColExopPeriodeRow5'.", repo.FrmBEXOP.FlexGrid_EXOP_Belege_fixe_Zeilennr.Row_5.ColExopPeriodeRow5Info, new RecordItemIndex(24));
            Validate.AttributeContains(repo.FrmBEXOP.FlexGrid_EXOP_Belege_fixe_Zeilennr.Row_5.ColExopPeriodeRow5Info, "Text", Monat_3);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
