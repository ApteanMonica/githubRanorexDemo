///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace B_EBUEB_B_EBERF_Schnelltest.Recordings_B_KTSALD
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Einschraenkung_B_KTSALD recording.
    /// </summary>
    [TestModule("ee0db3f4-5a55-4d54-82c5-b961d8840429", ModuleType.Recording, 1)]
    public partial class Einschraenkung_B_KTSALD : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::B_EBUEB_B_EBERF_Schnelltest.B_EBUEB_B_EBERF_300_SchnelltestRepository repository.
        /// </summary>
        public static global::B_EBUEB_B_EBERF_Schnelltest.B_EBUEB_B_EBERF_300_SchnelltestRepository repo = global::B_EBUEB_B_EBERF_Schnelltest.B_EBUEB_B_EBERF_300_SchnelltestRepository.Instance;

        static Einschraenkung_B_KTSALD instance = new Einschraenkung_B_KTSALD();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Einschraenkung_B_KTSALD()
        {
            Jahr = "2022";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Einschraenkung_B_KTSALD Instance
        {
            get { return instance; }
        }

#region Variables

        string _Jahr;

        /// <summary>
        /// Gets or sets the value of variable Jahr.
        /// </summary>
        [TestVariable("b5738825-d02c-40e5-be27-540f5935733b")]
        public string Jahr
        {
            get { return _Jahr; }
            set { _Jahr = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Jahr' with focus on 'FrmKtSali.ClientArea.Monat_Jahr_von'.", repo.FrmKtSali.ClientArea.Monat_Jahr_vonInfo, new RecordItemIndex(0));
            repo.FrmKtSali.ClientArea.Monat_Jahr_von.PressKeys(Jahr);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Tab' Press.", new RecordItemIndex(1));
            Keyboard.Press(System.Windows.Forms.Keys.Tab, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '1' with focus on 'FrmKtSali.ClientArea.Periode_von'.", repo.FrmKtSali.ClientArea.Periode_vonInfo, new RecordItemIndex(2));
            repo.FrmKtSali.ClientArea.Periode_von.PressKeys("1");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Tab' Press.", new RecordItemIndex(3));
            Keyboard.Press(System.Windows.Forms.Keys.Tab, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Tab' Press.", new RecordItemIndex(4));
            Keyboard.Press(System.Windows.Forms.Keys.Tab, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '12' with focus on 'FrmKtSali.ClientArea.Text_Periode_bis'.", repo.FrmKtSali.ClientArea.Text_Periode_bisInfo, new RecordItemIndex(5));
            repo.FrmKtSali.ClientArea.Text_Periode_bis.PressKeys("12");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Tab' Press.", new RecordItemIndex(6));
            Keyboard.Press(System.Windows.Forms.Keys.Tab, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='$S') on item 'FrmKtSali.ClientArea.Formular'.", repo.FrmKtSali.ClientArea.FormularInfo, new RecordItemIndex(7));
            Validate.AttributeEqual(repo.FrmKtSali.ClientArea.FormularInfo, "Text", "$S");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Jahr) on item 'FrmKtSali.ClientArea.Monat_Jahr_von'.", repo.FrmKtSali.ClientArea.Monat_Jahr_vonInfo, new RecordItemIndex(8));
            Validate.AttributeEqual(repo.FrmKtSali.ClientArea.Monat_Jahr_vonInfo, "Text", Jahr);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='1') on item 'FrmKtSali.ClientArea.Periode_von'.", repo.FrmKtSali.ClientArea.Periode_vonInfo, new RecordItemIndex(9));
            Validate.AttributeEqual(repo.FrmKtSali.ClientArea.Periode_vonInfo, "Text", "1");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Jahr) on item 'FrmKtSali.ClientArea.TextBis_Jahr_bis'.", repo.FrmKtSali.ClientArea.TextBis_Jahr_bisInfo, new RecordItemIndex(10));
            Validate.AttributeEqual(repo.FrmKtSali.ClientArea.TextBis_Jahr_bisInfo, "Text", Jahr);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='12') on item 'FrmKtSali.ClientArea.Text_Periode_bis'.", repo.FrmKtSali.ClientArea.Text_Periode_bisInfo, new RecordItemIndex(11));
            Validate.AttributeEqual(repo.FrmKtSali.ClientArea.Text_Periode_bisInfo, "Text", "12");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmKtSali.PbToolBarItemsTabelle' at Center.", repo.FrmKtSali.PbToolBarItemsTabelleInfo, new RecordItemIndex(12));
            repo.FrmKtSali.PbToolBarItemsTabelle.Click();
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 2m to exist. Associated repository item: 'TblDaten.TitleBar100UmsatzSaldenlisteNach'", repo.TblDaten.TitleBar100UmsatzSaldenlisteNachInfo, new ActionTimeout(120000), new RecordItemIndex(13));
            repo.TblDaten.TitleBar100UmsatzSaldenlisteNachInfo.WaitForExists(120000);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (Text>$Jahr) on item 'TblDaten.TitleBar100UmsatzSaldenlisteNach'.", repo.TblDaten.TitleBar100UmsatzSaldenlisteNachInfo, new RecordItemIndex(14));
            Validate.AttributeContains(repo.TblDaten.TitleBar100UmsatzSaldenlisteNachInfo, "Text", Jahr);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
