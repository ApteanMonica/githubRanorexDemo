///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace B_EBUEB_B_EBERF_Schnelltest.Recordings_B_EBERF
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The EB_zuruecksetzen_B_EBERF recording.
    /// </summary>
    [TestModule("b7471c71-92cc-4e41-adad-48cde79c54ed", ModuleType.Recording, 1)]
    public partial class EB_zuruecksetzen_B_EBERF : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::B_EBUEB_B_EBERF_Schnelltest.B_EBUEB_B_EBERF_300_SchnelltestRepository repository.
        /// </summary>
        public static global::B_EBUEB_B_EBERF_Schnelltest.B_EBUEB_B_EBERF_300_SchnelltestRepository repo = global::B_EBUEB_B_EBERF_Schnelltest.B_EBUEB_B_EBERF_300_SchnelltestRepository.Instance;

        static EB_zuruecksetzen_B_EBERF instance = new EB_zuruecksetzen_B_EBERF();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public EB_zuruecksetzen_B_EBERF()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static EB_zuruecksetzen_B_EBERF Instance
        {
            get { return instance; }
        }

#region Variables

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '0,00' with focus on 'FrmEB.FlexGrid.ColSollRow1'.", repo.FrmEB.FlexGrid.ColSollRow1Info, new RecordItemIndex(0));
            repo.FrmEB.FlexGrid.ColSollRow1.PressKeys("0,00");
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 1s.", new RecordItemIndex(1));
            Delay.Duration(1000, false);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '0,00' with focus on 'FrmEB.FlexGrid.ColSollRow2'.", repo.FrmEB.FlexGrid.ColSollRow2Info, new RecordItemIndex(2));
            repo.FrmEB.FlexGrid.ColSollRow2.PressKeys("0,00");
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 1s.", new RecordItemIndex(3));
            Delay.Duration(1000, false);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '0,00' with focus on 'FrmEB.FlexGrid.ColSollRow3'.", repo.FrmEB.FlexGrid.ColSollRow3Info, new RecordItemIndex(4));
            repo.FrmEB.FlexGrid.ColSollRow3.PressKeys("0,00");
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 1s.", new RecordItemIndex(5));
            Delay.Duration(1000, false);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '0,00' with focus on 'FrmEB.FlexGrid.ColSollRow4'.", repo.FrmEB.FlexGrid.ColSollRow4Info, new RecordItemIndex(6));
            repo.FrmEB.FlexGrid.ColSollRow4.PressKeys("0,00");
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 1s.", new RecordItemIndex(7));
            Delay.Duration(1000, false);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '0,00' with focus on 'FrmEB.FlexGrid.ColHabenRow5'.", repo.FrmEB.FlexGrid.ColHabenRow5Info, new RecordItemIndex(8));
            repo.FrmEB.FlexGrid.ColHabenRow5.PressKeys("0,00");
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 1s.", new RecordItemIndex(9));
            Delay.Duration(1000, false);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '0,00' with focus on 'FrmEB.FlexGrid.ColHabenRow6'.", repo.FrmEB.FlexGrid.ColHabenRow6Info, new RecordItemIndex(10));
            repo.FrmEB.FlexGrid.ColHabenRow6.PressKeys("0,00");
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 1s.", new RecordItemIndex(11));
            Delay.Duration(1000, false);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '0,00' with focus on 'FrmEB.FlexGrid.ColHabenRow7'.", repo.FrmEB.FlexGrid.ColHabenRow7Info, new RecordItemIndex(12));
            repo.FrmEB.FlexGrid.ColHabenRow7.PressKeys("0,00");
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 1s.", new RecordItemIndex(13));
            Delay.Duration(1000, false);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '0,00' with focus on 'FrmEB.FlexGrid.ColHabenRow8'.", repo.FrmEB.FlexGrid.ColHabenRow8Info, new RecordItemIndex(14));
            repo.FrmEB.FlexGrid.ColHabenRow8.PressKeys("0,00");
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 1s.", new RecordItemIndex(15));
            Delay.Duration(1000, false);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '0,00' with focus on 'FrmEB.FlexGrid.ColHabenRow9'.", repo.FrmEB.FlexGrid.ColHabenRow9Info, new RecordItemIndex(16));
            repo.FrmEB.FlexGrid.ColHabenRow9.PressKeys("0,00");
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 1s.", new RecordItemIndex(17));
            Delay.Duration(1000, false);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '0,00' with focus on 'FrmEB.FlexGrid.ColHabenRow10'.", repo.FrmEB.FlexGrid.ColHabenRow10Info, new RecordItemIndex(18));
            repo.FrmEB.FlexGrid.ColHabenRow10.PressKeys("0,00");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Tab' Press.", new RecordItemIndex(19));
            Keyboard.Press(System.Windows.Forms.Keys.Tab, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 1s.", new RecordItemIndex(20));
            Delay.Duration(1000, false);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
