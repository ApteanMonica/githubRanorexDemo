///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace B_BER_Schnelltest.Recordings_Bereiche
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Loeschen_Bereich_Alt_Kostenstellen_nicht_moeglich recording.
    /// </summary>
    [TestModule("b9560b63-2aff-4553-8d9b-4f12b75a286e", ModuleType.Recording, 1)]
    public partial class Loeschen_Bereich_Alt_Kostenstellen_nicht_moeglich : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::B_BER_Schnelltest.B_BER_SchnelltestRepository repository.
        /// </summary>
        public static global::B_BER_Schnelltest.B_BER_SchnelltestRepository repo = global::B_BER_Schnelltest.B_BER_SchnelltestRepository.Instance;

        static Loeschen_Bereich_Alt_Kostenstellen_nicht_moeglich instance = new Loeschen_Bereich_Alt_Kostenstellen_nicht_moeglich();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Loeschen_Bereich_Alt_Kostenstellen_nicht_moeglich()
        {
            BER_BEZ_ALT = "Kostenstellen";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Loeschen_Bereich_Alt_Kostenstellen_nicht_moeglich Instance
        {
            get { return instance; }
        }

#region Variables

        /// <summary>
        /// Gets or sets the value of variable BER_BEZ_ALT.
        /// </summary>
        [TestVariable("4a814fd1-54aa-48b8-8d1f-d4f11d8db3c0")]
        public string BER_BEZ_ALT
        {
            get { return repo.BER_BEZ_ALT; }
            set { repo.BER_BEZ_ALT = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'TblBer.row_mit_BER_BEZ_ALT.Row'.", repo.TblBer.row_mit_BER_BEZ_ALT.RowInfo, new RecordItemIndex(0));
            Validate.Exists(repo.TblBer.row_mit_BER_BEZ_ALT.RowInfo);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'TblBer.row_mit_BER_BEZ_ALT.Column0' at Center.", repo.TblBer.row_mit_BER_BEZ_ALT.Column0Info, new RecordItemIndex(1));
            repo.TblBer.row_mit_BER_BEZ_ALT.Column0.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Delete' Press with focus on 'TblBer.row_mit_BER_BEZ_ALT.Column0'.", repo.TblBer.row_mit_BER_BEZ_ALT.Column0Info, new RecordItemIndex(2));
            Keyboard.PrepareFocus(repo.TblBer.row_mit_BER_BEZ_ALT.Column0);
            Keyboard.Press(System.Windows.Forms.Keys.Delete, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'TblBer.PbDataAccessSave' at Center.", repo.TblBer.PbDataAccessSaveInfo, new RecordItemIndex(3));
            repo.TblBer.PbDataAccessSave.Click();
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='Bereich 1:\r\n\r\nLöschen nicht möglich, da noch abhängige Daten vorhanden sind !') on item 'DlgMessageBox.LabelMeldungstext'.", repo.DlgMessageBox.LabelMeldungstextInfo, new RecordItemIndex(4));
            Validate.AttributeEqual(repo.DlgMessageBox.LabelMeldungstextInfo, "Text", "Bereich 1:\r\n\r\nLöschen nicht möglich, da noch abhängige Daten vorhanden sind !");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'DlgMessageBox.Button0' at Center.", repo.DlgMessageBox.Button0Info, new RecordItemIndex(5));
            repo.DlgMessageBox.Button0.Click();
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'TblBer.PbDataAccessLoad' at Center.", repo.TblBer.PbDataAccessLoadInfo, new RecordItemIndex(6));
            repo.TblBer.PbDataAccessLoad.Click();
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='1') on item 'TblBer.row_mit_BER_BEZ_ALT.ColBerCd'.", repo.TblBer.row_mit_BER_BEZ_ALT.ColBerCdInfo, new RecordItemIndex(7));
            Validate.AttributeEqual(repo.TblBer.row_mit_BER_BEZ_ALT.ColBerCdInfo, "Text", "1");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$BER_BEZ_ALT) on item 'TblBer.row_mit_BER_BEZ_ALT.ColBerBez'.", repo.TblBer.row_mit_BER_BEZ_ALT.ColBerBezInfo, new RecordItemIndex(8));
            Validate.AttributeEqual(repo.TblBer.row_mit_BER_BEZ_ALT.ColBerBezInfo, "Text", BER_BEZ_ALT);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='1') on item 'TblBer.row_mit_BER_BEZ_ALT.ColBerPos'.", repo.TblBer.row_mit_BER_BEZ_ALT.ColBerPosInfo, new RecordItemIndex(9));
            Validate.AttributeEqual(repo.TblBer.row_mit_BER_BEZ_ALT.ColBerPosInfo, "Text", "1");
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
