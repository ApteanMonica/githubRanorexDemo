///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace B_BER_Schnelltest.Recordings_Bereiche
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Neuanlage_Bereich recording.
    /// </summary>
    [TestModule("e96046f2-7447-4de2-87b1-7d28c8a0a004", ModuleType.Recording, 1)]
    public partial class Neuanlage_Bereich : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::B_BER_Schnelltest.B_BER_SchnelltestRepository repository.
        /// </summary>
        public static global::B_BER_Schnelltest.B_BER_SchnelltestRepository repo = global::B_BER_Schnelltest.B_BER_SchnelltestRepository.Instance;

        static Neuanlage_Bereich instance = new Neuanlage_Bereich();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Neuanlage_Bereich()
        {
            BER_CD_NEU = "5";
            BER_BEZ_NEU = "B_BER_ST";
            FIBU_POS_NEU = "5";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Neuanlage_Bereich Instance
        {
            get { return instance; }
        }

#region Variables

        string _BER_CD_NEU;

        /// <summary>
        /// Gets or sets the value of variable BER_CD_NEU.
        /// </summary>
        [TestVariable("adb9b1de-7280-4683-a1d7-5f0933c323bb")]
        public string BER_CD_NEU
        {
            get { return _BER_CD_NEU; }
            set { _BER_CD_NEU = value; }
        }

        string _BER_BEZ_NEU;

        /// <summary>
        /// Gets or sets the value of variable BER_BEZ_NEU.
        /// </summary>
        [TestVariable("09a108b1-f4df-4031-b305-8169b0837bcf")]
        public string BER_BEZ_NEU
        {
            get { return _BER_BEZ_NEU; }
            set { _BER_BEZ_NEU = value; }
        }

        string _FIBU_POS_NEU;

        /// <summary>
        /// Gets or sets the value of variable FIBU_POS_NEU.
        /// </summary>
        [TestVariable("3cb9052b-eef6-488d-8a96-e48478c50314")]
        public string FIBU_POS_NEU
        {
            get { return _FIBU_POS_NEU; }
            set { _FIBU_POS_NEU = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Right Click item 'TblBer.FlexGrid_Tabelle.FlexGrid' at LowerCenter.", repo.TblBer.FlexGrid_Tabelle.FlexGridInfo, new RecordItemIndex(0));
            repo.TblBer.FlexGrid_Tabelle.FlexGrid.Click(System.Windows.Forms.MouseButtons.Right, Location.LowerCenter);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 1m to exist. Associated repository item: 'BBER.ZeileEinfuegen'", repo.BBER.ZeileEinfuegenInfo, new ActionTimeout(60000), new RecordItemIndex(1));
            repo.BBER.ZeileEinfuegenInfo.WaitForExists(60000);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'BBER.ZeileEinfuegen' at Center.", repo.BBER.ZeileEinfuegenInfo, new RecordItemIndex(2));
            repo.BBER.ZeileEinfuegen.Click();
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'TblBer.FlexGrid_Tabelle.ColBerCdRow5' at Center.", repo.TblBer.FlexGrid_Tabelle.ColBerCdRow5Info, new RecordItemIndex(3));
            repo.TblBer.FlexGrid_Tabelle.ColBerCdRow5.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$BER_CD_NEU' with focus on 'TblBer.FlexGrid_Tabelle.ColBerCdRow5'.", repo.TblBer.FlexGrid_Tabelle.ColBerCdRow5Info, new RecordItemIndex(4));
            repo.TblBer.FlexGrid_Tabelle.ColBerCdRow5.PressKeys(BER_CD_NEU);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Tab' Press.", new RecordItemIndex(5));
            Keyboard.Press(System.Windows.Forms.Keys.Tab, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$BER_BEZ_NEU' with focus on 'TblBer.FlexGrid_Tabelle.ColBerBezRow5'.", repo.TblBer.FlexGrid_Tabelle.ColBerBezRow5Info, new RecordItemIndex(6));
            repo.TblBer.FlexGrid_Tabelle.ColBerBezRow5.PressKeys(BER_BEZ_NEU);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Tab' Press.", new RecordItemIndex(7));
            Keyboard.Press(System.Windows.Forms.Keys.Tab, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$FIBU_POS_NEU' with focus on 'TblBer.FlexGrid_Tabelle.ColBerPosRow5'.", repo.TblBer.FlexGrid_Tabelle.ColBerPosRow5Info, new RecordItemIndex(8));
            repo.TblBer.FlexGrid_Tabelle.ColBerPosRow5.PressKeys(FIBU_POS_NEU);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Tab' Press.", new RecordItemIndex(9));
            Keyboard.Press(System.Windows.Forms.Keys.Tab, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$BER_CD_NEU) on item 'TblBer.FlexGrid_Tabelle.ColBerCdRow5'.", repo.TblBer.FlexGrid_Tabelle.ColBerCdRow5Info, new RecordItemIndex(10));
            Validate.AttributeEqual(repo.TblBer.FlexGrid_Tabelle.ColBerCdRow5Info, "Text", BER_CD_NEU);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$BER_BEZ_NEU) on item 'TblBer.FlexGrid_Tabelle.ColBerBezRow5'.", repo.TblBer.FlexGrid_Tabelle.ColBerBezRow5Info, new RecordItemIndex(11));
            Validate.AttributeEqual(repo.TblBer.FlexGrid_Tabelle.ColBerBezRow5Info, "Text", BER_BEZ_NEU);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$FIBU_POS_NEU) on item 'TblBer.FlexGrid_Tabelle.ColBerPosRow5'.", repo.TblBer.FlexGrid_Tabelle.ColBerPosRow5Info, new RecordItemIndex(12));
            Validate.AttributeEqual(repo.TblBer.FlexGrid_Tabelle.ColBerPosRow5Info, "Text", FIBU_POS_NEU);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
