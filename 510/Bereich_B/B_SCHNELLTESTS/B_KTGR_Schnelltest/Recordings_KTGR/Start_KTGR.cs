///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace B_KTGR_Schnelltest.Recordings_KTGR
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Start_KTGR recording.
    /// </summary>
    [TestModule("8879bf2b-ddba-45f0-827d-2159f2848de6", ModuleType.Recording, 1)]
    public partial class Start_KTGR : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::B_KTGR_Schnelltest.B_KTGR_SchnelltestRepository repository.
        /// </summary>
        public static global::B_KTGR_Schnelltest.B_KTGR_SchnelltestRepository repo = global::B_KTGR_Schnelltest.B_KTGR_SchnelltestRepository.Instance;

        static Start_KTGR instance = new Start_KTGR();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Start_KTGR()
        {
            Programm_KTGR = "B_KTGR Aufrufart KTGR";
            Startfile = "C:\\Testdaten\\Allgemein\\Start.bat";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Start_KTGR Instance
        {
            get { return instance; }
        }

#region Variables

        string _Programm_KTGR;

        /// <summary>
        /// Gets or sets the value of variable Programm_KTGR.
        /// </summary>
        [TestVariable("d77118d2-ecb3-47e6-9f9c-7706ed0c05e9")]
        public string Programm_KTGR
        {
            get { return _Programm_KTGR; }
            set { _Programm_KTGR = value; }
        }

        string _Startfile;

        /// <summary>
        /// Gets or sets the value of variable Startfile.
        /// </summary>
        [TestVariable("9b08cffd-f088-4337-9065-2ab25c6ca448")]
        public string Startfile
        {
            get { return _Startfile; }
            set { _Startfile = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Application", "Run application with file name from variable $Startfile with arguments from variable $Programm_KTGR in normal mode.", new RecordItemIndex(0));
            Host.Local.RunApplication(Startfile, Programm_KTGR, "", false);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 2m to exist. Associated repository item: 'TblKtgr.TitleBar100VerwaltenKontengruppen'", repo.TblKtgr.TitleBar100VerwaltenKontengruppenInfo, new ActionTimeout(120000), new RecordItemIndex(1));
            repo.TblKtgr.TitleBar100VerwaltenKontengruppenInfo.WaitForExists(120000);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (Text>'Verwalten Kontengruppen') on item 'TblKtgr.TitleBar100VerwaltenKontengruppen'.", repo.TblKtgr.TitleBar100VerwaltenKontengruppenInfo, new RecordItemIndex(2));
            Validate.AttributeContains(repo.TblKtgr.TitleBar100VerwaltenKontengruppenInfo, "Text", "Verwalten Kontengruppen");
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
