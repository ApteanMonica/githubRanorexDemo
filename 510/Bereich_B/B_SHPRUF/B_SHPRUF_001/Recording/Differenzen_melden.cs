///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace B_SHPRUF_001.Recording
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Differenzen_melden recording.
    /// </summary>
    [TestModule("dc634522-ca9f-4463-8ab3-1e2553f903b1", ModuleType.Recording, 1)]
    public partial class Differenzen_melden : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::B_SHPRUF_001.B_SHPRUF_001Repository repository.
        /// </summary>
        public static global::B_SHPRUF_001.B_SHPRUF_001Repository repo = global::B_SHPRUF_001.B_SHPRUF_001Repository.Instance;

        static Differenzen_melden instance = new Differenzen_melden();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Differenzen_melden()
        {
            Jahr = "2018";
            Periode = "2";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Differenzen_melden Instance
        {
            get { return instance; }
        }

#region Variables

        string _Jahr;

        /// <summary>
        /// Gets or sets the value of variable Jahr.
        /// </summary>
        [TestVariable("09672924-4b4a-49f6-9744-8d6cab4d3cf8")]
        public string Jahr
        {
            get { return _Jahr; }
            set { _Jahr = value; }
        }

        string _Periode;

        /// <summary>
        /// Gets or sets the value of variable Periode.
        /// </summary>
        [TestVariable("d393f164-01fc-4e18-b4d1-a1d0eba0543a")]
        public string Periode
        {
            get { return _Periode; }
            set { _Periode = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left DoubleClick item 'FrmMain.DfJahrbez' at Center.", repo.FrmMain.DfJahrbezInfo, new RecordItemIndex(0));
            repo.FrmMain.DfJahrbez.DoubleClick();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Back}' with focus on 'FrmMain.DfJahrbez'.", repo.FrmMain.DfJahrbezInfo, new RecordItemIndex(1));
            repo.FrmMain.DfJahrbez.PressKeys("{Back}");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Jahr' with focus on 'FrmMain.DfJahrbez'.", repo.FrmMain.DfJahrbezInfo, new RecordItemIndex(2));
            repo.FrmMain.DfJahrbez.PressKeys(Jahr);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmMain.Periode' at Center.", repo.FrmMain.PeriodeInfo, new RecordItemIndex(3));
            repo.FrmMain.Periode.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Periode' with focus on 'FrmMain.Periode'.", repo.FrmMain.PeriodeInfo, new RecordItemIndex(4));
            repo.FrmMain.Periode.PressKeys(Periode);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Jahr) on item 'FrmMain.DfJahrbez'.", repo.FrmMain.DfJahrbezInfo, new RecordItemIndex(5));
            Validate.AttributeEqual(repo.FrmMain.DfJahrbezInfo, "Text", Jahr);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Periode) on item 'FrmMain.Periode'.", repo.FrmMain.PeriodeInfo, new RecordItemIndex(6));
            Validate.AttributeEqual(repo.FrmMain.PeriodeInfo, "Text", Periode);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmMain.PbOK' at Center.", repo.FrmMain.PbOKInfo, new RecordItemIndex(7));
            repo.FrmMain.PbOK.Click();
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='Buchung: 87 \r\nS: 0,00\t\r\nH: 2000,00\r\n') on item 'DlgMessageBox.LabelMeldungstext'.", repo.DlgMessageBox.LabelMeldungstextInfo, new RecordItemIndex(8));
            Validate.AttributeEqual(repo.DlgMessageBox.LabelMeldungstextInfo, "Text", "Buchung: 87 \r\nS: 0,00\t\r\nH: 2000,00\r\n");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'DlgMessageBox.Button0' at Center.", repo.DlgMessageBox.Button0Info, new RecordItemIndex(9));
            repo.DlgMessageBox.Button0.Click();
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='Buchung: 88 \r\nS: 550,00\t\r\nH: 600,00\r\n') on item 'DlgMessageBox.LabelMeldungstext'.", repo.DlgMessageBox.LabelMeldungstextInfo, new RecordItemIndex(10));
            Validate.AttributeEqual(repo.DlgMessageBox.LabelMeldungstextInfo, "Text", "Buchung: 88 \r\nS: 550,00\t\r\nH: 600,00\r\n");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'DlgMessageBox.Button0' at Center.", repo.DlgMessageBox.Button0Info, new RecordItemIndex(11));
            repo.DlgMessageBox.Button0.Click();
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='Buchung <89> mit Ust-Betrag ohne Ust-Code!') on item 'DlgMessageBox.LabelMeldungstext'.", repo.DlgMessageBox.LabelMeldungstextInfo, new RecordItemIndex(12));
            Validate.AttributeEqual(repo.DlgMessageBox.LabelMeldungstextInfo, "Text", "Buchung <89> mit Ust-Betrag ohne Ust-Code!");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'DlgMessageBox.Button0' at Center.", repo.DlgMessageBox.Button0Info, new RecordItemIndex(13));
            repo.DlgMessageBox.Button0.Click();
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='Überprüfung beendet.\r\nEs wurden Differenzen gefunden.') on item 'DlgMessageBox.LabelMeldungstext'.", repo.DlgMessageBox.LabelMeldungstextInfo, new RecordItemIndex(14));
            Validate.AttributeEqual(repo.DlgMessageBox.LabelMeldungstextInfo, "Text", "Überprüfung beendet.\r\nEs wurden Differenzen gefunden.");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'DlgMessageBox.Button0' at Center.", repo.DlgMessageBox.Button0Info, new RecordItemIndex(15));
            repo.DlgMessageBox.Button0.Click();
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
