///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace B_BUCH_003.Recordings
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Validation_Jahr_Periode_Busy recording.
    /// </summary>
    [TestModule("724f5a50-53db-4040-8848-09349af4a092", ModuleType.Recording, 1)]
    public partial class Validation_Jahr_Periode_Busy : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::B_BUCH_003.B_BUCH_003Repository repository.
        /// </summary>
        public static global::B_BUCH_003.B_BUCH_003Repository repo = global::B_BUCH_003.B_BUCH_003Repository.Instance;

        static Validation_Jahr_Periode_Busy instance = new Validation_Jahr_Periode_Busy();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Validation_Jahr_Periode_Busy()
        {
            Jahr = "2020";
            Monat = "01";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Validation_Jahr_Periode_Busy Instance
        {
            get { return instance; }
        }

#region Variables

        string _Jahr;

        /// <summary>
        /// Gets or sets the value of variable Jahr.
        /// </summary>
        [TestVariable("5f913e7c-0b85-4f54-829d-89db75cdea76")]
        public string Jahr
        {
            get { return _Jahr; }
            set { _Jahr = value; }
        }

        string _Monat;

        /// <summary>
        /// Gets or sets the value of variable Monat.
        /// </summary>
        [TestVariable("c164bc50-67e5-4a1b-a96f-0e365945bb90")]
        public string Monat
        {
            get { return _Monat; }
            set { _Monat = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'MdiBuch.TitleBar100Dialogbuchung'.", repo.MdiBuch.TitleBar100DialogbuchungInfo, new RecordItemIndex(0));
            Validate.Exists(repo.MdiBuch.TitleBar100DialogbuchungInfo);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='100') on item 'MdiBuch.Toolbar_Kopfbereich.Firma'.", repo.MdiBuch.Toolbar_Kopfbereich.FirmaInfo, new RecordItemIndex(1));
            Validate.AttributeEqual(repo.MdiBuch.Toolbar_Kopfbereich.FirmaInfo, "Text", "100");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='B1') on item 'MdiBuch.Toolbar_Kopfbereich.Symbol'.", repo.MdiBuch.Toolbar_Kopfbereich.SymbolInfo, new RecordItemIndex(2));
            Validate.AttributeEqual(repo.MdiBuch.Toolbar_Kopfbereich.SymbolInfo, "Text", "B1");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Jahr) on item 'MdiBuch.Toolbar_Kopfbereich.DfJahrbezJ'.", repo.MdiBuch.Toolbar_Kopfbereich.DfJahrbezJInfo, new RecordItemIndex(3));
            Validate.AttributeEqual(repo.MdiBuch.Toolbar_Kopfbereich.DfJahrbezJInfo, "Text", Jahr);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Monat) on item 'MdiBuch.Toolbar_Kopfbereich.DfPeriodeJ'.", repo.MdiBuch.Toolbar_Kopfbereich.DfPeriodeJInfo, new RecordItemIndex(4));
            Validate.AttributeEqual(repo.MdiBuch.Toolbar_Kopfbereich.DfPeriodeJInfo, "Text", Monat);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='2800') on item 'MdiBuch.FrmZ.DfZahlktoNr'.", repo.MdiBuch.FrmZ.DfZahlktoNrInfo, new RecordItemIndex(5));
            Validate.AttributeEqual(repo.MdiBuch.FrmZ.DfZahlktoNrInfo, "Text", "2800");
            
            // Bankbez mit 2 Leerzeichen am Ende
            Report.Log(ReportLevel.Info, "Validation", "Bankbez mit 2 Leerzeichen am Ende\r\nValidating AttributeEqual (Text='Bank 1  ') on item 'MdiBuch.FrmZ.DfZahlktoBez'.", repo.MdiBuch.FrmZ.DfZahlktoBezInfo, new RecordItemIndex(6));
            Validate.AttributeEqual(repo.MdiBuch.FrmZ.DfZahlktoBezInfo, "Text", "Bank 1  ");
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
