///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace B_BUCH_004.Recordings
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Buchungsabschluss_Pruefung_Maske recording.
    /// </summary>
    [TestModule("d2996720-1750-49b4-b1b3-f45b0e39e05a", ModuleType.Recording, 1)]
    public partial class Buchungsabschluss_Pruefung_Maske : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::B_BUCH_004.B_BUCH_004Repository repository.
        /// </summary>
        public static global::B_BUCH_004.B_BUCH_004Repository repo = global::B_BUCH_004.B_BUCH_004Repository.Instance;

        static Buchungsabschluss_Pruefung_Maske instance = new Buchungsabschluss_Pruefung_Maske();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Buchungsabschluss_Pruefung_Maske()
        {
            Beleg1 = "SABU_TEST_01";
            Datum_Beleg = "01.01.2020";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Buchungsabschluss_Pruefung_Maske Instance
        {
            get { return instance; }
        }

#region Variables

        string _Beleg1;

        /// <summary>
        /// Gets or sets the value of variable Beleg1.
        /// </summary>
        [TestVariable("5dccd9b9-00bc-4b60-9a6c-c9463450b731")]
        public string Beleg1
        {
            get { return _Beleg1; }
            set { _Beleg1 = value; }
        }

        string _Datum_Beleg;

        /// <summary>
        /// Gets or sets the value of variable Datum_Beleg.
        /// </summary>
        [TestVariable("57c99255-ca27-4e1c-8a6a-c40c2cd86a02")]
        public string Datum_Beleg
        {
            get { return _Datum_Beleg; }
            set { _Datum_Beleg = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'MdiBuch.PbStandard2' at Center.", repo.MdiBuch.PbStandard2Info, new RecordItemIndex(0));
            repo.MdiBuch.PbStandard2.Click();
            
            // angezeigte_Soll_Seite
            Report.Log(ReportLevel.Info, "Section", "angezeigte_Soll_Seite", new RecordItemIndex(1));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='100,00') on item 'MdiBuch.Toolbar_Kopfbereich.DfSoll'.", repo.MdiBuch.Toolbar_Kopfbereich.DfSollInfo, new RecordItemIndex(2));
            Validate.AttributeEqual(repo.MdiBuch.Toolbar_Kopfbereich.DfSollInfo, "Text", "100,00");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='0,00') on item 'MdiBuch.Toolbar_Kopfbereich.DfHaben'.", repo.MdiBuch.Toolbar_Kopfbereich.DfHabenInfo, new RecordItemIndex(3));
            Validate.AttributeEqual(repo.MdiBuch.Toolbar_Kopfbereich.DfHabenInfo, "Text", "0,00");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='S') on item 'MdiBuch.tblB.ColArtRow1'.", repo.MdiBuch.tblB.ColArtRow1Info, new RecordItemIndex(4));
            Validate.AttributeEqual(repo.MdiBuch.tblB.ColArtRow1Info, "Text", "S");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'MdiBuch.PbStandard2' at Center.", repo.MdiBuch.PbStandard2Info, new RecordItemIndex(5));
            repo.MdiBuch.PbStandard2.Click();
            
            // Neue_Maske
            Report.Log(ReportLevel.Info, "Section", "Neue_Maske", new RecordItemIndex(6));
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 2m to exist. Associated repository item: 'MdiBuch.Toolbar_Kopfbereich.DfSoll_mit_Betrag_0'", repo.MdiBuch.Toolbar_Kopfbereich.DfSoll_mit_Betrag_0Info, new ActionTimeout(120000), new RecordItemIndex(7));
            repo.MdiBuch.Toolbar_Kopfbereich.DfSoll_mit_Betrag_0Info.WaitForExists(120000);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='0,00') on item 'MdiBuch.Toolbar_Kopfbereich.DfSoll'.", repo.MdiBuch.Toolbar_Kopfbereich.DfSollInfo, new RecordItemIndex(8));
            Validate.AttributeEqual(repo.MdiBuch.Toolbar_Kopfbereich.DfSollInfo, "Text", "0,00");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='0,00') on item 'MdiBuch.Toolbar_Kopfbereich.DfHaben'.", repo.MdiBuch.Toolbar_Kopfbereich.DfHabenInfo, new RecordItemIndex(9));
            Validate.AttributeEqual(repo.MdiBuch.Toolbar_Kopfbereich.DfHabenInfo, "Text", "0,00");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Beleg1) on item 'MdiBuch.FrmU.Beleg'.", repo.MdiBuch.FrmU.BelegInfo, new RecordItemIndex(10));
            Validate.AttributeEqual(repo.MdiBuch.FrmU.BelegInfo, "Text", Beleg1);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Datum_Beleg) on item 'MdiBuch.FrmU.Datum'.", repo.MdiBuch.FrmU.DatumInfo, new RecordItemIndex(11));
            Validate.AttributeEqual(repo.MdiBuch.FrmU.DatumInfo, "Text", Datum_Beleg);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
