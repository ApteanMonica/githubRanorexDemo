///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace B_BUCH_004.Recordings
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Pruefung_Soll_Zeile recording.
    /// </summary>
    [TestModule("2d42aed4-3e78-41fe-9ca8-311e4e8075cb", ModuleType.Recording, 1)]
    public partial class Pruefung_Soll_Zeile : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::B_BUCH_004.B_BUCH_004Repository repository.
        /// </summary>
        public static global::B_BUCH_004.B_BUCH_004Repository repo = global::B_BUCH_004.B_BUCH_004Repository.Instance;

        static Pruefung_Soll_Zeile instance = new Pruefung_Soll_Zeile();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Pruefung_Soll_Zeile()
        {
            Konto_S = "4000";
            Buchungstext = "SACHBUCHUNG_TEST_01";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Pruefung_Soll_Zeile Instance
        {
            get { return instance; }
        }

#region Variables

        string _Konto_S;

        /// <summary>
        /// Gets or sets the value of variable Konto_S.
        /// </summary>
        [TestVariable("31680909-8486-4731-b947-4c7d32c5f0f0")]
        public string Konto_S
        {
            get { return _Konto_S; }
            set { _Konto_S = value; }
        }

        string _Buchungstext;

        /// <summary>
        /// Gets or sets the value of variable Buchungstext.
        /// </summary>
        [TestVariable("8d1e2cca-01b5-4194-a06a-8bed70440387")]
        public string Buchungstext
        {
            get { return _Buchungstext; }
            set { _Buchungstext = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            // KopfBereich
            Report.Log(ReportLevel.Info, "Section", "KopfBereich", new RecordItemIndex(0));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='100,00') on item 'MdiBuch.Toolbar_Kopfbereich.DfSoll'.", repo.MdiBuch.Toolbar_Kopfbereich.DfSollInfo, new RecordItemIndex(1));
            Validate.AttributeEqual(repo.MdiBuch.Toolbar_Kopfbereich.DfSollInfo, "Text", "100,00");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='0,00') on item 'MdiBuch.Toolbar_Kopfbereich.DfHaben'.", repo.MdiBuch.Toolbar_Kopfbereich.DfHabenInfo, new RecordItemIndex(2));
            Validate.AttributeEqual(repo.MdiBuch.Toolbar_Kopfbereich.DfHabenInfo, "Text", "0,00");
            
            // Soll-Zeile
            Report.Log(ReportLevel.Info, "Section", "Soll-Zeile", new RecordItemIndex(3));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='S') on item 'MdiBuch.tblB.ColArtRow1'.", repo.MdiBuch.tblB.ColArtRow1Info, new RecordItemIndex(4));
            Validate.AttributeEqual(repo.MdiBuch.tblB.ColArtRow1Info, "Text", "S");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Konto_S) on item 'MdiBuch.tblB.ColKtoNrSollRow1'.", repo.MdiBuch.tblB.ColKtoNrSollRow1Info, new RecordItemIndex(5));
            Validate.AttributeEqual(repo.MdiBuch.tblB.ColKtoNrSollRow1Info, "Text", Konto_S);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='83,33') on item 'MdiBuch.tblB.ColBetragRow1'.", repo.MdiBuch.tblB.ColBetragRow1Info, new RecordItemIndex(6));
            Validate.AttributeEqual(repo.MdiBuch.tblB.ColBetragRow1Info, "Text", "83,33");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='M20') on item 'MdiBuch.tblB.ColUstCdRow1'.", repo.MdiBuch.tblB.ColUstCdRow1Info, new RecordItemIndex(7));
            Validate.AttributeEqual(repo.MdiBuch.tblB.ColUstCdRow1Info, "Text", "M20");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='16,67') on item 'MdiBuch.tblB.ColUstbetragRow1'.", repo.MdiBuch.tblB.ColUstbetragRow1Info, new RecordItemIndex(8));
            Validate.AttributeEqual(repo.MdiBuch.tblB.ColUstbetragRow1Info, "Text", "16,67");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='S') on item 'MdiBuch.tblB.ColKLRow1'.", repo.MdiBuch.tblB.ColKLRow1Info, new RecordItemIndex(9));
            Validate.AttributeEqual(repo.MdiBuch.tblB.ColKLRow1Info, "Text", "S");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='20') on item 'MdiBuch.tblB.ColBektNr1Row1'.", repo.MdiBuch.tblB.ColBektNr1Row1Info, new RecordItemIndex(10));
            Validate.AttributeEqual(repo.MdiBuch.tblB.ColBektNr1Row1Info, "Text", "20");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Buchungstext) on item 'MdiBuch.tblB.ColText1Row1'.", repo.MdiBuch.tblB.ColText1Row1Info, new RecordItemIndex(11));
            Validate.AttributeEqual(repo.MdiBuch.tblB.ColText1Row1Info, "Text", Buchungstext);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
