///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace B_BUCH_004.Recordings
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The SaBu_Sollseite_erzeugen recording.
    /// </summary>
    [TestModule("b7f8ebaa-ae39-480e-8445-5abc5b2ff247", ModuleType.Recording, 1)]
    public partial class SaBu_Sollseite_erzeugen : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::B_BUCH_004.B_BUCH_004Repository repository.
        /// </summary>
        public static global::B_BUCH_004.B_BUCH_004Repository repo = global::B_BUCH_004.B_BUCH_004Repository.Instance;

        static SaBu_Sollseite_erzeugen instance = new SaBu_Sollseite_erzeugen();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public SaBu_Sollseite_erzeugen()
        {
            Datum_Beleg = "01.01.2020";
            Beleg1 = "SABU_TEST_01";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static SaBu_Sollseite_erzeugen Instance
        {
            get { return instance; }
        }

#region Variables

        string _Datum_Beleg;

        /// <summary>
        /// Gets or sets the value of variable Datum_Beleg.
        /// </summary>
        [TestVariable("35b56147-59dd-4e32-89bc-b08f1edcca61")]
        public string Datum_Beleg
        {
            get { return _Datum_Beleg; }
            set { _Datum_Beleg = value; }
        }

        string _Beleg1;

        /// <summary>
        /// Gets or sets the value of variable Beleg1.
        /// </summary>
        [TestVariable("e9d4121e-7ca2-42ba-8589-26c7ce636af3")]
        public string Beleg1
        {
            get { return _Beleg1; }
            set { _Beleg1 = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'MdiBuch.FrmU.DfBelegnr' at Center.", repo.MdiBuch.FrmU.DfBelegnrInfo, new RecordItemIndex(0));
            repo.MdiBuch.FrmU.DfBelegnr.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Beleg1' with focus on 'MdiBuch.FrmU.DfBelegnr'.", repo.MdiBuch.FrmU.DfBelegnrInfo, new RecordItemIndex(1));
            repo.MdiBuch.FrmU.DfBelegnr.PressKeys(Beleg1);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Tab}'.", new RecordItemIndex(2));
            Keyboard.Press("{Tab}");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Datum_Beleg' with focus on 'MdiBuch.FrmU.DfDtbeleg'.", repo.MdiBuch.FrmU.DfDtbelegInfo, new RecordItemIndex(3));
            repo.MdiBuch.FrmU.DfDtbeleg.PressKeys(Datum_Beleg);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Tab}'.", new RecordItemIndex(4));
            Keyboard.Press("{Tab}");
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 30s to exist. Associated repository item: 'MdiBuch.FrmS.DfKtoNr'", repo.MdiBuch.FrmS.DfKtoNrInfo, new ActionTimeout(30000), new RecordItemIndex(5));
            repo.MdiBuch.FrmS.DfKtoNrInfo.WaitForExists(30000);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '4000' with focus on 'MdiBuch.FrmS.DfKtoNr'.", repo.MdiBuch.FrmS.DfKtoNrInfo, new RecordItemIndex(6));
            repo.MdiBuch.FrmS.DfKtoNr.PressKeys("4000");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Tab}'.", new RecordItemIndex(7));
            Keyboard.Press("{Tab}");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '100' with focus on 'MdiBuch.FrmS.DfBetrag'.", repo.MdiBuch.FrmS.DfBetragInfo, new RecordItemIndex(8));
            repo.MdiBuch.FrmS.DfBetrag.PressKeys("100");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Tab}{Tab}{Tab}'.", new RecordItemIndex(9));
            Keyboard.Press("{Tab}{Tab}{Tab}");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'SACHBUCHUNG_TEST_01' with focus on 'MdiBuch.FrmS.Text'.", repo.MdiBuch.FrmS.TextInfo, new RecordItemIndex(10));
            repo.MdiBuch.FrmS.Text.PressKeys("SACHBUCHUNG_TEST_01");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Tab}{Tab}{Tab}'.", new RecordItemIndex(11));
            Keyboard.Press("{Tab}{Tab}{Tab}");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '20' with focus on 'MdiBuch.FrmS.DfBubeBektnr1'.", repo.MdiBuch.FrmS.DfBubeBektnr1Info, new RecordItemIndex(12));
            repo.MdiBuch.FrmS.DfBubeBektnr1.PressKeys("20");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'MdiBuch.PbStandard2' at Center.", repo.MdiBuch.PbStandard2Info, new RecordItemIndex(13));
            repo.MdiBuch.PbStandard2.Click();
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'DlgMessageBox'.", repo.DlgMessageBox.SelfInfo, new RecordItemIndex(14));
            Validate.Exists(repo.DlgMessageBox.SelfInfo);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (Text>'Soll-Buchung') on item 'DlgMessageBox.LabelMeldungstext'.", repo.DlgMessageBox.LabelMeldungstextInfo, new RecordItemIndex(15));
            Validate.AttributeContains(repo.DlgMessageBox.LabelMeldungstextInfo, "Text", "Soll-Buchung");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'DlgMessageBox.Button0' at Center.", repo.DlgMessageBox.Button0Info, new RecordItemIndex(16));
            repo.DlgMessageBox.Button0.Click();
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
