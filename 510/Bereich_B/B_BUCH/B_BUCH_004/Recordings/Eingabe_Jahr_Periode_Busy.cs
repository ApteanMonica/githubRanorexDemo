///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace B_BUCH_004.Recordings
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Eingabe_Jahr_Periode_Busy recording.
    /// </summary>
    [TestModule("cf82f4ba-781f-44b9-8d92-256267b431cd", ModuleType.Recording, 1)]
    public partial class Eingabe_Jahr_Periode_Busy : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::B_BUCH_004.B_BUCH_004Repository repository.
        /// </summary>
        public static global::B_BUCH_004.B_BUCH_004Repository repo = global::B_BUCH_004.B_BUCH_004Repository.Instance;

        static Eingabe_Jahr_Periode_Busy instance = new Eingabe_Jahr_Periode_Busy();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Eingabe_Jahr_Periode_Busy()
        {
            Jahr = "2020";
            Monat = "01";
            Busy = "SA";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Eingabe_Jahr_Periode_Busy Instance
        {
            get { return instance; }
        }

#region Variables

        string _Jahr;

        /// <summary>
        /// Gets or sets the value of variable Jahr.
        /// </summary>
        [TestVariable("3c5eeb91-114a-4594-a3d2-80ff6ed41eda")]
        public string Jahr
        {
            get { return _Jahr; }
            set { _Jahr = value; }
        }

        string _Monat;

        /// <summary>
        /// Gets or sets the value of variable Monat.
        /// </summary>
        [TestVariable("e24a07d1-8fd3-46be-9036-763b52f1563e")]
        public string Monat
        {
            get { return _Monat; }
            set { _Monat = value; }
        }

        string _Busy;

        /// <summary>
        /// Gets or sets the value of variable Busy.
        /// </summary>
        [TestVariable("4109d6ca-22e0-433c-96db-a14f4d571f75")]
        public string Busy
        {
            get { return _Busy; }
            set { _Busy = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Set value", "Setting attribute Text to '' on item 'DlgFirmaPeriode.DfJahrbezJ'.", repo.DlgFirmaPeriode.DfJahrbezJInfo, new RecordItemIndex(0));
            repo.DlgFirmaPeriode.DfJahrbezJ.Element.SetAttributeValue("Text", "");
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute Text to '' on item 'DlgFirmaPeriode.DfPeriodeJ'.", repo.DlgFirmaPeriode.DfPeriodeJInfo, new RecordItemIndex(1));
            repo.DlgFirmaPeriode.DfPeriodeJ.Element.SetAttributeValue("Text", "");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Jahr' with focus on 'DlgFirmaPeriode.DfJahrbezJ'.", repo.DlgFirmaPeriode.DfJahrbezJInfo, new RecordItemIndex(2));
            repo.DlgFirmaPeriode.DfJahrbezJ.PressKeys(Jahr);
            
            // BAR: Anpassung wie in B_ERBU_001 aus StartAUT
            Report.Log(ReportLevel.Info, "Delay", "BAR: Anpassung wie in B_ERBU_001 aus StartAUT\r\nWaiting for 1s.", new RecordItemIndex(3));
            Delay.Duration(1000, false);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Tab' Press.", new RecordItemIndex(4));
            Keyboard.Press(System.Windows.Forms.Keys.Tab, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            // BAR: Anpassung wie in B_ERBU_001 aus StartAUT
            Report.Log(ReportLevel.Info, "Delay", "BAR: Anpassung wie in B_ERBU_001 aus StartAUT\r\nWaiting for 1s.", new RecordItemIndex(5));
            Delay.Duration(1000, false);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Monat' with focus on 'DlgFirmaPeriode.DfPeriodeJ'.", repo.DlgFirmaPeriode.DfPeriodeJInfo, new RecordItemIndex(6));
            repo.DlgFirmaPeriode.DfPeriodeJ.PressKeys(Monat);
            
            // BAR: Anpassung wie in B_ERBU_001 aus StartAUT
            Report.Log(ReportLevel.Info, "Delay", "BAR: Anpassung wie in B_ERBU_001 aus StartAUT\r\nWaiting for 1s.", new RecordItemIndex(7));
            Delay.Duration(1000, false);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Tab' Press.", new RecordItemIndex(8));
            Keyboard.Press(System.Windows.Forms.Keys.Tab, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            // BAR: Anpassung wie in B_ERBU_001 aus StartAUT
            Report.Log(ReportLevel.Info, "Delay", "BAR: Anpassung wie in B_ERBU_001 aus StartAUT\r\nWaiting for 1s.", new RecordItemIndex(9));
            Delay.Duration(1000, false);
            
            // BAR: Anpassung wie in B_ERBU_001 aus StartAUT
            Report.Log(ReportLevel.Info, "Validation", "BAR: Anpassung wie in B_ERBU_001 aus StartAUT\r\nValidating AttributeEqual (Text=$Jahr) on item 'DlgFirmaPeriode.DfJahrbezJ'.", repo.DlgFirmaPeriode.DfJahrbezJInfo, new RecordItemIndex(10));
            Validate.AttributeEqual(repo.DlgFirmaPeriode.DfJahrbezJInfo, "Text", Jahr);
            
            // BAR: Anpassung wie in B_ERBU_001 aus StartAUT
            Report.Log(ReportLevel.Info, "Validation", "BAR: Anpassung wie in B_ERBU_001 aus StartAUT\r\nValidating AttributeEqual (Text=$Monat) on item 'DlgFirmaPeriode.DfPeriodeJ'.", repo.DlgFirmaPeriode.DfPeriodeJInfo, new RecordItemIndex(11));
            Validate.AttributeEqual(repo.DlgFirmaPeriode.DfPeriodeJInfo, "Text", Monat);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'DlgFirmaPeriode.PbOK' at Center.", repo.DlgFirmaPeriode.PbOKInfo, new RecordItemIndex(12));
            repo.DlgFirmaPeriode.PbOK.Click();
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 1m to exist. Associated repository item: 'DlgListBox.TitleBar100AuswahllisteBuchungssymb'", repo.DlgListBox.TitleBar100AuswahllisteBuchungssymbInfo, new ActionTimeout(60000), new RecordItemIndex(13));
            repo.DlgListBox.TitleBar100AuswahllisteBuchungssymbInfo.WaitForExists(60000);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (Text>'Auswahlliste Buchungssymbole') on item 'DlgListBox.TitleBar100AuswahllisteBuchungssymb'.", repo.DlgListBox.TitleBar100AuswahllisteBuchungssymbInfo, new RecordItemIndex(14));
            Validate.AttributeContains(repo.DlgListBox.TitleBar100AuswahllisteBuchungssymbInfo, "Text", "Auswahlliste Buchungssymbole");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (Text>'SA\t\tSachbuchung\tU') on item 'DlgListBox.Row14'.", repo.DlgListBox.Row14Info, new RecordItemIndex(15));
            Validate.AttributeContains(repo.DlgListBox.Row14Info, "Text", "SA\t\tSachbuchung\tU");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (Text>$Busy) on item 'DlgListBox.Row14'.", repo.DlgListBox.Row14Info, new RecordItemIndex(16));
            Validate.AttributeContains(repo.DlgListBox.Row14Info, "Text", Busy);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'DlgListBox.Row14Column0' at Center.", repo.DlgListBox.Row14Column0Info, new RecordItemIndex(17));
            repo.DlgListBox.Row14Column0.Click();
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'DlgListBox.PbOk' at Center.", repo.DlgListBox.PbOkInfo, new RecordItemIndex(18));
            repo.DlgListBox.PbOk.Click();
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
