///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace B_BUCH_002.Recordings
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Betrag_Text recording.
    /// </summary>
    [TestModule("63d7390b-bb88-4c7f-b39c-03abf6677c91", ModuleType.Recording, 1)]
    public partial class Betrag_Text : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::B_BUCH_002.B_BUCH_002Repository repository.
        /// </summary>
        public static global::B_BUCH_002.B_BUCH_002Repository repo = global::B_BUCH_002.B_BUCH_002Repository.Instance;

        static Betrag_Text instance = new Betrag_Text();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Betrag_Text()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Betrag_Text Instance
        {
            get { return instance; }
        }

#region Variables

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '100,00' with focus on 'MdiBuch.FrmRG.Hauptframe_2.DfBetrag'.", repo.MdiBuch.FrmRG.Hauptframe_2.DfBetragInfo, new RecordItemIndex(0));
            repo.MdiBuch.FrmRG.Hauptframe_2.DfBetrag.PressKeys("100,00");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Tab}{Tab}' with focus on 'MdiBuch.FrmRG.Hauptframe_2.DfBetrag'.", repo.MdiBuch.FrmRG.Hauptframe_2.DfBetragInfo, new RecordItemIndex(1));
            repo.MdiBuch.FrmRG.Hauptframe_2.DfBetrag.PressKeys("{Tab}{Tab}");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'AR-Buchungs-Test_1' with focus on 'MdiBuch.FrmRG.Hauptframe_2.DfText1'.", repo.MdiBuch.FrmRG.Hauptframe_2.DfText1Info, new RecordItemIndex(2));
            repo.MdiBuch.FrmRG.Hauptframe_2.DfText1.PressKeys("AR-Buchungs-Test_1");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Tab' Press.", new RecordItemIndex(3));
            Keyboard.Press(System.Windows.Forms.Keys.Tab, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'MdiBuch.PbStandard2' at Center.", repo.MdiBuch.PbStandard2Info, new RecordItemIndex(4));
            repo.MdiBuch.PbStandard2.Click();
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='Die Zahlungsart benötigt eine Bankverbindung !') on item 'DlgMessageBox.LabelMeldungstext'.", repo.DlgMessageBox.LabelMeldungstextInfo, new RecordItemIndex(5));
            Validate.AttributeEqual(repo.DlgMessageBox.LabelMeldungstextInfo, "Text", "Die Zahlungsart benötigt eine Bankverbindung !");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'DlgMessageBox.Button0' at Center.", repo.DlgMessageBox.Button0Info, new RecordItemIndex(6));
            repo.DlgMessageBox.Button0.Click();
            
            // Center Right für Klick auf PD-Pfeil
            Report.Log(ReportLevel.Info, "Mouse", "Center Right für Klick auf PD-Pfeil\r\nMouse Left Click item 'MdiBuch.FrmRG.unterer_Frame_3.Zahlungsart' at CenterRight.", repo.MdiBuch.FrmRG.unterer_Frame_3.ZahlungsartInfo, new RecordItemIndex(7));
            repo.MdiBuch.FrmRG.unterer_Frame_3.Zahlungsart.Click(Location.CenterRight);
            
            // Center Right für Klick auf PD-Pfeil damit Wert markiert ist
            Report.Log(ReportLevel.Info, "Mouse", "Center Right für Klick auf PD-Pfeil damit Wert markiert ist\r\nMouse Left Click item 'MdiBuch.FrmRG.unterer_Frame_3.Zahlungsart' at CenterRight.", repo.MdiBuch.FrmRG.unterer_Frame_3.ZahlungsartInfo, new RecordItemIndex(8));
            repo.MdiBuch.FrmRG.unterer_Frame_3.Zahlungsart.Click(Location.CenterRight);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'B' with focus on 'MdiBuch.FrmRG.unterer_Frame_3.Zahlungsart'.", repo.MdiBuch.FrmRG.unterer_Frame_3.ZahlungsartInfo, new RecordItemIndex(9));
            repo.MdiBuch.FrmRG.unterer_Frame_3.Zahlungsart.PressKeys("B");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Tab' Press.", new RecordItemIndex(10));
            Keyboard.Press(System.Windows.Forms.Keys.Tab, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'MdiBuch.PbStandard2' at Center.", repo.MdiBuch.PbStandard2Info, new RecordItemIndex(11));
            repo.MdiBuch.PbStandard2.Click();
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
