///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace B_BUCH_002.Recordings_B_BUAB
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Validations_AR_Buchung_in_B_BUAB recording.
    /// </summary>
    [TestModule("f76425df-6dcd-4e95-92cb-a19cfd709ee7", ModuleType.Recording, 1)]
    public partial class Validations_AR_Buchung_in_B_BUAB : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::B_BUCH_002.B_BUCH_002Repository repository.
        /// </summary>
        public static global::B_BUCH_002.B_BUCH_002Repository repo = global::B_BUCH_002.B_BUCH_002Repository.Instance;

        static Validations_AR_Buchung_in_B_BUAB instance = new Validations_AR_Buchung_in_B_BUAB();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Validations_AR_Buchung_in_B_BUAB()
        {
            Beleg1 = "B_BUCH_002_A";
            Kunde = "200066";
            Busy = "AR";
            Tagesdatum = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Validations_AR_Buchung_in_B_BUAB Instance
        {
            get { return instance; }
        }

#region Variables

        string _Beleg1;

        /// <summary>
        /// Gets or sets the value of variable Beleg1.
        /// </summary>
        [TestVariable("b6492872-0287-4d28-89ba-edcd8988c2fc")]
        public string Beleg1
        {
            get { return _Beleg1; }
            set { _Beleg1 = value; }
        }

        string _Kunde;

        /// <summary>
        /// Gets or sets the value of variable Kunde.
        /// </summary>
        [TestVariable("02026c1b-1ae3-4f68-9b4c-c9a3d15271f5")]
        public string Kunde
        {
            get { return _Kunde; }
            set { _Kunde = value; }
        }

        string _Busy;

        /// <summary>
        /// Gets or sets the value of variable Busy.
        /// </summary>
        [TestVariable("960e71c8-20dd-4882-b1db-4a14df12c77c")]
        public string Busy
        {
            get { return _Busy; }
            set { _Busy = value; }
        }

        string _Tagesdatum;

        /// <summary>
        /// Gets or sets the value of variable Tagesdatum.
        /// </summary>
        [TestVariable("30c4cef4-c8bb-44d5-abbd-0a5c70e4d4c5")]
        public string Tagesdatum
        {
            get { return _Tagesdatum; }
            set { _Tagesdatum = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (Text>$Tagesdatum) on item 'B_BUAB_TblB.Tabelle_FlexGrid.ColDtAendgRow1'.", repo.B_BUAB_TblB.Tabelle_FlexGrid.ColDtAendgRow1Info, new RecordItemIndex(0));
            Validate.AttributeContains(repo.B_BUAB_TblB.Tabelle_FlexGrid.ColDtAendgRow1Info, "Text", Tagesdatum);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Beleg1) on item 'B_BUAB_TblB.Tabelle_FlexGrid.ColBelegnrRow1'.", repo.B_BUAB_TblB.Tabelle_FlexGrid.ColBelegnrRow1Info, new RecordItemIndex(1));
            Validate.AttributeEqual(repo.B_BUAB_TblB.Tabelle_FlexGrid.ColBelegnrRow1Info, "Text", Beleg1);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='AR-Buchungs-Test_1') on item 'B_BUAB_TblB.Tabelle_FlexGrid.ColText1Row1'.", repo.B_BUAB_TblB.Tabelle_FlexGrid.ColText1Row1Info, new RecordItemIndex(2));
            Validate.AttributeEqual(repo.B_BUAB_TblB.Tabelle_FlexGrid.ColText1Row1Info, "Text", "AR-Buchungs-Test_1");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='01.2020') on item 'B_BUAB_TblB.Tabelle_FlexGrid.ColJahrPeriRow1'.", repo.B_BUAB_TblB.Tabelle_FlexGrid.ColJahrPeriRow1Info, new RecordItemIndex(3));
            Validate.AttributeEqual(repo.B_BUAB_TblB.Tabelle_FlexGrid.ColJahrPeriRow1Info, "Text", "01.2020");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='2000') on item 'B_BUAB_TblB.Tabelle_FlexGrid.ColKtoNrRow1'.", repo.B_BUAB_TblB.Tabelle_FlexGrid.ColKtoNrRow1Info, new RecordItemIndex(4));
            Validate.AttributeEqual(repo.B_BUAB_TblB.Tabelle_FlexGrid.ColKtoNrRow1Info, "Text", "2000");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Busy) on item 'B_BUAB_TblB.Tabelle_FlexGrid.ColBusyRow1'.", repo.B_BUAB_TblB.Tabelle_FlexGrid.ColBusyRow1Info, new RecordItemIndex(5));
            Validate.AttributeEqual(repo.B_BUAB_TblB.Tabelle_FlexGrid.ColBusyRow1Info, "Text", Busy);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='R') on item 'B_BUAB_TblB.Tabelle_FlexGrid.ColArtRow1'.", repo.B_BUAB_TblB.Tabelle_FlexGrid.ColArtRow1Info, new RecordItemIndex(6));
            Validate.AttributeEqual(repo.B_BUAB_TblB.Tabelle_FlexGrid.ColArtRow1Info, "Text", "R");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='4000') on item 'B_BUAB_TblB.Tabelle_FlexGrid.ColGKtoNrRow1'.", repo.B_BUAB_TblB.Tabelle_FlexGrid.ColGKtoNrRow1Info, new RecordItemIndex(7));
            Validate.AttributeEqual(repo.B_BUAB_TblB.Tabelle_FlexGrid.ColGKtoNrRow1Info, "Text", "4000");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Kunde) on item 'B_BUAB_TblB.Tabelle_FlexGrid.ColAdrNrRow1'.", repo.B_BUAB_TblB.Tabelle_FlexGrid.ColAdrNrRow1Info, new RecordItemIndex(8));
            Validate.AttributeEqual(repo.B_BUAB_TblB.Tabelle_FlexGrid.ColAdrNrRow1Info, "Text", Kunde);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='100,00') on item 'B_BUAB_TblB.Tabelle_FlexGrid.ColBetragRow1'.", repo.B_BUAB_TblB.Tabelle_FlexGrid.ColBetragRow1Info, new RecordItemIndex(9));
            Validate.AttributeEqual(repo.B_BUAB_TblB.Tabelle_FlexGrid.ColBetragRow1Info, "Text", "100,00");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='S') on item 'B_BUAB_TblB.Tabelle_FlexGrid.ColSHRow1'.", repo.B_BUAB_TblB.Tabelle_FlexGrid.ColSHRow1Info, new RecordItemIndex(10));
            Validate.AttributeEqual(repo.B_BUAB_TblB.Tabelle_FlexGrid.ColSHRow1Info, "Text", "S");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='2020-1') on item 'B_BUAB_TblB.Tabelle_FlexGrid.ColUvaRow1'.", repo.B_BUAB_TblB.Tabelle_FlexGrid.ColUvaRow1Info, new RecordItemIndex(11));
            Validate.AttributeEqual(repo.B_BUAB_TblB.Tabelle_FlexGrid.ColUvaRow1Info, "Text", "2020-1");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='1') on item 'B_BUAB_TblB.Tabelle_FlexGrid.ColStatusRow1'.", repo.B_BUAB_TblB.Tabelle_FlexGrid.ColStatusRow1Info, new RecordItemIndex(12));
            Validate.AttributeEqual(repo.B_BUAB_TblB.Tabelle_FlexGrid.ColStatusRow1Info, "Text", "1");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='RS') on item 'B_BUAB_TblB.Tabelle_FlexGrid.ColUserRow1'.", repo.B_BUAB_TblB.Tabelle_FlexGrid.ColUserRow1Info, new RecordItemIndex(13));
            Validate.AttributeEqual(repo.B_BUAB_TblB.Tabelle_FlexGrid.ColUserRow1Info, "Text", "RS");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (Text>$Tagesdatum) on item 'B_BUAB_TblB.Tabelle_FlexGrid.ColDtAendgRow2'.", repo.B_BUAB_TblB.Tabelle_FlexGrid.ColDtAendgRow2Info, new RecordItemIndex(14));
            Validate.AttributeContains(repo.B_BUAB_TblB.Tabelle_FlexGrid.ColDtAendgRow2Info, "Text", Tagesdatum);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='2') on item 'B_BUAB_TblB.Tabelle_FlexGrid.ColKeyposRow2'.", repo.B_BUAB_TblB.Tabelle_FlexGrid.ColKeyposRow2Info, new RecordItemIndex(15));
            Validate.AttributeEqual(repo.B_BUAB_TblB.Tabelle_FlexGrid.ColKeyposRow2Info, "Text", "2");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='4000') on item 'B_BUAB_TblB.Tabelle_FlexGrid.ColKtoNrRow2'.", repo.B_BUAB_TblB.Tabelle_FlexGrid.ColKtoNrRow2Info, new RecordItemIndex(16));
            Validate.AttributeEqual(repo.B_BUAB_TblB.Tabelle_FlexGrid.ColKtoNrRow2Info, "Text", "4000");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='S') on item 'B_BUAB_TblB.Tabelle_FlexGrid.ColArtRow2'.", repo.B_BUAB_TblB.Tabelle_FlexGrid.ColArtRow2Info, new RecordItemIndex(17));
            Validate.AttributeEqual(repo.B_BUAB_TblB.Tabelle_FlexGrid.ColArtRow2Info, "Text", "S");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='2000') on item 'B_BUAB_TblB.Tabelle_FlexGrid.ColGKtoNrRow2'.", repo.B_BUAB_TblB.Tabelle_FlexGrid.ColGKtoNrRow2Info, new RecordItemIndex(18));
            Validate.AttributeEqual(repo.B_BUAB_TblB.Tabelle_FlexGrid.ColGKtoNrRow2Info, "Text", "2000");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='83,33') on item 'B_BUAB_TblB.Tabelle_FlexGrid.ColBetragRow2'.", repo.B_BUAB_TblB.Tabelle_FlexGrid.ColBetragRow2Info, new RecordItemIndex(19));
            Validate.AttributeEqual(repo.B_BUAB_TblB.Tabelle_FlexGrid.ColBetragRow2Info, "Text", "83,33");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='H') on item 'B_BUAB_TblB.Tabelle_FlexGrid.ColSHRow2'.", repo.B_BUAB_TblB.Tabelle_FlexGrid.ColSHRow2Info, new RecordItemIndex(20));
            Validate.AttributeEqual(repo.B_BUAB_TblB.Tabelle_FlexGrid.ColSHRow2Info, "Text", "H");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='M20') on item 'B_BUAB_TblB.Tabelle_FlexGrid.ColUstcdRow2'.", repo.B_BUAB_TblB.Tabelle_FlexGrid.ColUstcdRow2Info, new RecordItemIndex(21));
            Validate.AttributeEqual(repo.B_BUAB_TblB.Tabelle_FlexGrid.ColUstcdRow2Info, "Text", "M20");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='16,67') on item 'B_BUAB_TblB.Tabelle_FlexGrid.ColUstbetragRow2'.", repo.B_BUAB_TblB.Tabelle_FlexGrid.ColUstbetragRow2Info, new RecordItemIndex(22));
            Validate.AttributeEqual(repo.B_BUAB_TblB.Tabelle_FlexGrid.ColUstbetragRow2Info, "Text", "16,67");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='2020-1') on item 'B_BUAB_TblB.Tabelle_FlexGrid.ColUvaRow2'.", repo.B_BUAB_TblB.Tabelle_FlexGrid.ColUvaRow2Info, new RecordItemIndex(23));
            Validate.AttributeEqual(repo.B_BUAB_TblB.Tabelle_FlexGrid.ColUvaRow2Info, "Text", "2020-1");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='40') on item 'B_BUAB_TblB.Tabelle_FlexGrid.ColCd1Row2'.", repo.B_BUAB_TblB.Tabelle_FlexGrid.ColCd1Row2Info, new RecordItemIndex(24));
            Validate.AttributeEqual(repo.B_BUAB_TblB.Tabelle_FlexGrid.ColCd1Row2Info, "Text", "40");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='200') on item 'B_BUAB_TblB.Tabelle_FlexGrid.ColCd3Row2'.", repo.B_BUAB_TblB.Tabelle_FlexGrid.ColCd3Row2Info, new RecordItemIndex(25));
            Validate.AttributeEqual(repo.B_BUAB_TblB.Tabelle_FlexGrid.ColCd3Row2Info, "Text", "200");
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
