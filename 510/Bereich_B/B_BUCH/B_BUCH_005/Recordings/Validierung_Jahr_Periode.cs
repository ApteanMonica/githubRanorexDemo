///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace B_BUCH_005.Recordings
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Validierung_Jahr_Periode recording.
    /// </summary>
    [TestModule("99a7da19-c86d-4870-8abd-c38f25dccec6", ModuleType.Recording, 1)]
    public partial class Validierung_Jahr_Periode : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::B_BUCH_005.B_BUCH_005Repository repository.
        /// </summary>
        public static global::B_BUCH_005.B_BUCH_005Repository repo = global::B_BUCH_005.B_BUCH_005Repository.Instance;

        static Validierung_Jahr_Periode instance = new Validierung_Jahr_Periode();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Validierung_Jahr_Periode()
        {
            busy = "ER";
            jahr = "2023";
            newVariable = "";
            periode = "3";
            soll = "0";
            haben = "0";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Validierung_Jahr_Periode Instance
        {
            get { return instance; }
        }

#region Variables

        string _busy;

        /// <summary>
        /// Gets or sets the value of variable busy.
        /// </summary>
        [TestVariable("3147c417-c631-4195-a6c3-ee9ed067e4f0")]
        public string busy
        {
            get { return _busy; }
            set { _busy = value; }
        }

        string _jahr;

        /// <summary>
        /// Gets or sets the value of variable jahr.
        /// </summary>
        [TestVariable("14675bb8-6109-4428-a336-e03111f183bc")]
        public string jahr
        {
            get { return _jahr; }
            set { _jahr = value; }
        }

        string _newVariable;

        /// <summary>
        /// Gets or sets the value of variable newVariable.
        /// </summary>
        [TestVariable("7baf5a4b-fb39-42cb-a262-7f11abf18553")]
        public string newVariable
        {
            get { return _newVariable; }
            set { _newVariable = value; }
        }

        string _periode;

        /// <summary>
        /// Gets or sets the value of variable periode.
        /// </summary>
        [TestVariable("fcb5fda4-8104-42ce-91a7-97cbf49a3f49")]
        public string periode
        {
            get { return _periode; }
            set { _periode = value; }
        }

        string _soll;

        /// <summary>
        /// Gets or sets the value of variable soll.
        /// </summary>
        [TestVariable("6da3d57c-5591-416f-9fdd-fef38730706e")]
        public string soll
        {
            get { return _soll; }
            set { _soll = value; }
        }

        string _haben;

        /// <summary>
        /// Gets or sets the value of variable haben.
        /// </summary>
        [TestVariable("3f5c1ca2-3116-452f-b3f2-3f97098fea5f")]
        public string haben
        {
            get { return _haben; }
            set { _haben = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (Text>'Dialogbuchung') on item 'MdiBuch.TitleBar100Dialogbuchung'.", repo.MdiBuch.TitleBar100DialogbuchungInfo, new RecordItemIndex(0));
            Validate.AttributeContains(repo.MdiBuch.TitleBar100DialogbuchungInfo, "Text", "Dialogbuchung");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$busy) on item 'MdiBuch.Symbol'.", repo.MdiBuch.SymbolInfo, new RecordItemIndex(1));
            Validate.AttributeEqual(repo.MdiBuch.SymbolInfo, "Text", busy);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$jahr) on item 'MdiBuch.ToolBar.DfJahrbezJ'.", repo.MdiBuch.ToolBar.DfJahrbezJInfo, new RecordItemIndex(2));
            Validate.AttributeEqual(repo.MdiBuch.ToolBar.DfJahrbezJInfo, "Text", jahr);
            
            //Validate_DfPeriodeJ(repo.MdiBuch.ToolBar.DfPeriodeJInfo);
            
            //Validate_DfPeriodeJ1(repo.MdiBuch.ToolBar.DfPeriodeJInfo);
            
            //Validate_DfSoll(repo.MdiBuch.ToolBar.DfSollInfo);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'Text' from item 'MdiBuch.ToolBar.DfPeriodeJ' and assigning its value to variable 'newVariable'.", repo.MdiBuch.ToolBar.DfPeriodeJInfo, new RecordItemIndex(6));
            newVariable = repo.MdiBuch.ToolBar.DfPeriodeJ.Element.GetAttributeValueText("Text");
            
            Ranorex.AutomationHelpers.UserCodeCollections.Aptean.Validate2Digits(newVariable, periode);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'Text' from item 'MdiBuch.ToolBar.DfSoll' and assigning its value to variable 'newVariable'.", repo.MdiBuch.ToolBar.DfSollInfo, new RecordItemIndex(8));
            newVariable = repo.MdiBuch.ToolBar.DfSoll.Element.GetAttributeValueText("Text");
            
            Ranorex.AutomationHelpers.UserCodeCollections.Aptean.ValidateWithoutDecimals(newVariable, soll);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'Text' from item 'MdiBuch.ToolBar.DfHaben' and assigning its value to variable 'newVariable'.", repo.MdiBuch.ToolBar.DfHabenInfo, new RecordItemIndex(10));
            newVariable = repo.MdiBuch.ToolBar.DfHaben.Element.GetAttributeValueText("Text");
            
            Ranorex.AutomationHelpers.UserCodeCollections.Aptean.ValidateWithoutDecimals(newVariable, haben);
            
            //Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'ControlText' from item 'MdiBuch.ToolBar.DfPeriodeJ' and assigning the part of its value captured by '\\((.*?)\\)' to variable 'newVariable'.", repo.MdiBuch.ToolBar.DfPeriodeJInfo, new RecordItemIndex(12));
            //newVariable = repo.MdiBuch.ToolBar.DfPeriodeJ.Element.GetAttributeValueText("ControlText", new Regex("\\((.*?)\\)"));
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='yourtext') on item 'MdiBuch.ToolBar.DfPeriodeJ'.", repo.MdiBuch.ToolBar.DfPeriodeJInfo, new RecordItemIndex(13));
            //Validate.AttributeEqual(repo.MdiBuch.ToolBar.DfPeriodeJInfo, "Text", "yourtext");
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating AttributeRegex ($newVariable~'[1-9]{1}') on item 'MdiBuch.ToolBar.DfPeriodeJ'.", repo.MdiBuch.ToolBar.DfPeriodeJInfo, new RecordItemIndex(14));
            //Validate.AttributeRegex(repo.MdiBuch.ToolBar.DfPeriodeJInfo, newVariable, new Regex("[1-9]{1}"));
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
