///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace B_BUCH_005.Recordings
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Eingabe_1 recording.
    /// </summary>
    [TestModule("07de4d3d-5ab8-4b14-b14d-f0eb5cdcf350", ModuleType.Recording, 1)]
    public partial class Eingabe_1 : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::B_BUCH_005.B_BUCH_005Repository repository.
        /// </summary>
        public static global::B_BUCH_005.B_BUCH_005Repository repo = global::B_BUCH_005.B_BUCH_005Repository.Instance;

        static Eingabe_1 instance = new Eingabe_1();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Eingabe_1()
        {
            lieferant = "303112";
            belegNr = "2300007";
            bereiche = "30";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Eingabe_1 Instance
        {
            get { return instance; }
        }

#region Variables

        string _lieferant;

        /// <summary>
        /// Gets or sets the value of variable lieferant.
        /// </summary>
        [TestVariable("80c34f5d-707c-43e9-82ab-b520d389a9ab")]
        public string lieferant
        {
            get { return _lieferant; }
            set { _lieferant = value; }
        }

        string _belegNr;

        /// <summary>
        /// Gets or sets the value of variable belegNr.
        /// </summary>
        [TestVariable("525e9dcf-820a-49ee-843a-71e19ba3adc7")]
        public string belegNr
        {
            get { return _belegNr; }
            set { _belegNr = value; }
        }

        string _bereiche;

        /// <summary>
        /// Gets or sets the value of variable bereiche.
        /// </summary>
        [TestVariable("52a46bac-6ff1-40bb-9be1-4952fb12bc92")]
        public string bereiche
        {
            get { return _bereiche; }
            set { _bereiche = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'MdiBuch.Konto' at Center.", repo.MdiBuch.KontoInfo, new RecordItemIndex(0));
            repo.MdiBuch.Konto.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$lieferant' with focus on 'MdiBuch.Konto'.", repo.MdiBuch.KontoInfo, new RecordItemIndex(1));
            repo.MdiBuch.Konto.PressKeys(lieferant);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Tab}'.", new RecordItemIndex(2));
            Keyboard.Press("{Tab}");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$belegNr' with focus on 'MdiBuch.Beleg'.", repo.MdiBuch.BelegInfo, new RecordItemIndex(3));
            repo.MdiBuch.Beleg.PressKeys(belegNr);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Tab}{Return}{F12}'.", new RecordItemIndex(4));
            Keyboard.Press("{Tab}{Return}{F12}");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$bereiche' with focus on 'MdiBuch.Bereiche'.", repo.MdiBuch.BereicheInfo, new RecordItemIndex(5));
            repo.MdiBuch.Bereiche.PressKeys(bereiche);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
