///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace B_BUCH_001.Recordings
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Validation_Lieferant_UVA_Samk recording.
    /// </summary>
    [TestModule("2e81da26-aa4a-4673-b53b-01ec06a6bccc", ModuleType.Recording, 1)]
    public partial class Validation_Lieferant_UVA_Samk : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::B_BUCH_001.B_BUCH_001Repository repository.
        /// </summary>
        public static global::B_BUCH_001.B_BUCH_001Repository repo = global::B_BUCH_001.B_BUCH_001Repository.Instance;

        static Validation_Lieferant_UVA_Samk instance = new Validation_Lieferant_UVA_Samk();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Validation_Lieferant_UVA_Samk()
        {
            Jahr = "2020";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Validation_Lieferant_UVA_Samk Instance
        {
            get { return instance; }
        }

#region Variables

        string _Jahr;

        /// <summary>
        /// Gets or sets the value of variable Jahr.
        /// </summary>
        [TestVariable("be0948f7-73cc-4407-af96-ac81dd43090a")]
        public string Jahr
        {
            get { return _Jahr; }
            set { _Jahr = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='3300') on item 'MdiBuch.FrmRG.Hauptframe_2.DfKtoNrSamk'.", repo.MdiBuch.FrmRG.Hauptframe_2.DfKtoNrSamkInfo, new RecordItemIndex(0));
            Validate.AttributeEqual(repo.MdiBuch.FrmRG.Hauptframe_2.DfKtoNrSamkInfo, "Text", "3300");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='LIEFERANT FÜR B_BUCH OHNE BV') on item 'MdiBuch.FrmRG.Hauptframe_2.DfAdrName'.", repo.MdiBuch.FrmRG.Hauptframe_2.DfAdrNameInfo, new RecordItemIndex(1));
            Validate.AttributeEqual(repo.MdiBuch.FrmRG.Hauptframe_2.DfAdrNameInfo, "Text", "LIEFERANT FÜR B_BUCH OHNE BV");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (Text>'Lieferant für B_BUCH ohne BV') on item 'MdiBuch.FrmRG.rechter_Frame_1.MlAdresse_rechter_Frame'.", repo.MdiBuch.FrmRG.rechter_Frame_1.MlAdresse_rechter_FrameInfo, new RecordItemIndex(2));
            Validate.AttributeContains(repo.MdiBuch.FrmRG.rechter_Frame_1.MlAdresse_rechter_FrameInfo, "Text", "Lieferant für B_BUCH ohne BV");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Jahr) on item 'MdiBuch.FrmRG.Hauptframe_2.DfUvajahr'.", repo.MdiBuch.FrmRG.Hauptframe_2.DfUvajahrInfo, new RecordItemIndex(3));
            Validate.AttributeEqual(repo.MdiBuch.FrmRG.Hauptframe_2.DfUvajahrInfo, "Text", Jahr);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='1') on item 'MdiBuch.FrmRG.Hauptframe_2.DfUvamonat'.", repo.MdiBuch.FrmRG.Hauptframe_2.DfUvamonatInfo, new RecordItemIndex(4));
            Validate.AttributeEqual(repo.MdiBuch.FrmRG.Hauptframe_2.DfUvamonatInfo, "Text", "1");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='') on item 'MdiBuch.FrmRG.rechter_Frame_1.MlBank_rechter_Frame'.", repo.MdiBuch.FrmRG.rechter_Frame_1.MlBank_rechter_FrameInfo, new RecordItemIndex(5));
            Validate.AttributeEqual(repo.MdiBuch.FrmRG.rechter_Frame_1.MlBank_rechter_FrameInfo, "Text", "");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='001') on item 'MdiBuch.FrmRG.unterer_Frame_3.DfZlbdCd'.", repo.MdiBuch.FrmRG.unterer_Frame_3.DfZlbdCdInfo, new RecordItemIndex(6));
            Validate.AttributeEqual(repo.MdiBuch.FrmRG.unterer_Frame_3.DfZlbdCdInfo, "Text", "001");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Checked='True') on item 'MdiBuch.FrmRG.unterer_Frame_3.CbSkontoRLG'.", repo.MdiBuch.FrmRG.unterer_Frame_3.CbSkontoRLGInfo, new RecordItemIndex(7));
            Validate.AttributeEqual(repo.MdiBuch.FrmRG.unterer_Frame_3.CbSkontoRLGInfo, "Checked", "True");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (WindowText='15.01.2020') on item 'MdiBuch.FrmRG.unterer_Frame_3.DfSkontoFaell1'.", repo.MdiBuch.FrmRG.unterer_Frame_3.DfSkontoFaell1Info, new RecordItemIndex(8));
            Validate.AttributeEqual(repo.MdiBuch.FrmRG.unterer_Frame_3.DfSkontoFaell1Info, "WindowText", "15.01.2020");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (WindowText='31.01.2020') on item 'MdiBuch.FrmRG.unterer_Frame_3.DfDtfaellig'.", repo.MdiBuch.FrmRG.unterer_Frame_3.DfDtfaelligInfo, new RecordItemIndex(9));
            Validate.AttributeEqual(repo.MdiBuch.FrmRG.unterer_Frame_3.DfDtfaelligInfo, "WindowText", "31.01.2020");
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
