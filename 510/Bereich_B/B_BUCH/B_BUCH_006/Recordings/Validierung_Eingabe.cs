///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace B_BUCH_006.Recordings
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Validierung_Eingabe recording.
    /// </summary>
    [TestModule("45a00210-ef11-410c-8e1d-0a6a50b5d2b2", ModuleType.Recording, 1)]
    public partial class Validierung_Eingabe : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::B_BUCH_006.B_BUCH_006Repository repository.
        /// </summary>
        public static global::B_BUCH_006.B_BUCH_006Repository repo = global::B_BUCH_006.B_BUCH_006Repository.Instance;

        static Validierung_Eingabe instance = new Validierung_Eingabe();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Validierung_Eingabe()
        {
            ER_Nr = "2300011";
            lieferant = "303112";
            betrag = "800";
            aufteilg_Cd = "QS_2";
            Ust_Cd = "V20";
            betrag_Ust = "133,33";
            konto = "5704";
            erbu_betrag = "1000";
            variable = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Validierung_Eingabe Instance
        {
            get { return instance; }
        }

#region Variables

        string _ER_Nr;

        /// <summary>
        /// Gets or sets the value of variable ER_Nr.
        /// </summary>
        [TestVariable("9e79577a-7eed-48eb-9244-014d22587c02")]
        public string ER_Nr
        {
            get { return _ER_Nr; }
            set { _ER_Nr = value; }
        }

        string _lieferant;

        /// <summary>
        /// Gets or sets the value of variable lieferant.
        /// </summary>
        [TestVariable("80252616-a083-4e48-a1d2-e0adf599f733")]
        public string lieferant
        {
            get { return _lieferant; }
            set { _lieferant = value; }
        }

        string _betrag;

        /// <summary>
        /// Gets or sets the value of variable betrag.
        /// </summary>
        [TestVariable("64223d4c-85cb-44ab-be5d-99cd502d6edd")]
        public string betrag
        {
            get { return _betrag; }
            set { _betrag = value; }
        }

        string _aufteilg_Cd;

        /// <summary>
        /// Gets or sets the value of variable aufteilg_Cd.
        /// </summary>
        [TestVariable("53d45dde-1c48-44f7-824e-ed68e7d44e01")]
        public string aufteilg_Cd
        {
            get { return _aufteilg_Cd; }
            set { _aufteilg_Cd = value; }
        }

        string _Ust_Cd;

        /// <summary>
        /// Gets or sets the value of variable Ust_Cd.
        /// </summary>
        [TestVariable("08ed895f-2bd2-4aae-aa67-141e4e0132ec")]
        public string Ust_Cd
        {
            get { return _Ust_Cd; }
            set { _Ust_Cd = value; }
        }

        string _betrag_Ust;

        /// <summary>
        /// Gets or sets the value of variable betrag_Ust.
        /// </summary>
        [TestVariable("e800f2a4-fb16-4e4c-937a-ae608861bde4")]
        public string betrag_Ust
        {
            get { return _betrag_Ust; }
            set { _betrag_Ust = value; }
        }

        string _konto;

        /// <summary>
        /// Gets or sets the value of variable konto.
        /// </summary>
        [TestVariable("44c389e9-241b-4548-a9fe-778d5001d8c3")]
        public string konto
        {
            get { return _konto; }
            set { _konto = value; }
        }

        string _erbu_betrag;

        /// <summary>
        /// Gets or sets the value of variable erbu_betrag.
        /// </summary>
        [TestVariable("4c1c7e6b-875c-4acc-b874-5ab1e0724abb")]
        public string erbu_betrag
        {
            get { return _erbu_betrag; }
            set { _erbu_betrag = value; }
        }

        string _variable;

        /// <summary>
        /// Gets or sets the value of variable variable.
        /// </summary>
        [TestVariable("1d8f8900-7f9b-40d8-a3b1-64e0c20c82bd")]
        public string variable
        {
            get { return _variable; }
            set { _variable = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Wait", "Waiting 2m to exist. Associated repository item: 'MdiBuch.Beleg1'", repo.MdiBuch.Beleg1Info, new ActionTimeout(120000), new RecordItemIndex(0));
            repo.MdiBuch.Beleg1Info.WaitForExists(120000);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$ER_Nr) on item 'MdiBuch.Beleg1'.", repo.MdiBuch.Beleg1Info, new RecordItemIndex(1));
            Validate.AttributeEqual(repo.MdiBuch.Beleg1Info, "Text", ER_Nr);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$lieferant) on item 'MdiBuch.DfAdrNrU'.", repo.MdiBuch.DfAdrNrUInfo, new RecordItemIndex(2));
            Validate.AttributeEqual(repo.MdiBuch.DfAdrNrUInfo, "Text", lieferant);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'Text' from item 'TblErbu.ColErbuBetragRow1' and assigning its value to variable 'variable'.", repo.TblErbu.ColErbuBetragRow1Info, new RecordItemIndex(3));
            variable = repo.TblErbu.ColErbuBetragRow1.Element.GetAttributeValueText("Text");
            
            Ranorex.AutomationHelpers.UserCodeCollections.Aptean.ValidateWithoutDecimals(erbu_betrag, variable);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'Text' from item 'MdiBuch.Betrag' and assigning its value to variable 'variable'.", repo.MdiBuch.BetragInfo, new RecordItemIndex(5));
            variable = repo.MdiBuch.Betrag.Element.GetAttributeValueText("Text");
            
            Ranorex.AutomationHelpers.UserCodeCollections.Aptean.ValidateWithoutDecimals(betrag, variable);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$aufteilg_Cd) on item 'MdiBuch.AufteilgCd'.", repo.MdiBuch.AufteilgCdInfo, new RecordItemIndex(7));
            Validate.AttributeEqual(repo.MdiBuch.AufteilgCdInfo, "Text", aufteilg_Cd);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Ust_Cd) on item 'MdiBuch.Ust_Cd'.", repo.MdiBuch.Ust_CdInfo, new RecordItemIndex(8));
            Validate.AttributeEqual(repo.MdiBuch.Ust_CdInfo, "Text", Ust_Cd);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$betrag_Ust) on item 'MdiBuch.Betrag_ust'.", repo.MdiBuch.Betrag_ustInfo, new RecordItemIndex(9));
            Validate.AttributeEqual(repo.MdiBuch.Betrag_ustInfo, "Text", betrag_Ust);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$konto) on item 'MdiBuch.Konto'.", repo.MdiBuch.KontoInfo, new RecordItemIndex(10));
            Validate.AttributeEqual(repo.MdiBuch.KontoInfo, "Text", konto);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
