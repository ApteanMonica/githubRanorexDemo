///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace B_BUCH_006.Recordings
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Validierung_B_BUAB recording.
    /// </summary>
    [TestModule("cca268e3-2c06-4624-bd19-e26bae24c88b", ModuleType.Recording, 1)]
    public partial class Validierung_B_BUAB : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::B_BUCH_006.B_BUCH_006Repository repository.
        /// </summary>
        public static global::B_BUCH_006.B_BUCH_006Repository repo = global::B_BUCH_006.B_BUCH_006Repository.Instance;

        static Validierung_B_BUAB instance = new Validierung_B_BUAB();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Validierung_B_BUAB()
        {
            ER_Nr = "2300011";
            lieferant = "303112";
            betrag_Ust_Buab = "130,66";
            Ust_Cd = "V20";
            konto = "5704";
            betrag = "1000";
            aufteilg_Cd = "QS_2";
            gKonto = "*";
            variable = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Validierung_B_BUAB Instance
        {
            get { return instance; }
        }

#region Variables

        string _ER_Nr;

        /// <summary>
        /// Gets or sets the value of variable ER_Nr.
        /// </summary>
        [TestVariable("7ec0dde8-57f1-48a9-ae05-7bde611368b9")]
        public string ER_Nr
        {
            get { return _ER_Nr; }
            set { _ER_Nr = value; }
        }

        string _lieferant;

        /// <summary>
        /// Gets or sets the value of variable lieferant.
        /// </summary>
        [TestVariable("19793d85-675c-464d-9a22-dd56e1e4c7ae")]
        public string lieferant
        {
            get { return _lieferant; }
            set { _lieferant = value; }
        }

        string _betrag_Ust_Buab;

        /// <summary>
        /// Gets or sets the value of variable betrag_Ust_Buab.
        /// </summary>
        [TestVariable("f1c552cd-8887-4ed4-810d-5ac73b2f3d4e")]
        public string betrag_Ust_Buab
        {
            get { return _betrag_Ust_Buab; }
            set { _betrag_Ust_Buab = value; }
        }

        string _Ust_Cd;

        /// <summary>
        /// Gets or sets the value of variable Ust_Cd.
        /// </summary>
        [TestVariable("08bbc075-a775-457c-b655-6c34c2c4c512")]
        public string Ust_Cd
        {
            get { return _Ust_Cd; }
            set { _Ust_Cd = value; }
        }

        string _konto;

        /// <summary>
        /// Gets or sets the value of variable konto.
        /// </summary>
        [TestVariable("7e9d62e8-b583-45a1-9942-492904adad98")]
        public string konto
        {
            get { return _konto; }
            set { _konto = value; }
        }

        string _betrag;

        /// <summary>
        /// Gets or sets the value of variable betrag.
        /// </summary>
        [TestVariable("3f12e5db-93a1-4429-a2d7-e181eb8f4d14")]
        public string betrag
        {
            get { return _betrag; }
            set { _betrag = value; }
        }

        string _aufteilg_Cd;

        /// <summary>
        /// Gets or sets the value of variable aufteilg_Cd.
        /// </summary>
        [TestVariable("76d2a040-e5b5-4147-8b4b-4888e6801cbf")]
        public string aufteilg_Cd
        {
            get { return _aufteilg_Cd; }
            set { _aufteilg_Cd = value; }
        }

        string _gKonto;

        /// <summary>
        /// Gets or sets the value of variable gKonto.
        /// </summary>
        [TestVariable("2cc6b4d3-7563-4529-b40c-0ca7ff5d4422")]
        public string gKonto
        {
            get { return _gKonto; }
            set { _gKonto = value; }
        }

        string _variable;

        /// <summary>
        /// Gets or sets the value of variable variable.
        /// </summary>
        [TestVariable("4b489dea-5ebc-4661-ab2b-fc3c5d466208")]
        public string variable
        {
            get { return _variable; }
            set { _variable = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$ER_Nr' with focus on 'TblB.Beleg'.", repo.TblB.BelegInfo, new RecordItemIndex(0));
            repo.TblB.Beleg.PressKeys(ER_Nr);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'TblB.PbDataAccessLoad' at Center.", repo.TblB.PbDataAccessLoadInfo, new RecordItemIndex(1));
            repo.TblB.PbDataAccessLoad.Click();
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 2m to exist. Associated repository item: 'TblB.ColBelegnr'", repo.TblB.ColBelegnrInfo, new ActionTimeout(120000), new RecordItemIndex(2));
            repo.TblB.ColBelegnrInfo.WaitForExists(120000);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$lieferant) on item 'TblB.ColAdrNr'.", repo.TblB.ColAdrNrInfo, new RecordItemIndex(3));
            Validate.AttributeEqual(repo.TblB.ColAdrNrInfo, "Text", lieferant);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$ER_Nr) on item 'TblB.ColBelegnr'.", repo.TblB.ColBelegnrInfo, new RecordItemIndex(4));
            Validate.AttributeEqual(repo.TblB.ColBelegnrInfo, "Text", ER_Nr);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$betrag_Ust_Buab) on item 'TblB1.ColUstbetragRow2'.", repo.TblB1.ColUstbetragRow2Info, new RecordItemIndex(5));
            Validate.AttributeEqual(repo.TblB1.ColUstbetragRow2Info, "Text", betrag_Ust_Buab);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Ust_Cd) on item 'TblB1.ColUstcdRow2'.", repo.TblB1.ColUstcdRow2Info, new RecordItemIndex(6));
            Validate.AttributeEqual(repo.TblB1.ColUstcdRow2Info, "Text", Ust_Cd);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$gKonto) on item 'TblB.ColGKtoNr'.", repo.TblB.ColGKtoNrInfo, new RecordItemIndex(7));
            Validate.AttributeEqual(repo.TblB.ColGKtoNrInfo, "Text", gKonto);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'WindowText' from item 'TblB.ColBetrag' and assigning its value to variable 'variable'.", repo.TblB.ColBetragInfo, new RecordItemIndex(8));
            variable = repo.TblB.ColBetrag.Element.GetAttributeValueText("WindowText");
            
            Ranorex.AutomationHelpers.UserCodeCollections.Aptean.ValidateWithoutDecimals(betrag, variable);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$konto) on item 'TblB1.ColKtoNrRow2'.", repo.TblB1.ColKtoNrRow2Info, new RecordItemIndex(10));
            Validate.AttributeEqual(repo.TblB1.ColKtoNrRow2Info, "Text", konto);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$aufteilg_Cd) on item 'TblB.ColKtbeNrRow2'.", repo.TblB.ColKtbeNrRow2Info, new RecordItemIndex(11));
            Validate.AttributeEqual(repo.TblB.ColKtbeNrRow2Info, "Text", aufteilg_Cd);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
