///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace B_UVA_004.Recordings_Formular
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The USt_Codes_kopieren_A20_nach_NEU_VORJAHR recording.
    /// </summary>
    [TestModule("0b522eeb-e97c-448f-a5a0-21c64e96cf24", ModuleType.Recording, 1)]
    public partial class USt_Codes_kopieren_A20_nach_NEU_VORJAHR : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::B_UVA_004.B_UVA_004Repository repository.
        /// </summary>
        public static global::B_UVA_004.B_UVA_004Repository repo = global::B_UVA_004.B_UVA_004Repository.Instance;

        static USt_Codes_kopieren_A20_nach_NEU_VORJAHR instance = new USt_Codes_kopieren_A20_nach_NEU_VORJAHR();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public USt_Codes_kopieren_A20_nach_NEU_VORJAHR()
        {
            Firma_2 = "200";
            Form_Name_NEU_VORJAHR = "";
            Form_Code_NEU_VORJAHR = "";
            Form_Name_A20 = "";
            Form_Code_A20 = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static USt_Codes_kopieren_A20_nach_NEU_VORJAHR Instance
        {
            get { return instance; }
        }

#region Variables

        string _Firma_2;

        /// <summary>
        /// Gets or sets the value of variable Firma_2.
        /// </summary>
        [TestVariable("b9022531-7589-4e55-8447-246e1cd5d1d3")]
        public string Firma_2
        {
            get { return _Firma_2; }
            set { _Firma_2 = value; }
        }

        string _Form_Code_NEU_VORJAHR;

        /// <summary>
        /// Gets or sets the value of variable Form_Code_NEU_VORJAHR.
        /// </summary>
        [TestVariable("5dc4c520-b303-4919-ad7a-6d26e181663d")]
        public string Form_Code_NEU_VORJAHR
        {
            get { return _Form_Code_NEU_VORJAHR; }
            set { _Form_Code_NEU_VORJAHR = value; }
        }

        string _Form_Name_A20;

        /// <summary>
        /// Gets or sets the value of variable Form_Name_A20.
        /// </summary>
        [TestVariable("36996c1e-725c-4912-9a0b-4c0e6d4a7e5f")]
        public string Form_Name_A20
        {
            get { return _Form_Name_A20; }
            set { _Form_Name_A20 = value; }
        }

        string _Form_Code_A20;

        /// <summary>
        /// Gets or sets the value of variable Form_Code_A20.
        /// </summary>
        [TestVariable("9be3f5b7-4162-4e17-a869-e97c74e4d776")]
        public string Form_Code_A20
        {
            get { return _Form_Code_A20; }
            set { _Form_Code_A20 = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable Form_Name_NEU_VORJAHR.
        /// </summary>
        [TestVariable("9508b03c-8d84-4153-9dff-9cec08daacdf")]
        public string Form_Name_NEU_VORJAHR
        {
            get { return repo.Form_Name_NEU_VORJAHR; }
            set { repo.Form_Name_NEU_VORJAHR = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'TblUVAF.TitleBar200VerwaltenUVAFormulare'.", repo.TblUVAF.TitleBar200VerwaltenUVAFormulareInfo, new RecordItemIndex(0));
            Validate.Exists(repo.TblUVAF.TitleBar200VerwaltenUVAFormulareInfo);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'TblUVAF.PbCommonKopieren' at Center.", repo.TblUVAF.PbCommonKopierenInfo, new RecordItemIndex(1));
            repo.TblUVAF.PbCommonKopieren.Click();
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 2m to exist. Associated repository item: 'FrmUVAK.FormularKopieren'", repo.FrmUVAK.FormularKopierenInfo, new ActionTimeout(120000), new RecordItemIndex(2));
            repo.FrmUVAK.FormularKopierenInfo.WaitForExists(120000);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'FrmUVAK.FormularKopieren'.", repo.FrmUVAK.FormularKopierenInfo, new RecordItemIndex(3));
            Validate.Exists(repo.FrmUVAK.FormularKopierenInfo);
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute ControlText to '$Form_Name_A20' on item 'FrmUVAK.CmbUvak1'.", repo.FrmUVAK.CmbUvak1Info, new RecordItemIndex(4));
            repo.FrmUVAK.CmbUvak1.Element.SetAttributeValue("ControlText", Form_Name_A20);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Tab' Press with focus on 'FrmUVAK.CmbUvak1'.", repo.FrmUVAK.CmbUvak1Info, new RecordItemIndex(5));
            Keyboard.PrepareFocus(repo.FrmUVAK.CmbUvak1);
            Keyboard.Press(System.Windows.Forms.Keys.Tab, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute ControlText to '$Form_Name_NEU_VORJAHR' on item 'FrmUVAK.CmbUvak2'.", repo.FrmUVAK.CmbUvak2Info, new RecordItemIndex(6));
            repo.FrmUVAK.CmbUvak2.Element.SetAttributeValue("ControlText", Form_Name_NEU_VORJAHR);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Tab' Press with focus on 'FrmUVAK.CmbUvak2'.", repo.FrmUVAK.CmbUvak2Info, new RecordItemIndex(7));
            Keyboard.PrepareFocus(repo.FrmUVAK.CmbUvak2);
            Keyboard.Press(System.Windows.Forms.Keys.Tab, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Firma_2) on item 'FrmUVAK.Text'.", repo.FrmUVAK.TextInfo, new RecordItemIndex(8));
            Validate.AttributeEqual(repo.FrmUVAK.TextInfo, "Text", Firma_2);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Checked='True') on item 'FrmUVAK.CbNurZuordnung'.", repo.FrmUVAK.CbNurZuordnungInfo, new RecordItemIndex(9));
            Validate.AttributeEqual(repo.FrmUVAK.CbNurZuordnungInfo, "Checked", "True");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (ControlText=$Form_Name_A20) on item 'FrmUVAK.CmbUvak1'.", repo.FrmUVAK.CmbUvak1Info, new RecordItemIndex(10));
            Validate.AttributeEqual(repo.FrmUVAK.CmbUvak1Info, "ControlText", Form_Name_A20);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (ControlText=$Form_Name_NEU_VORJAHR) on item 'FrmUVAK.CmbUvak2'.", repo.FrmUVAK.CmbUvak2Info, new RecordItemIndex(11));
            Validate.AttributeEqual(repo.FrmUVAK.CmbUvak2Info, "ControlText", Form_Name_NEU_VORJAHR);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Form_Code_A20) on item 'FrmUVAK.DfCode1'.", repo.FrmUVAK.DfCode1Info, new RecordItemIndex(12));
            Validate.AttributeEqual(repo.FrmUVAK.DfCode1Info, "Text", Form_Code_A20);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmUVAK.PbUVAKKopieren' at Center.", repo.FrmUVAK.PbUVAKKopierenInfo, new RecordItemIndex(13));
            repo.FrmUVAK.PbUVAKKopieren.Click();
            
            // nur für Test nötig, wenn Zuordnungen bereits vorhanden
            //Report.Log(ReportLevel.Info, "Validation", "nur für Test nötig, wenn Zuordnungen bereits vorhanden\r\nValidating AttributeEqual (Text='\r\nZuordnungen sind bei Firma 200 in Formular A21 bereits vorhanden!\r\n\r\nDie bestehende Daten werden überschrieben!\r\n\r\nTrotzdem kopieren?') on item 'DlgMessageBox.LabelMeldungstext'.", repo.DlgMessageBox.LabelMeldungstextInfo, new RecordItemIndex(14));
            //Validate.AttributeEqual(repo.DlgMessageBox.LabelMeldungstextInfo, "Text", "\r\nZuordnungen sind bei Firma 200 in Formular A21 bereits vorhanden!\r\n\r\nDie bestehende Daten werden überschrieben!\r\n\r\nTrotzdem kopieren?");
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'DlgMessageBox.Button0' at Center.", repo.DlgMessageBox.Button0Info, new RecordItemIndex(15));
            //repo.DlgMessageBox.Button0.Click();
            
            // Wenn Zurodnungen bereits vorhanden sind durch Test b_uva_003
            Report.Log(ReportLevel.Info, "Keyboard", "Wenn Zurodnungen bereits vorhanden sind durch Test b_uva_003\r\nKey sequence 'J'.", new RecordItemIndex(16));
            Keyboard.Press("J");
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 2m to exist. Associated repository item: 'DlgMessageBox.LabelMeldungstext'", repo.DlgMessageBox.LabelMeldungstextInfo, new ActionTimeout(120000), new RecordItemIndex(17));
            repo.DlgMessageBox.LabelMeldungstextInfo.WaitForExists(120000);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='Kopiervorgang beendet') on item 'DlgMessageBox.LabelMeldungstext'.", repo.DlgMessageBox.LabelMeldungstextInfo, new RecordItemIndex(18));
            Validate.AttributeEqual(repo.DlgMessageBox.LabelMeldungstextInfo, "Text", "Kopiervorgang beendet");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'DlgMessageBox.Button0' at Center.", repo.DlgMessageBox.Button0Info, new RecordItemIndex(19));
            repo.DlgMessageBox.Button0.Click();
            
            // Validierung am Ende wegen tw Zeitverzögerung beim Laden
            Report.Log(ReportLevel.Info, "Validation", "Validierung am Ende wegen tw Zeitverzögerung beim Laden\r\nValidating AttributeEqual (Text=$Form_Code_NEU_VORJAHR) on item 'FrmUVAK.DfCode2'.", repo.FrmUVAK.DfCode2Info, new RecordItemIndex(20));
            Validate.AttributeEqual(repo.FrmUVAK.DfCode2Info, "Text", Form_Code_NEU_VORJAHR);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
