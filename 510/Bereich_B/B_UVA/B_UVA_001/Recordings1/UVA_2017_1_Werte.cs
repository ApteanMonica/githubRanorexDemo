///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace B_UVA_001.Recordings1
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The UVA_2017_1_Werte recording.
    /// </summary>
    [TestModule("8ac95408-6ae7-46e0-91cd-b9b8c536ce45", ModuleType.Recording, 1)]
    public partial class UVA_2017_1_Werte : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::B_UVA_001.B_UVA_001Repository repository.
        /// </summary>
        public static global::B_UVA_001.B_UVA_001Repository repo = global::B_UVA_001.B_UVA_001Repository.Instance;

        static UVA_2017_1_Werte instance = new UVA_2017_1_Werte();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public UVA_2017_1_Werte()
        {
            UVA_Jahr_2017 = "2017";
            UVA_Monat_1 = "1";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static UVA_2017_1_Werte Instance
        {
            get { return instance; }
        }

#region Variables

        string _UVA_Jahr_2017;

        /// <summary>
        /// Gets or sets the value of variable UVA_Jahr_2017.
        /// </summary>
        [TestVariable("69925bb4-698e-4d92-95f0-289d73fe9c4e")]
        public string UVA_Jahr_2017
        {
            get { return _UVA_Jahr_2017; }
            set { _UVA_Jahr_2017 = value; }
        }

        string _UVA_Monat_1;

        /// <summary>
        /// Gets or sets the value of variable UVA_Monat_1.
        /// </summary>
        [TestVariable("2ce8db1c-4ab2-4992-81b7-ba467be1c21d")]
        public string UVA_Monat_1
        {
            get { return _UVA_Monat_1; }
            set { _UVA_Monat_1 = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'FrmUVAW.TitleBar100UVAWerte'.", repo.FrmUVAW.TitleBar100UVAWerteInfo, new RecordItemIndex(0));
            Validate.Exists(repo.FrmUVAW.TitleBar100UVAWerteInfo);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$UVA_Jahr_2017' with focus on 'FrmUVAW._UVA_Jahr_'.", repo.FrmUVAW._UVA_Jahr_Info, new RecordItemIndex(1));
            repo.FrmUVAW._UVA_Jahr_.PressKeys(UVA_Jahr_2017);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$UVA_Monat_1' with focus on 'FrmUVAW._UVA_Monat_'.", repo.FrmUVAW._UVA_Monat_Info, new RecordItemIndex(2));
            repo.FrmUVAW._UVA_Monat_.PressKeys(UVA_Monat_1);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Tab' Press with focus on 'FrmUVAW._UVA_Monat_'.", repo.FrmUVAW._UVA_Monat_Info, new RecordItemIndex(3));
            Keyboard.PrepareFocus(repo.FrmUVAW._UVA_Monat_);
            Keyboard.Press(System.Windows.Forms.Keys.Tab, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Tab down}' with focus on 'FrmUVAW._UVA_Monat_'.", repo.FrmUVAW._UVA_Monat_Info, new RecordItemIndex(4));
            repo.FrmUVAW._UVA_Monat_.PressKeys("{Tab down}");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$UVA_Jahr_2017) on item 'FrmUVAW._UVA_Jahr_'.", repo.FrmUVAW._UVA_Jahr_Info, new RecordItemIndex(5));
            Validate.AttributeEqual(repo.FrmUVAW._UVA_Jahr_Info, "Text", UVA_Jahr_2017);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$UVA_Monat_1) on item 'FrmUVAW._UVA_Monat_'.", repo.FrmUVAW._UVA_Monat_Info, new RecordItemIndex(6));
            Validate.AttributeEqual(repo.FrmUVAW._UVA_Monat_Info, "Text", UVA_Monat_1);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 3s.", new RecordItemIndex(7));
            Delay.Duration(3000, false);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmUVAW.PbCommonRechnen' at Center.", repo.FrmUVAW.PbCommonRechnenInfo, new RecordItemIndex(8));
            repo.FrmUVAW.PbCommonRechnen.Click();
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (Text>'UVA-Werte berechnen?') on item 'DlgMessageBox.LabelMeldungstext'.", repo.DlgMessageBox.LabelMeldungstextInfo, new RecordItemIndex(9));
            Validate.AttributeContains(repo.DlgMessageBox.LabelMeldungstextInfo, "Text", "UVA-Werte berechnen?");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'DlgMessageBox.Button0' at Center.", repo.DlgMessageBox.Button0Info, new RecordItemIndex(10));
            repo.DlgMessageBox.Button0.Click();
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (Text>'Für dieses Jahr/Periode wurde bereits eine\r\nErmittlung der UVA-Werte durchgeführt!\r\n\r\nSollen diese Werte gelöscht und neu ermittelt werden?') on item 'DlgMessageBox.LabelMeldungstext'.", repo.DlgMessageBox.LabelMeldungstextInfo, new RecordItemIndex(11));
            Validate.AttributeContains(repo.DlgMessageBox.LabelMeldungstextInfo, "Text", "Für dieses Jahr/Periode wurde bereits eine\r\nErmittlung der UVA-Werte durchgeführt!\r\n\r\nSollen diese Werte gelöscht und neu ermittelt werden?");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'DlgMessageBox.Button0' at Center.", repo.DlgMessageBox.Button0Info, new RecordItemIndex(12));
            repo.DlgMessageBox.Button0.Click();
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$UVA_Jahr_2017) on item 'FrmUVAW._UVA_Jahr_'.", repo.FrmUVAW._UVA_Jahr_Info, new RecordItemIndex(13));
            Validate.AttributeEqual(repo.FrmUVAW._UVA_Jahr_Info, "Text", UVA_Jahr_2017);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$UVA_Monat_1) on item 'FrmUVAW._UVA_Monat_'.", repo.FrmUVAW._UVA_Monat_Info, new RecordItemIndex(14));
            Validate.AttributeEqual(repo.FrmUVAW._UVA_Monat_Info, "Text", UVA_Monat_1);
            
            // 1. Zeile als Stichprobe überprüfen
            Report.Log(ReportLevel.Info, "Validation", "1. Zeile als Stichprobe überprüfen\r\nValidating AttributeEqual (Text='\t\t200\t*\tE00\tEWSt 0 % KZ071/KZ065 (KZ070)\tE\t1.000,00\t0,00\t0,00\t2017\t1\t0,00\t100,00\t0\t\tE00\t') on item 'FrmUVAW.FlexGrid_UVA_Werte_Row1'.", repo.FrmUVAW.FlexGrid_UVA_Werte_Row1Info, new RecordItemIndex(15));
            Validate.AttributeEqual(repo.FrmUVAW.FlexGrid_UVA_Werte_Row1Info, "Text", "\t\t200\t*\tE00\tEWSt 0 % KZ071/KZ065 (KZ070)\tE\t1.000,00\t0,00\t0,00\t2017\t1\t0,00\t100,00\t0\t\tE00\t");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='-2.090,91') on item 'FrmUVAW.ColUvawBasisRow0'.", repo.FrmUVAW.ColUvawBasisRow0Info, new RecordItemIndex(16));
            Validate.AttributeEqual(repo.FrmUVAW.ColUvawBasisRow0Info, "Text", "-2.090,91");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='-150,91') on item 'FrmUVAW.ColUvawSteuerRow0'.", repo.FrmUVAW.ColUvawSteuerRow0Info, new RecordItemIndex(17));
            Validate.AttributeEqual(repo.FrmUVAW.ColUvawSteuerRow0Info, "Text", "-150,91");
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
