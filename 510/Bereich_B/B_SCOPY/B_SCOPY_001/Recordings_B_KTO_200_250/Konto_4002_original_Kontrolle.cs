///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace B_SCOPY_001.Recordings_B_KTO_200_250
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Konto_4002_original_Kontrolle recording.
    /// </summary>
    [TestModule("0d6aabf5-870f-40c5-8b6e-7bfaa02286f5", ModuleType.Recording, 1)]
    public partial class Konto_4002_original_Kontrolle : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::B_SCOPY_001.B_SCOPY_001Repository repository.
        /// </summary>
        public static global::B_SCOPY_001.B_SCOPY_001Repository repo = global::B_SCOPY_001.B_SCOPY_001Repository.Instance;

        static Konto_4002_original_Kontrolle instance = new Konto_4002_original_Kontrolle();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Konto_4002_original_Kontrolle()
        {
            Quell_Firma = "200";
            Firmenherkunft_Sachkonto = "";
            Ziel_Firma = "250";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Konto_4002_original_Kontrolle Instance
        {
            get { return instance; }
        }

#region Variables

        string _Quell_Firma;

        /// <summary>
        /// Gets or sets the value of variable Quell_Firma.
        /// </summary>
        [TestVariable("44338e82-7410-409c-99e0-f8a5cd1d41d4")]
        public string Quell_Firma
        {
            get { return _Quell_Firma; }
            set { _Quell_Firma = value; }
        }

        string _Firmenherkunft_Sachkonto;

        /// <summary>
        /// Gets or sets the value of variable Firmenherkunft_Sachkonto.
        /// </summary>
        [TestVariable("50398ca3-da29-4958-a7d7-72a7e5b56880")]
        public string Firmenherkunft_Sachkonto
        {
            get { return _Firmenherkunft_Sachkonto; }
            set { _Firmenherkunft_Sachkonto = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable Ziel_Firma.
        /// </summary>
        [TestVariable("d5bb13bc-576d-4859-bd88-4c4f67d0657d")]
        public string Ziel_Firma
        {
            get { return repo.Ziel_Firma; }
            set { repo.Ziel_Firma = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            try {
                //Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeEqual (Text=$Quell_Firma) on item 'FrmKto.Firmenherkunft'.", repo.FrmKto.FirmenherkunftInfo, new RecordItemIndex(0));
                //Validate.AttributeEqual(repo.FrmKto.FirmenherkunftInfo, "Text", Quell_Firma, null, false);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(0)); }
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'Text' from item 'FrmKto.Firmenherkunft' and assigning its value to variable 'Firmenherkunft_Sachkonto'.", repo.FrmKto.FirmenherkunftInfo, new RecordItemIndex(1));
            Firmenherkunft_Sachkonto = repo.FrmKto.Firmenherkunft.Element.GetAttributeValueText("Text");
            
            Ranorex.AutomationHelpers.UserCodeCollections.Aptean.ValidateVar1Var2(Firmenherkunft_Sachkonto, Quell_Firma, Ziel_Firma);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='4002') on item 'FrmKto.Konto'.", repo.FrmKto.KontoInfo, new RecordItemIndex(3));
            Validate.AttributeEqual(repo.FrmKto.KontoInfo, "Text", "4002");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='Umsatzerlöse Ausland') on item 'FrmKto.Bezeichnung'.", repo.FrmKto.BezeichnungInfo, new RecordItemIndex(4));
            Validate.AttributeEqual(repo.FrmKto.BezeichnungInfo, "Text", "Umsatzerlöse Ausland");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='aktiv') on item 'FrmKto.Text1001_Status'.", repo.FrmKto.Text1001_StatusInfo, new RecordItemIndex(5));
            Validate.AttributeEqual(repo.FrmKto.Text1001_StatusInfo, "Text", "aktiv");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Checked='True') on item 'FrmKto.RbErtrag'.", repo.FrmKto.RbErtragInfo, new RecordItemIndex(6));
            Validate.AttributeEqual(repo.FrmKto.RbErtragInfo, "Checked", "True");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='M') on item 'FrmKto.Register_Allgemein.UstPflicht'.", repo.FrmKto.Register_Allgemein.UstPflichtInfo, new RecordItemIndex(7));
            Validate.AttributeEqual(repo.FrmKto.Register_Allgemein.UstPflichtInfo, "Text", "M");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='4') on item 'FrmKto.Register_Allgemein.Skontogruppe'.", repo.FrmKto.Register_Allgemein.SkontogruppeInfo, new RecordItemIndex(8));
            Validate.AttributeEqual(repo.FrmKto.Register_Allgemein.SkontogruppeInfo, "Text", "4");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='Kundenskonto (Klasse 4)') on item 'FrmKto.Register_Allgemein.DfSkgrBez'.", repo.FrmKto.Register_Allgemein.DfSkgrBezInfo, new RecordItemIndex(9));
            Validate.AttributeEqual(repo.FrmKto.Register_Allgemein.DfSkgrBezInfo, "Text", "Kundenskonto (Klasse 4)");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Checked='True') on item 'FrmKto.Register_Allgemein.CbKtoSkonto'.", repo.FrmKto.Register_Allgemein.CbKtoSkontoInfo, new RecordItemIndex(10));
            Validate.AttributeEqual(repo.FrmKto.Register_Allgemein.CbKtoSkontoInfo, "Checked", "True");
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
