///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace B_SCOPY_001.Recordings_B_KTO_200_250
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Konto_4002_aendern_status_Art_MW_Skt recording.
    /// </summary>
    [TestModule("4e0d1f6f-3126-4e06-a360-88e2ddce19f6", ModuleType.Recording, 1)]
    public partial class Konto_4002_aendern_status_Art_MW_Skt : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::B_SCOPY_001.B_SCOPY_001Repository repository.
        /// </summary>
        public static global::B_SCOPY_001.B_SCOPY_001Repository repo = global::B_SCOPY_001.B_SCOPY_001Repository.Instance;

        static Konto_4002_aendern_status_Art_MW_Skt instance = new Konto_4002_aendern_status_Art_MW_Skt();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Konto_4002_aendern_status_Art_MW_Skt()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Konto_4002_aendern_status_Art_MW_Skt Instance
        {
            get { return instance; }
        }

#region Variables

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='4002') on item 'FrmKto.Konto'.", repo.FrmKto.KontoInfo, new RecordItemIndex(0));
            Validate.AttributeEqual(repo.FrmKto.KontoInfo, "Text", "4002");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmKto.RibbonBar.PbCommonStatus' at Center.", repo.FrmKto.RibbonBar.PbCommonStatusInfo, new RecordItemIndex(1));
            repo.FrmKto.RibbonBar.PbCommonStatus.Click();
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmKto.RibbonBar.PbCommonStrukturSync' at Center.", repo.FrmKto.RibbonBar.PbCommonStrukturSyncInfo, new RecordItemIndex(2));
            repo.FrmKto.RibbonBar.PbCommonStrukturSync.Click();
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmKto.OEffnen' at Center.", repo.FrmKto.OEffnenInfo, new RecordItemIndex(3));
            repo.FrmKto.OEffnen.Click();
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'List1000.Inaktiv' at Center.", repo.List1000.InaktivInfo, new RecordItemIndex(4));
            repo.List1000.Inaktiv.Click();
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='inaktiv') on item 'FrmKto.Text1001_Status'.", repo.FrmKto.Text1001_StatusInfo, new RecordItemIndex(5));
            Validate.AttributeEqual(repo.FrmKto.Text1001_StatusInfo, "Text", "inaktiv");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmKto.RibbonBar.PbDataAccessSave' at 19;38.", repo.FrmKto.RibbonBar.PbDataAccessSaveInfo, new RecordItemIndex(6));
            repo.FrmKto.RibbonBar.PbDataAccessSave.Click("19;38");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='inaktiv') on item 'FrmKto.Text1001_Status'.", repo.FrmKto.Text1001_StatusInfo, new RecordItemIndex(7));
            Validate.AttributeEqual(repo.FrmKto.Text1001_StatusInfo, "Text", "inaktiv");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmKto.RbAufwand' at Center.", repo.FrmKto.RbAufwandInfo, new RecordItemIndex(8));
            repo.FrmKto.RbAufwand.Click();
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 1m to exist. Associated repository item: 'DlgMessageBox.StammdatenKopieren'", repo.DlgMessageBox.StammdatenKopierenInfo, new ActionTimeout(60000), new RecordItemIndex(9));
            repo.DlgMessageBox.StammdatenKopierenInfo.WaitForExists(60000);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='Kontoart wirklich ändern?\r\n') on item 'DlgMessageBox.LabelMeldungstext'.", repo.DlgMessageBox.LabelMeldungstextInfo, new RecordItemIndex(10));
            Validate.AttributeEqual(repo.DlgMessageBox.LabelMeldungstextInfo, "Text", "Kontoart wirklich ändern?\r\n");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'DlgMessageBox.Button0' at Center.", repo.DlgMessageBox.Button0Info, new RecordItemIndex(11));
            repo.DlgMessageBox.Button0.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'V' with focus on 'FrmKto.Register_Allgemein.UstPflicht'.", repo.FrmKto.Register_Allgemein.UstPflichtInfo, new RecordItemIndex(12));
            repo.FrmKto.Register_Allgemein.UstPflicht.PressKeys("V");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Tab' Press.", new RecordItemIndex(13));
            Keyboard.Press(System.Windows.Forms.Keys.Tab, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '5' with focus on 'FrmKto.Register_Allgemein.Skontogruppe'.", repo.FrmKto.Register_Allgemein.SkontogruppeInfo, new RecordItemIndex(14));
            repo.FrmKto.Register_Allgemein.Skontogruppe.PressKeys("5");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Tab' Press.", new RecordItemIndex(15));
            Keyboard.Press(System.Windows.Forms.Keys.Tab, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='inaktiv') on item 'FrmKto.Text1001_Status'.", repo.FrmKto.Text1001_StatusInfo, new RecordItemIndex(16));
            Validate.AttributeEqual(repo.FrmKto.Text1001_StatusInfo, "Text", "inaktiv");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Checked='True') on item 'FrmKto.RbAufwand'.", repo.FrmKto.RbAufwandInfo, new RecordItemIndex(17));
            Validate.AttributeEqual(repo.FrmKto.RbAufwandInfo, "Checked", "True");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='V') on item 'FrmKto.Register_Allgemein.UstPflicht'.", repo.FrmKto.Register_Allgemein.UstPflichtInfo, new RecordItemIndex(18));
            Validate.AttributeEqual(repo.FrmKto.Register_Allgemein.UstPflichtInfo, "Text", "V");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='5') on item 'FrmKto.Register_Allgemein.Skontogruppe'.", repo.FrmKto.Register_Allgemein.SkontogruppeInfo, new RecordItemIndex(19));
            Validate.AttributeEqual(repo.FrmKto.Register_Allgemein.SkontogruppeInfo, "Text", "5");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmKto.RibbonBar.PbDataAccessSave' at Center.", repo.FrmKto.RibbonBar.PbDataAccessSaveInfo, new RecordItemIndex(20));
            repo.FrmKto.RibbonBar.PbDataAccessSave.Click();
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
