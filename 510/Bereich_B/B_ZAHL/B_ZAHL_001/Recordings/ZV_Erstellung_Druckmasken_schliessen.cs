///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace B_ZAHL_001.Recordings
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The ZV_Erstellung_Druckmasken_schliessen recording.
    /// </summary>
    [TestModule("dc3a3acf-c0d0-4a3c-98cb-50cf6b7f0a94", ModuleType.Recording, 1)]
    public partial class ZV_Erstellung_Druckmasken_schliessen : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::B_ZAHL_001.B_ZAHL_001Repository repository.
        /// </summary>
        public static global::B_ZAHL_001.B_ZAHL_001Repository repo = global::B_ZAHL_001.B_ZAHL_001Repository.Instance;

        static ZV_Erstellung_Druckmasken_schliessen instance = new ZV_Erstellung_Druckmasken_schliessen();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public ZV_Erstellung_Druckmasken_schliessen()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static ZV_Erstellung_Druckmasken_schliessen Instance
        {
            get { return instance; }
        }

#region Variables

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Alt+F4' Press with focus on 'DlgDrucken.TitleBar100DruckeZahlungsvorschlag'.", repo.DlgDrucken.TitleBar100DruckeZahlungsvorschlagInfo, new RecordItemIndex(0));
            Keyboard.PrepareFocus(repo.DlgDrucken.TitleBar100DruckeZahlungsvorschlag);
            Keyboard.Press(System.Windows.Forms.Keys.F4 | System.Windows.Forms.Keys.Alt, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 2m to exist. Associated repository item: 'FrmZlvsDrucken.DruckeZahlungsvorschlag'", repo.FrmZlvsDrucken.DruckeZahlungsvorschlagInfo, new ActionTimeout(120000), new RecordItemIndex(1));
            repo.FrmZlvsDrucken.DruckeZahlungsvorschlagInfo.WaitForExists(120000);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Alt+F4' Press with focus on 'FrmZlvsDrucken.DruckeZahlungsvorschlag'.", repo.FrmZlvsDrucken.DruckeZahlungsvorschlagInfo, new RecordItemIndex(2));
            Keyboard.PrepareFocus(repo.FrmZlvsDrucken.DruckeZahlungsvorschlag);
            Keyboard.Press(System.Windows.Forms.Keys.F4 | System.Windows.Forms.Keys.Alt, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 2m to exist. Associated repository item: 'FrmZlvsErstellen.TitleBar100VorschlagErstellen'", repo.FrmZlvsErstellen.TitleBar100VorschlagErstellenInfo, new ActionTimeout(120000), new RecordItemIndex(3));
            repo.FrmZlvsErstellen.TitleBar100VorschlagErstellenInfo.WaitForExists(120000);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Alt+F4' Press with focus on 'FrmZlvsErstellen.TitleBar100VorschlagErstellen'.", repo.FrmZlvsErstellen.TitleBar100VorschlagErstellenInfo, new RecordItemIndex(4));
            Keyboard.PrepareFocus(repo.FrmZlvsErstellen.TitleBar100VorschlagErstellen);
            Keyboard.Press(System.Windows.Forms.Keys.F4 | System.Windows.Forms.Keys.Alt, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 2m to exist. Associated repository item: 'FrmZahlMain.TitleBar100LieferantenZahlungsver'", repo.FrmZahlMain.TitleBar100LieferantenZahlungsverInfo, new ActionTimeout(120000), new RecordItemIndex(5));
            repo.FrmZahlMain.TitleBar100LieferantenZahlungsverInfo.WaitForExists(120000);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (Text>'Lieferanten - Zahlungsverkehr') on item 'FrmZahlMain.TitleBar100LieferantenZahlungsver'.", repo.FrmZahlMain.TitleBar100LieferantenZahlungsverInfo, new RecordItemIndex(6));
            Validate.AttributeContains(repo.FrmZahlMain.TitleBar100LieferantenZahlungsverInfo, "Text", "Lieferanten - Zahlungsverkehr");
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
