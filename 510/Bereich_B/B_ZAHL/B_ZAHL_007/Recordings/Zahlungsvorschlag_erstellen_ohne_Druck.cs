///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace B_ZAHL_007.Recordings
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Zahlungsvorschlag_erstellen_ohne_Druck recording.
    /// </summary>
    [TestModule("eaffa26f-3a87-403f-8760-a23e69257d9b", ModuleType.Recording, 1)]
    public partial class Zahlungsvorschlag_erstellen_ohne_Druck : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::B_ZAHL_007.B_ZAHL_007Repository repository.
        /// </summary>
        public static global::B_ZAHL_007.B_ZAHL_007Repository repo = global::B_ZAHL_007.B_ZAHL_007Repository.Instance;

        static Zahlungsvorschlag_erstellen_ohne_Druck instance = new Zahlungsvorschlag_erstellen_ohne_Druck();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Zahlungsvorschlag_erstellen_ohne_Druck()
        {
            Datum_von = "01.01.2022";
            LF_303070 = "303070";
            LF_303077 = "303077";
            Datum_bis = "01.02.2022";
            Tagesdatum = "";
            ZV_TEXT = "B_ZAHL_007";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Zahlungsvorschlag_erstellen_ohne_Druck Instance
        {
            get { return instance; }
        }

#region Variables

        string _Datum_von;

        /// <summary>
        /// Gets or sets the value of variable Datum_von.
        /// </summary>
        [TestVariable("e6da24c0-773d-4b7b-a68d-5a47f1e2780b")]
        public string Datum_von
        {
            get { return _Datum_von; }
            set { _Datum_von = value; }
        }

        string _LF_303070;

        /// <summary>
        /// Gets or sets the value of variable LF_303070.
        /// </summary>
        [TestVariable("09e8b8b2-0864-4d6b-afb2-aed3f1204e24")]
        public string LF_303070
        {
            get { return _LF_303070; }
            set { _LF_303070 = value; }
        }

        string _LF_303077;

        /// <summary>
        /// Gets or sets the value of variable LF_303077.
        /// </summary>
        [TestVariable("07cfad81-e708-408c-8b5d-97d68819ace8")]
        public string LF_303077
        {
            get { return _LF_303077; }
            set { _LF_303077 = value; }
        }

        string _Datum_bis;

        /// <summary>
        /// Gets or sets the value of variable Datum_bis.
        /// </summary>
        [TestVariable("7b7ad1a2-7182-4f9b-b862-e41afffad607")]
        public string Datum_bis
        {
            get { return _Datum_bis; }
            set { _Datum_bis = value; }
        }

        string _Tagesdatum;

        /// <summary>
        /// Gets or sets the value of variable Tagesdatum.
        /// </summary>
        [TestVariable("0998b5d6-c161-4443-8b65-48f2cb7ba0d3")]
        public string Tagesdatum
        {
            get { return _Tagesdatum; }
            set { _Tagesdatum = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable ZV_TEXT.
        /// </summary>
        [TestVariable("39db8dcf-8edb-451c-84e4-ef709f3e2c21")]
        public string ZV_TEXT
        {
            get { return repo.ZV_TEXT; }
            set { repo.ZV_TEXT = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (Text>'Lieferanten - Zahlungsverkehr') on item 'FrmZahlMain.TitleBar100LieferantenZahlungsver'.", repo.FrmZahlMain.TitleBar100LieferantenZahlungsverInfo, new RecordItemIndex(0));
            Validate.AttributeContains(repo.FrmZahlMain.TitleBar100LieferantenZahlungsverInfo, "Text", "Lieferanten - Zahlungsverkehr");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmZahlMain.PbCommonNeuerVorschlag' at Center.", repo.FrmZahlMain.PbCommonNeuerVorschlagInfo, new RecordItemIndex(1));
            repo.FrmZahlMain.PbCommonNeuerVorschlag.Click();
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 2m to exist. Associated repository item: 'FrmZlvsErstellen.TitleBar100VorschlagErstellen'", repo.FrmZlvsErstellen.TitleBar100VorschlagErstellenInfo, new ActionTimeout(120000), new RecordItemIndex(2));
            repo.FrmZlvsErstellen.TitleBar100VorschlagErstellenInfo.WaitForExists(120000);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (Text>'Vorschlag erstellen') on item 'FrmZlvsErstellen.TitleBar100VorschlagErstellen'.", repo.FrmZlvsErstellen.TitleBar100VorschlagErstellenInfo, new RecordItemIndex(3));
            Validate.AttributeContains(repo.FrmZlvsErstellen.TitleBar100VorschlagErstellenInfo, "Text", "Vorschlag erstellen");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Datum_bis' with focus on 'FrmZlvsErstellen.TpFaelligkeit.NettofaelligkeitBis'.", repo.FrmZlvsErstellen.TpFaelligkeit.NettofaelligkeitBisInfo, new RecordItemIndex(4));
            repo.FrmZlvsErstellen.TpFaelligkeit.NettofaelligkeitBis.PressKeys(Datum_bis);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Datum_von' with focus on 'FrmZlvsErstellen.TpFaelligkeit.SkontofaelligkeitVon'.", repo.FrmZlvsErstellen.TpFaelligkeit.SkontofaelligkeitVonInfo, new RecordItemIndex(5));
            repo.FrmZlvsErstellen.TpFaelligkeit.SkontofaelligkeitVon.PressKeys(Datum_von);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Datum_bis' with focus on 'FrmZlvsErstellen.TpFaelligkeit.SkontofaelligkeitBis'.", repo.FrmZlvsErstellen.TpFaelligkeit.SkontofaelligkeitBisInfo, new RecordItemIndex(6));
            repo.FrmZlvsErstellen.TpFaelligkeit.SkontofaelligkeitBis.PressKeys(Datum_bis);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Tagesdatum' with focus on 'FrmZlvsErstellen.TpFaelligkeit.VorschlagErstellenMitZahldatum'.", repo.FrmZlvsErstellen.TpFaelligkeit.VorschlagErstellenMitZahldatumInfo, new RecordItemIndex(7));
            repo.FrmZlvsErstellen.TpFaelligkeit.VorschlagErstellenMitZahldatum.PressKeys(Tagesdatum);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$ZV_TEXT' with focus on 'FrmZlvsErstellen.TpFaelligkeit.Beschreibung'.", repo.FrmZlvsErstellen.TpFaelligkeit.BeschreibungInfo, new RecordItemIndex(8));
            repo.FrmZlvsErstellen.TpFaelligkeit.Beschreibung.PressKeys(ZV_TEXT);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmZlvsErstellen.Selektion' at Center.", repo.FrmZlvsErstellen.SelektionInfo, new RecordItemIndex(9));
            repo.FrmZlvsErstellen.Selektion.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$LF_303070' with focus on 'FrmZlvsErstellen.KontoVon'.", repo.FrmZlvsErstellen.KontoVonInfo, new RecordItemIndex(10));
            repo.FrmZlvsErstellen.KontoVon.PressKeys(LF_303070);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Tab' Press with focus on 'FrmZlvsErstellen.KontoVon'.", repo.FrmZlvsErstellen.KontoVonInfo, new RecordItemIndex(11));
            Keyboard.PrepareFocus(repo.FrmZlvsErstellen.KontoVon);
            Keyboard.Press(System.Windows.Forms.Keys.Tab, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$LF_303077' with focus on 'FrmZlvsErstellen.TextBis'.", repo.FrmZlvsErstellen.TextBisInfo, new RecordItemIndex(12));
            repo.FrmZlvsErstellen.TextBis.PressKeys(LF_303077);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Tab' Press with focus on 'FrmZlvsErstellen.TextBis'.", repo.FrmZlvsErstellen.TextBisInfo, new RecordItemIndex(13));
            Keyboard.PrepareFocus(repo.FrmZlvsErstellen.TextBis);
            Keyboard.Press(System.Windows.Forms.Keys.Tab, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$LF_303070) on item 'FrmZlvsErstellen.KontoVon'.", repo.FrmZlvsErstellen.KontoVonInfo, new RecordItemIndex(14));
            Validate.AttributeEqual(repo.FrmZlvsErstellen.KontoVonInfo, "Text", LF_303070);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$LF_303077) on item 'FrmZlvsErstellen.TextBis'.", repo.FrmZlvsErstellen.TextBisInfo, new RecordItemIndex(15));
            Validate.AttributeEqual(repo.FrmZlvsErstellen.TextBisInfo, "Text", LF_303077);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmZlvsErstellen.TabPageOptionen' at Center.", repo.FrmZlvsErstellen.TabPageOptionenInfo, new RecordItemIndex(16));
            repo.FrmZlvsErstellen.TabPageOptionen.Click();
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmZlvsErstellen.CbMahnvorschlagNichtDrucken' at Center.", repo.FrmZlvsErstellen.CbMahnvorschlagNichtDruckenInfo, new RecordItemIndex(17));
            repo.FrmZlvsErstellen.CbMahnvorschlagNichtDrucken.Click();
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Checked='True') on item 'FrmZlvsErstellen.CbMahnvorschlagNichtDrucken'.", repo.FrmZlvsErstellen.CbMahnvorschlagNichtDruckenInfo, new RecordItemIndex(18));
            Validate.AttributeEqual(repo.FrmZlvsErstellen.CbMahnvorschlagNichtDruckenInfo, "Checked", "True");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmZlvsErstellen.TabPageAllgemein' at Center.", repo.FrmZlvsErstellen.TabPageAllgemeinInfo, new RecordItemIndex(19));
            repo.FrmZlvsErstellen.TabPageAllgemein.Click();
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Datum_bis) on item 'FrmZlvsErstellen.TpFaelligkeit.NettofaelligkeitBis'.", repo.FrmZlvsErstellen.TpFaelligkeit.NettofaelligkeitBisInfo, new RecordItemIndex(20));
            Validate.AttributeEqual(repo.FrmZlvsErstellen.TpFaelligkeit.NettofaelligkeitBisInfo, "Text", Datum_bis);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Datum_von) on item 'FrmZlvsErstellen.TpFaelligkeit.SkontofaelligkeitVon'.", repo.FrmZlvsErstellen.TpFaelligkeit.SkontofaelligkeitVonInfo, new RecordItemIndex(21));
            Validate.AttributeEqual(repo.FrmZlvsErstellen.TpFaelligkeit.SkontofaelligkeitVonInfo, "Text", Datum_von);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Datum_bis) on item 'FrmZlvsErstellen.TpFaelligkeit.SkontofaelligkeitBis'.", repo.FrmZlvsErstellen.TpFaelligkeit.SkontofaelligkeitBisInfo, new RecordItemIndex(22));
            Validate.AttributeEqual(repo.FrmZlvsErstellen.TpFaelligkeit.SkontofaelligkeitBisInfo, "Text", Datum_bis);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Tagesdatum) on item 'FrmZlvsErstellen.TpFaelligkeit.VorschlagErstellenMitZahldatum'.", repo.FrmZlvsErstellen.TpFaelligkeit.VorschlagErstellenMitZahldatumInfo, new RecordItemIndex(23));
            Validate.AttributeEqual(repo.FrmZlvsErstellen.TpFaelligkeit.VorschlagErstellenMitZahldatumInfo, "Text", Tagesdatum);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$ZV_TEXT) on item 'FrmZlvsErstellen.TpFaelligkeit.Beschreibung'.", repo.FrmZlvsErstellen.TpFaelligkeit.BeschreibungInfo, new RecordItemIndex(24));
            Validate.AttributeEqual(repo.FrmZlvsErstellen.TpFaelligkeit.BeschreibungInfo, "Text", ZV_TEXT);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmZlvsErstellen.PbStandard1' at Center.", repo.FrmZlvsErstellen.PbStandard1Info, new RecordItemIndex(25));
            repo.FrmZlvsErstellen.PbStandard1.Click();
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
