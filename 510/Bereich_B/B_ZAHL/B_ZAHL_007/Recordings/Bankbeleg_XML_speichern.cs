///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace B_ZAHL_007.Recordings
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Bankbeleg_XML_speichern recording.
    /// </summary>
    [TestModule("35dbcd53-b25f-4bb1-9ed6-f5d08c28f294", ModuleType.Recording, 1)]
    public partial class Bankbeleg_XML_speichern : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::B_ZAHL_007.B_ZAHL_007Repository repository.
        /// </summary>
        public static global::B_ZAHL_007.B_ZAHL_007Repository repo = global::B_ZAHL_007.B_ZAHL_007Repository.Instance;

        static Bankbeleg_XML_speichern instance = new Bankbeleg_XML_speichern();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Bankbeleg_XML_speichern()
        {
            XML_Pfad_Datei = "c:\\temp\\b_zahl_007.xml";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Bankbeleg_XML_speichern Instance
        {
            get { return instance; }
        }

#region Variables

        string _XML_Pfad_Datei;

        /// <summary>
        /// Gets or sets the value of variable XML_Pfad_Datei.
        /// </summary>
        [TestVariable("320e5712-ba36-46b9-aa5f-66c152019f2c")]
        public string XML_Pfad_Datei
        {
            get { return _XML_Pfad_Datei; }
            set { _XML_Pfad_Datei = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'UEberweisungsDatentraeger.UEberweisungsDatentraeger'.", repo.UEberweisungsDatentraeger.UEberweisungsDatentraegerInfo, new RecordItemIndex(0));
            Validate.Exists(repo.UEberweisungsDatentraeger.UEberweisungsDatentraegerInfo);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 2m to exist. Associated repository item: 'UEberweisungsDatentraeger.Text1001'", repo.UEberweisungsDatentraeger.Text1001Info, new ActionTimeout(120000), new RecordItemIndex(1));
            repo.UEberweisungsDatentraeger.Text1001Info.WaitForExists(120000);
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute Text to '$XML_Pfad_Datei' on item 'UEberweisungsDatentraeger.Text1001'.", repo.UEberweisungsDatentraeger.Text1001Info, new RecordItemIndex(2));
            repo.UEberweisungsDatentraeger.Text1001.Element.SetAttributeValue("Text", XML_Pfad_Datei);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 2s.", new RecordItemIndex(3));
            Delay.Duration(2000, false);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'UEberweisungsDatentraeger.ButtonSpeichern' at Center.", repo.UEberweisungsDatentraeger.ButtonSpeichernInfo, new RecordItemIndex(4));
            repo.UEberweisungsDatentraeger.ButtonSpeichern.Click();
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 1s.", new RecordItemIndex(5));
            Delay.Duration(1000, false);
            
            // Falls b_zahl_007.xml schon vorhanden ist, die Meldung mit J bestätigen (nicht Button JA, weil sonst Fehler, wenn Meldung nicht kommt). Nächster Button ist "OK" (O)
            Report.Log(ReportLevel.Info, "Keyboard", "Falls b_zahl_007.xml schon vorhanden ist, die Meldung mit J bestätigen (nicht Button JA, weil sonst Fehler, wenn Meldung nicht kommt). Nächster Button ist \"OK\" (O)\r\nKey 'J' Press.", new RecordItemIndex(6));
            Keyboard.Press(System.Windows.Forms.Keys.J, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 1s.", new RecordItemIndex(7));
            Delay.Duration(1000, false);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 2m to exist. Associated repository item: 'DlgMessageBox.LabelMeldungstext'", repo.DlgMessageBox.LabelMeldungstextInfo, new ActionTimeout(120000), new RecordItemIndex(8));
            repo.DlgMessageBox.LabelMeldungstextInfo.WaitForExists(120000);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='Datenträger erstellt !') on item 'DlgMessageBox.LabelMeldungstext'.", repo.DlgMessageBox.LabelMeldungstextInfo, new RecordItemIndex(9));
            Validate.AttributeEqual(repo.DlgMessageBox.LabelMeldungstextInfo, "Text", "Datenträger erstellt !");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'DlgMessageBox.Button0' at Center.", repo.DlgMessageBox.Button0Info, new RecordItemIndex(10));
            repo.DlgMessageBox.Button0.Click();
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
