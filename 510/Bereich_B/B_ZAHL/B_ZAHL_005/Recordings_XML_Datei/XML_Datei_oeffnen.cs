///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace B_ZAHL_005.Recordings_XML_Datei
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The XML_Datei_oeffnen recording.
    /// </summary>
    [TestModule("cb683c85-932f-492f-9cfc-acc6aa7c9c66", ModuleType.Recording, 1)]
    public partial class XML_Datei_oeffnen : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::B_ZAHL_005.B_ZAHL_005Repository repository.
        /// </summary>
        public static global::B_ZAHL_005.B_ZAHL_005Repository repo = global::B_ZAHL_005.B_ZAHL_005Repository.Instance;

        static XML_Datei_oeffnen instance = new XML_Datei_oeffnen();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public XML_Datei_oeffnen()
        {
            XML_Pfad_Datei = "c:\\temp\\b_zahl_005.xml";
            Programm2 = "notepad.exe";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static XML_Datei_oeffnen Instance
        {
            get { return instance; }
        }

#region Variables

        string _XML_Pfad_Datei;

        /// <summary>
        /// Gets or sets the value of variable XML_Pfad_Datei.
        /// </summary>
        [TestVariable("35b4637d-d424-4bfb-977f-90bf5a16d8e7")]
        public string XML_Pfad_Datei
        {
            get { return _XML_Pfad_Datei; }
            set { _XML_Pfad_Datei = value; }
        }

        string _Programm2;

        /// <summary>
        /// Gets or sets the value of variable Programm2.
        /// </summary>
        [TestVariable("4fbbbd95-a373-44e3-934e-b6b7107341d5")]
        public string Programm2
        {
            get { return _Programm2; }
            set { _Programm2 = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Application", "Run application with file name from variable $XML_Pfad_Datei with arguments from variable $Programm2 in normal mode.", new RecordItemIndex(0));
            Host.Local.RunApplication(XML_Pfad_Datei, Programm2, "", false);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 2m to exist. Associated repository item: 'BZahl005XmlEditor'", repo.BZahl005XmlEditor.SelfInfo, new ActionTimeout(120000), new RecordItemIndex(1));
            repo.BZahl005XmlEditor.SelfInfo.WaitForExists(120000);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
