///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace B_ZAHL_006.Recordings
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Fehler_Nicht_uebernommene_OPs_pruefen recording.
    /// </summary>
    [TestModule("af10d911-b239-4221-aa61-4c6c2f90b658", ModuleType.Recording, 1)]
    public partial class Fehler_Nicht_uebernommene_OPs_pruefen : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::B_ZAHL_006.B_ZAHL_006Repository repository.
        /// </summary>
        public static global::B_ZAHL_006.B_ZAHL_006Repository repo = global::B_ZAHL_006.B_ZAHL_006Repository.Instance;

        static Fehler_Nicht_uebernommene_OPs_pruefen instance = new Fehler_Nicht_uebernommene_OPs_pruefen();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Fehler_Nicht_uebernommene_OPs_pruefen()
        {
            Beleg_ER60B = "ER60B_B_ZAHL_006";
            LF_303060 = "303060";
            Zahldatum_alt = "07.07.2021";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Fehler_Nicht_uebernommene_OPs_pruefen Instance
        {
            get { return instance; }
        }

#region Variables

        string _LF_303060;

        /// <summary>
        /// Gets or sets the value of variable LF_303060.
        /// </summary>
        [TestVariable("fa15d15b-072f-4dd2-9320-bee40c38b4da")]
        public string LF_303060
        {
            get { return _LF_303060; }
            set { _LF_303060 = value; }
        }

        string _Zahldatum_alt;

        /// <summary>
        /// Gets or sets the value of variable Zahldatum_alt.
        /// </summary>
        [TestVariable("0ec71b71-fa17-41f3-8768-4cb04d7c7417")]
        public string Zahldatum_alt
        {
            get { return _Zahldatum_alt; }
            set { _Zahldatum_alt = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable Beleg_ER60B.
        /// </summary>
        [TestVariable("8d2408b2-0e9f-4320-8968-f273f5704abc")]
        public string Beleg_ER60B
        {
            get { return repo.Beleg_ER60B; }
            set { repo.Beleg_ER60B = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Wait", "Waiting 2m to exist. Associated repository item: 'FrmBankbeleg.PbToolBarItemsNichtUebernommen'", repo.FrmBankbeleg.PbToolBarItemsNichtUebernommenInfo, new ActionTimeout(120000), new RecordItemIndex(0));
            repo.FrmBankbeleg.PbToolBarItemsNichtUebernommenInfo.WaitForExists(120000);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmBankbeleg.PbToolBarItemsNichtUebernommen' at Center.", repo.FrmBankbeleg.PbToolBarItemsNichtUebernommenInfo, new RecordItemIndex(1));
            repo.FrmBankbeleg.PbToolBarItemsNichtUebernommen.Click();
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 2m to exist. Associated repository item: 'TblNichtUebernommene.TitleBar100NichtUebernommeneZahlun'", repo.TblNichtUebernommene.TitleBar100NichtUebernommeneZahlunInfo, new ActionTimeout(120000), new RecordItemIndex(2));
            repo.TblNichtUebernommene.TitleBar100NichtUebernommeneZahlunInfo.WaitForExists(120000);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$LF_303060) on item 'TblNichtUebernommene.ChildTableWindow.ColAdrNrRow2'.", repo.TblNichtUebernommene.ChildTableWindow.ColAdrNrRow2Info, new RecordItemIndex(3));
            Validate.AttributeEqual(repo.TblNichtUebernommene.ChildTableWindow.ColAdrNrRow2Info, "Text", LF_303060);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Beleg_ER60B) on item 'TblNichtUebernommene.ChildTableWindow.ColBusaBelegnrRow2'.", repo.TblNichtUebernommene.ChildTableWindow.ColBusaBelegnrRow2Info, new RecordItemIndex(4));
            Validate.AttributeEqual(repo.TblNichtUebernommene.ChildTableWindow.ColBusaBelegnrRow2Info, "Text", Beleg_ER60B);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='Zahlsperre (S), ') on item 'TblNichtUebernommene.ChildTableWindow.ColInfoRow2'.", repo.TblNichtUebernommene.ChildTableWindow.ColInfoRow2Info, new RecordItemIndex(5));
            Validate.AttributeEqual(repo.TblNichtUebernommene.ChildTableWindow.ColInfoRow2Info, "Text", "Zahlsperre (S), ");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='Prüfen...') on item 'TblNichtUebernommene.ChildTableWindow.ColNameRow4'.", repo.TblNichtUebernommene.ChildTableWindow.ColNameRow4Info, new RecordItemIndex(6));
            Validate.AttributeEqual(repo.TblNichtUebernommene.ChildTableWindow.ColNameRow4Info, "Text", "Prüfen...");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (Text>'Vorschlag 6 Zahldatum (07.07.2021) bereits abgelaufen! Bitte anpassen.') on item 'TblNichtUebernommene.ChildTableWindow.ColInfoRow4'.", repo.TblNichtUebernommene.ChildTableWindow.ColInfoRow4Info, new RecordItemIndex(7));
            Validate.AttributeContains(repo.TblNichtUebernommene.ChildTableWindow.ColInfoRow4Info, "Text", "Vorschlag 6 Zahldatum (07.07.2021) bereits abgelaufen! Bitte anpassen.");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (Text>$Zahldatum_alt) on item 'TblNichtUebernommene.ChildTableWindow.ColInfoRow4'.", repo.TblNichtUebernommene.ChildTableWindow.ColInfoRow4Info, new RecordItemIndex(8));
            Validate.AttributeContains(repo.TblNichtUebernommene.ChildTableWindow.ColInfoRow4Info, "Text", Zahldatum_alt);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='Prüfen...') on item 'TblNichtUebernommene.ChildTableWindow.ColNameRow5'.", repo.TblNichtUebernommene.ChildTableWindow.ColNameRow5Info, new RecordItemIndex(9));
            Validate.AttributeEqual(repo.TblNichtUebernommene.ChildTableWindow.ColNameRow5Info, "Text", "Prüfen...");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='Bitte IBAN prüfen. Die ausgewählte Zahlungsart <S> ist ein SEPA-Zahlweg,\r\n Land <TR> ist jedoch kein SEPA-Teilnehmer.') on item 'TblNichtUebernommene.ChildTableWindow.ColInfoRow5'.", repo.TblNichtUebernommene.ChildTableWindow.ColInfoRow5Info, new RecordItemIndex(10));
            Validate.AttributeEqual(repo.TblNichtUebernommene.ChildTableWindow.ColInfoRow5Info, "Text", "Bitte IBAN prüfen. Die ausgewählte Zahlungsart <S> ist ein SEPA-Zahlweg,\r\n Land <TR> ist jedoch kein SEPA-Teilnehmer.");
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
