///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace B_ZAHL_002.Recordings
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Skonto_neu_ermitteln recording.
    /// </summary>
    [TestModule("25c20b2f-2f90-4d0c-8423-35523fbcd8d9", ModuleType.Recording, 1)]
    public partial class Skonto_neu_ermitteln : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::B_ZAHL_002.B_ZAHL_002Repository repository.
        /// </summary>
        public static global::B_ZAHL_002.B_ZAHL_002Repository repo = global::B_ZAHL_002.B_ZAHL_002Repository.Instance;

        static Skonto_neu_ermitteln instance = new Skonto_neu_ermitteln();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Skonto_neu_ermitteln()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Skonto_neu_ermitteln Instance
        {
            get { return instance; }
        }

#region Variables

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Wait", "Waiting 2m to exist. Associated repository item: 'FrmZlvsAEndern.TitleBar100LieferantenZahlvorschl'", repo.FrmZlvsAEndern.TitleBar100LieferantenZahlvorschlInfo, new ActionTimeout(120000), new RecordItemIndex(0));
            repo.FrmZlvsAEndern.TitleBar100LieferantenZahlvorschlInfo.WaitForExists(120000);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (Text>'Lieferanten - Zahlvorschlag bearbeiten: 3') on item 'FrmZlvsAEndern.TitleBar100LieferantenZahlvorschl'.", repo.FrmZlvsAEndern.TitleBar100LieferantenZahlvorschlInfo, new RecordItemIndex(1));
            Validate.AttributeContains(repo.FrmZlvsAEndern.TitleBar100LieferantenZahlvorschlInfo, "Text", "Lieferanten - Zahlvorschlag bearbeiten: 3");
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 2m to exist. Associated repository item: 'FrmZlvsAEndern.ChildTableWindow.Row1'", repo.FrmZlvsAEndern.ChildTableWindow.Row1Info, new ActionTimeout(120000), new RecordItemIndex(2));
            repo.FrmZlvsAEndern.ChildTableWindow.Row1Info.WaitForExists(120000);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmZlvsAEndern.ChildTableWindow.Row1Column0' at Center.", repo.FrmZlvsAEndern.ChildTableWindow.Row1Column0Info, new RecordItemIndex(3));
            repo.FrmZlvsAEndern.ChildTableWindow.Row1Column0.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{LControlKey down}'.", new RecordItemIndex(4));
            Keyboard.Press("{LControlKey down}");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmZlvsAEndern.ChildTableWindow.Row2Column0' at Center.", repo.FrmZlvsAEndern.ChildTableWindow.Row2Column0Info, new RecordItemIndex(5));
            repo.FrmZlvsAEndern.ChildTableWindow.Row2Column0.Click();
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmZlvsAEndern.ChildTableWindow.Row3Column0' at Center.", repo.FrmZlvsAEndern.ChildTableWindow.Row3Column0Info, new RecordItemIndex(6));
            repo.FrmZlvsAEndern.ChildTableWindow.Row3Column0.Click();
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmZlvsAEndern.ChildTableWindow.Row4Column0' at Center.", repo.FrmZlvsAEndern.ChildTableWindow.Row4Column0Info, new RecordItemIndex(7));
            repo.FrmZlvsAEndern.ChildTableWindow.Row4Column0.Click();
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmZlvsAEndern.ChildTableWindow.Row6Column0' at Center.", repo.FrmZlvsAEndern.ChildTableWindow.Row6Column0Info, new RecordItemIndex(8));
            repo.FrmZlvsAEndern.ChildTableWindow.Row6Column0.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{LControlKey up}'.", new RecordItemIndex(9));
            Keyboard.Press("{LControlKey up}");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Right Click item 'FrmZlvsAEndern.ChildTableWindow.Row6Column0' at Center.", repo.FrmZlvsAEndern.ChildTableWindow.Row6Column0Info, new RecordItemIndex(10));
            repo.FrmZlvsAEndern.ChildTableWindow.Row6Column0.Click(System.Windows.Forms.MouseButtons.Right);
            
            // Search Timeout + 2m
            Report.Log(ReportLevel.Info, "Mouse", "Search Timeout + 2m\r\nMouse Left Click item 'BZAHL.MitSkonto' at CenterRight.", repo.BZAHL.MitSkontoInfo, new RecordItemIndex(11));
            repo.BZAHL.MitSkonto.Click(Location.CenterRight);
            
            // Elementsuche dauert extrem lange (Search Timeout + 2m
            //Report.Log(ReportLevel.Info, "Mouse", "Elementsuche dauert extrem lange (Search Timeout + 2m\r\nMouse Left Click item 'BZAHL.SkontoLtOP' at CenterLeft.", repo.BZAHL.SkontoLtOPInfo, new RecordItemIndex(12));
            //repo.BZAHL.SkontoLtOP.Click(Location.CenterLeft);
            
            // Ersatz für Elementsuche: Tab + Enter für 1. Listenelement
            Report.Log(ReportLevel.Info, "Keyboard", "Ersatz für Elementsuche: Tab + Enter für 1. Listenelement\r\nKey 'Tab' Press.", new RecordItemIndex(13));
            Keyboard.Press(System.Windows.Forms.Keys.Tab, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            // Ersatz für Elementsuche: Tab + Enter für 1. Listenelement
            Report.Log(ReportLevel.Info, "Keyboard", "Ersatz für Elementsuche: Tab + Enter für 1. Listenelement\r\nKey 'Enter' Press.", new RecordItemIndex(14));
            Keyboard.Press(System.Windows.Forms.Keys.Return, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmZlvsAEndern.PbDataAccessSpeichern' at Center.", repo.FrmZlvsAEndern.PbDataAccessSpeichernInfo, new RecordItemIndex(15));
            repo.FrmZlvsAEndern.PbDataAccessSpeichern.Click();
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 3s.", new RecordItemIndex(16));
            Delay.Duration(3000, false);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
