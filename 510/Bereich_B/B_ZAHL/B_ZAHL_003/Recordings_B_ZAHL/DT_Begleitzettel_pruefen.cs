///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace B_ZAHL_003.Recordings_B_ZAHL
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The DT_Begleitzettel_pruefen recording.
    /// </summary>
    [TestModule("d03e67d6-9354-4975-9ab4-24cc228b7392", ModuleType.Recording, 1)]
    public partial class DT_Begleitzettel_pruefen : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::B_ZAHL_003.B_ZAHL_003Repository repository.
        /// </summary>
        public static global::B_ZAHL_003.B_ZAHL_003Repository repo = global::B_ZAHL_003.B_ZAHL_003Repository.Instance;

        static DT_Begleitzettel_pruefen instance = new DT_Begleitzettel_pruefen();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public DT_Begleitzettel_pruefen()
        {
            XML_Datei = "b_zahl_003.xml";
            Tagesdatum = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static DT_Begleitzettel_pruefen Instance
        {
            get { return instance; }
        }

#region Variables

        string _XML_Datei;

        /// <summary>
        /// Gets or sets the value of variable XML_Datei.
        /// </summary>
        [TestVariable("b55f9832-facc-4bd6-8cf7-6c20f498c6ba")]
        public string XML_Datei
        {
            get { return _XML_Datei; }
            set { _XML_Datei = value; }
        }

        string _Tagesdatum;

        /// <summary>
        /// Gets or sets the value of variable Tagesdatum.
        /// </summary>
        [TestVariable("8fec6295-7b7e-4347-b143-93daf5024f45")]
        public string Tagesdatum
        {
            get { return _Tagesdatum; }
            set { _Tagesdatum = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Wait", "Waiting 3m to exist. Associated repository item: 'DlgDrucken.TitleBar100DruckeDatentraegerBegle'", repo.DlgDrucken.TitleBar100DruckeDatentraegerBegleInfo, new ActionTimeout(180000), new RecordItemIndex(0));
            repo.DlgDrucken.TitleBar100DruckeDatentraegerBegleInfo.WaitForExists(180000);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (Text>'Drucke Datenträger-Begleitzettel') on item 'DlgDrucken.TitleBar100DruckeDatentraegerBegle'.", repo.DlgDrucken.TitleBar100DruckeDatentraegerBegleInfo, new RecordItemIndex(1));
            Validate.AttributeContains(repo.DlgDrucken.TitleBar100DruckeDatentraegerBegleInfo, "Text", "Drucke Datenträger-Begleitzettel");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'DlgDrucken.PbExport' at Center.", repo.DlgDrucken.PbExportInfo, new RecordItemIndex(2));
            repo.DlgDrucken.PbExport.Click();
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 3m to exist. Associated repository item: 'PbExportItems.Tabelle'", repo.PbExportItems.TabelleInfo, new ActionTimeout(180000), new RecordItemIndex(3));
            repo.PbExportItems.TabelleInfo.WaitForExists(180000);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'PbExportItems.Tabelle' at Center.", repo.PbExportItems.TabelleInfo, new RecordItemIndex(4));
            repo.PbExportItems.Tabelle.Click();
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 2m to exist. Associated repository item: 'TblDrucken.TitleBar100DatentraegerBegleitzette'", repo.TblDrucken.TitleBar100DatentraegerBegleitzetteInfo, new ActionTimeout(120000), new RecordItemIndex(5));
            repo.TblDrucken.TitleBar100DatentraegerBegleitzetteInfo.WaitForExists(120000);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (Text>'Datenträger-Begleitzettel') on item 'DlgDrucken.TitleBar100DruckeDatentraegerBegle'.", repo.DlgDrucken.TitleBar100DruckeDatentraegerBegleInfo, new RecordItemIndex(6));
            Validate.AttributeContains(repo.DlgDrucken.TitleBar100DruckeDatentraegerBegleInfo, "Text", "Datenträger-Begleitzettel");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$XML_Datei) on item 'TblDrucken.Druck_Tabelle.CColumnRow1'.", repo.TblDrucken.Druck_Tabelle.CColumnRow1Info, new RecordItemIndex(7));
            Validate.AttributeEqual(repo.TblDrucken.Druck_Tabelle.CColumnRow1Info, "Text", XML_Datei);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Tagesdatum) on item 'TblDrucken.Druck_Tabelle.CDatumsspalteRow1'.", repo.TblDrucken.Druck_Tabelle.CDatumsspalteRow1Info, new RecordItemIndex(8));
            Validate.AttributeEqual(repo.TblDrucken.Druck_Tabelle.CDatumsspalteRow1Info, "Text", Tagesdatum);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (Text>'Oberbank AG\t\trs2\t\tÜBERWEISUNG\tS\tSepaüberweisung\t2001\t1\tUEBW\t\t\t2001\t15090\tEUR\t00237571500\tOBKLAT2LXXX\tAT411100000237571500\t52753\tEUR\t\t') on item 'TblDrucken.Druck_Tabelle.Row1'.", repo.TblDrucken.Druck_Tabelle.Row1Info, new RecordItemIndex(9));
            Validate.AttributeContains(repo.TblDrucken.Druck_Tabelle.Row1Info, "Text", "Oberbank AG\t\trs2\t\tÜBERWEISUNG\tS\tSepaüberweisung\t2001\t1\tUEBW\t\t\t2001\t15090\tEUR\t00237571500\tOBKLAT2LXXX\tAT411100000237571500\t52753\tEUR\t\t");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='5') on item 'TblDrucken.Druck_Tabelle.CColumnRow12'.", repo.TblDrucken.Druck_Tabelle.CColumnRow12Info, new RecordItemIndex(10));
            Validate.AttributeEqual(repo.TblDrucken.Druck_Tabelle.CColumnRow12Info, "Text", "5");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='52753') on item 'TblDrucken.Druck_Tabelle.Row1'.", repo.TblDrucken.Druck_Tabelle.Row1Info, new RecordItemIndex(11));
            Validate.AttributeEqual(repo.TblDrucken.Druck_Tabelle.Row1Info, "Text", "52753");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Alt+F4' Press with focus on 'TblDrucken.TitleBar100DatentraegerBegleitzette'.", repo.TblDrucken.TitleBar100DatentraegerBegleitzetteInfo, new RecordItemIndex(12));
            Keyboard.PrepareFocus(repo.TblDrucken.TitleBar100DatentraegerBegleitzette);
            Keyboard.Press(System.Windows.Forms.Keys.F4 | System.Windows.Forms.Keys.Alt, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 1s.", new RecordItemIndex(13));
            Delay.Duration(1000, false);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Alt+F4' Press with focus on 'DlgDrucken.TitleBar100DruckeDatentraegerBegle'.", repo.DlgDrucken.TitleBar100DruckeDatentraegerBegleInfo, new RecordItemIndex(14));
            Keyboard.PrepareFocus(repo.DlgDrucken.TitleBar100DruckeDatentraegerBegle);
            Keyboard.Press(System.Windows.Forms.Keys.F4 | System.Windows.Forms.Keys.Alt, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
