///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace B_KTO_003.Recordings
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Konto_kopieren recording.
    /// </summary>
    [TestModule("aea03535-9992-4464-930c-25f9b55bcfee", ModuleType.Recording, 1)]
    public partial class Konto_kopieren : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::B_KTO_003.B_KTO_003Repository repository.
        /// </summary>
        public static global::B_KTO_003.B_KTO_003Repository repo = global::B_KTO_003.B_KTO_003Repository.Instance;

        static Konto_kopieren instance = new Konto_kopieren();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Konto_kopieren()
        {
            Konto = "2341";
            Konto_Ziel = "0123";
            Kontoname_Ziel = "QS Konto kopieren neu";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Konto_kopieren Instance
        {
            get { return instance; }
        }

#region Variables

        string _Konto;

        /// <summary>
        /// Gets or sets the value of variable Konto.
        /// </summary>
        [TestVariable("96d1b9a8-94fe-4ba7-92ae-5e121f8d3934")]
        public string Konto
        {
            get { return _Konto; }
            set { _Konto = value; }
        }

        string _Konto_Ziel;

        /// <summary>
        /// Gets or sets the value of variable Konto_Ziel.
        /// </summary>
        [TestVariable("b3d6ece9-f3f5-4590-a993-d311796da9b3")]
        public string Konto_Ziel
        {
            get { return _Konto_Ziel; }
            set { _Konto_Ziel = value; }
        }

        string _Kontoname_Ziel;

        /// <summary>
        /// Gets or sets the value of variable Kontoname_Ziel.
        /// </summary>
        [TestVariable("28229fb0-fce0-47f0-95e7-9c5116a0e077")]
        public string Kontoname_Ziel
        {
            get { return _Kontoname_Ziel; }
            set { _Kontoname_Ziel = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmKto.PbToolBarItemsKopieren' at Center.", repo.FrmKto.PbToolBarItemsKopierenInfo, new RecordItemIndex(0));
            repo.FrmKto.PbToolBarItemsKopieren.Click();
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'DlgCopyKto.NeueKontoNr' at Center.", repo.DlgCopyKto.NeueKontoNrInfo, new RecordItemIndex(1));
            repo.DlgCopyKto.NeueKontoNr.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Konto' with focus on 'DlgCopyKto.NeueKontoNr'.", repo.DlgCopyKto.NeueKontoNrInfo, new RecordItemIndex(2));
            repo.DlgCopyKto.NeueKontoNr.PressKeys(Konto);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Tab' Press with focus on 'DlgCopyKto.NeueKontoNr'.", repo.DlgCopyKto.NeueKontoNrInfo, new RecordItemIndex(3));
            Keyboard.PrepareFocus(repo.DlgCopyKto.NeueKontoNr);
            Keyboard.Press(System.Windows.Forms.Keys.Tab, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'DlgCopyKto.Ok_Button_bei_Konto_kopieren' at Center.", repo.DlgCopyKto.Ok_Button_bei_Konto_kopierenInfo, new RecordItemIndex(4));
            repo.DlgCopyKto.Ok_Button_bei_Konto_kopieren.Click();
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='Konto bereits vorhanden') on item 'DlgMessageBox.Meldung_Konto_bereits_vorhanden'.", repo.DlgMessageBox.Meldung_Konto_bereits_vorhandenInfo, new RecordItemIndex(5));
            Validate.AttributeEqual(repo.DlgMessageBox.Meldung_Konto_bereits_vorhandenInfo, "Text", "Konto bereits vorhanden");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'DlgMessageBox.ok_Button_bei_Meldung' at Center.", repo.DlgMessageBox.ok_Button_bei_MeldungInfo, new RecordItemIndex(6));
            repo.DlgMessageBox.ok_Button_bei_Meldung.Click();
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'DlgCopyKto.NeueKontoNr' at Center.", repo.DlgCopyKto.NeueKontoNrInfo, new RecordItemIndex(7));
            repo.DlgCopyKto.NeueKontoNr.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Back}{Back}{Back}{Back}' with focus on 'DlgCopyKto.NeueKontoNr'.", repo.DlgCopyKto.NeueKontoNrInfo, new RecordItemIndex(8));
            repo.DlgCopyKto.NeueKontoNr.PressKeys("{Back}{Back}{Back}{Back}");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Konto_Ziel' with focus on 'DlgCopyKto.NeueKontoNr'.", repo.DlgCopyKto.NeueKontoNrInfo, new RecordItemIndex(9));
            repo.DlgCopyKto.NeueKontoNr.PressKeys(Konto_Ziel);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Tab}' with focus on 'DlgCopyKto.NeueKontoNr'.", repo.DlgCopyKto.NeueKontoNrInfo, new RecordItemIndex(10));
            repo.DlgCopyKto.NeueKontoNr.PressKeys("{Tab}");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Kontoname_Ziel' with focus on 'DlgCopyKto.DfKtoBez1'.", repo.DlgCopyKto.DfKtoBez1Info, new RecordItemIndex(11));
            repo.DlgCopyKto.DfKtoBez1.PressKeys(Kontoname_Ziel);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Tab}' with focus on 'DlgCopyKto.DfKtoBez1'.", repo.DlgCopyKto.DfKtoBez1Info, new RecordItemIndex(12));
            repo.DlgCopyKto.DfKtoBez1.PressKeys("{Tab}");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Konto_Ziel) on item 'DlgCopyKto.NeueKontoNr'.", repo.DlgCopyKto.NeueKontoNrInfo, new RecordItemIndex(13));
            Validate.AttributeEqual(repo.DlgCopyKto.NeueKontoNrInfo, "Text", Konto_Ziel);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Kontoname_Ziel) on item 'DlgCopyKto.DfKtoBez1'.", repo.DlgCopyKto.DfKtoBez1Info, new RecordItemIndex(14));
            Validate.AttributeEqual(repo.DlgCopyKto.DfKtoBez1Info, "Text", Kontoname_Ziel);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'DlgCopyKto.Ok_Button_bei_Konto_kopieren' at Center.", repo.DlgCopyKto.Ok_Button_bei_Konto_kopierenInfo, new RecordItemIndex(15));
            repo.DlgCopyKto.Ok_Button_bei_Konto_kopieren.Click();
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
