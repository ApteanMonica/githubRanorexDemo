///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace B_KTO_004.Recordings
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Konto_laden recording.
    /// </summary>
    [TestModule("d6f40cb6-48a7-4b4e-a6e9-4271aed91dbe", ModuleType.Recording, 1)]
    public partial class Konto_laden : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::B_KTO_004.B_KTO_004Repository repository.
        /// </summary>
        public static global::B_KTO_004.B_KTO_004Repository repo = global::B_KTO_004.B_KTO_004Repository.Instance;

        static Konto_laden instance = new Konto_laden();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Konto_laden()
        {
            Konto = "3214";
            Kontoname = "QS Konto löschen";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Konto_laden Instance
        {
            get { return instance; }
        }

#region Variables

        string _Konto;

        /// <summary>
        /// Gets or sets the value of variable Konto.
        /// </summary>
        [TestVariable("ad14df75-5fbf-4489-a0cc-fff99d23d5d9")]
        public string Konto
        {
            get { return _Konto; }
            set { _Konto = value; }
        }

        string _Kontoname;

        /// <summary>
        /// Gets or sets the value of variable Kontoname.
        /// </summary>
        [TestVariable("83323539-e8df-4e3b-9788-684aab87166f")]
        public string Kontoname
        {
            get { return _Kontoname; }
            set { _Kontoname = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmKto.Suchtext' at Center.", repo.FrmKto.SuchtextInfo, new RecordItemIndex(0));
            repo.FrmKto.Suchtext.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Konto' with focus on 'FrmKto.Suchtext'.", repo.FrmKto.SuchtextInfo, new RecordItemIndex(1));
            repo.FrmKto.Suchtext.PressKeys(Konto);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Tab}' with focus on 'FrmKto.Suchtext'.", repo.FrmKto.SuchtextInfo, new RecordItemIndex(2));
            repo.FrmKto.Suchtext.PressKeys("{Tab}");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left DoubleClick item 'FrmKto.Row1Column0' at Center.", repo.FrmKto.Row1Column0Info, new RecordItemIndex(3));
            repo.FrmKto.Row1Column0.DoubleClick();
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Konto) on item 'FrmKto.DfKtoNr'.", repo.FrmKto.DfKtoNrInfo, new RecordItemIndex(4));
            Validate.AttributeEqual(repo.FrmKto.DfKtoNrInfo, "Text", Konto);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Kontoname) on item 'FrmKto.DfKtoBez1'.", repo.FrmKto.DfKtoBez1Info, new RecordItemIndex(5));
            Validate.AttributeEqual(repo.FrmKto.DfKtoBez1Info, "Text", Kontoname);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
