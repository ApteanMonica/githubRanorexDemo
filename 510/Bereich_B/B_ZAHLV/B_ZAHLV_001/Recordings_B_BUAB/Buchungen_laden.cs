///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace B_ZAHLV_001.Recordings_B_BUAB
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Buchungen_laden recording.
    /// </summary>
    [TestModule("a1791f3c-05e9-4ad0-9df1-f20d260c50ee", ModuleType.Recording, 1)]
    public partial class Buchungen_laden : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::B_ZAHLV_001.B_ZAHLV_001Repository repository.
        /// </summary>
        public static global::B_ZAHLV_001.B_ZAHLV_001Repository repo = global::B_ZAHLV_001.B_ZAHLV_001Repository.Instance;

        static Buchungen_laden instance = new Buchungen_laden();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Buchungen_laden()
        {
            Beleg_NR = "1001";
            Anzahl_OPs = "15";
            Tagesdatum = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Buchungen_laden Instance
        {
            get { return instance; }
        }

#region Variables

        string _Anzahl_OPs;

        /// <summary>
        /// Gets or sets the value of variable Anzahl_OPs.
        /// </summary>
        [TestVariable("1d603bdc-45b2-46b6-952d-2332e1ba932b")]
        public string Anzahl_OPs
        {
            get { return _Anzahl_OPs; }
            set { _Anzahl_OPs = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable Beleg_NR.
        /// </summary>
        [TestVariable("45450412-e2ee-4f6d-b254-75b8172cdacd")]
        public string Beleg_NR
        {
            get { return repo.Beleg_NR; }
            set { repo.Beleg_NR = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable Tagesdatum.
        /// </summary>
        [TestVariable("900969ed-27ee-46ac-8539-cd083f8fa4de")]
        public string Tagesdatum
        {
            get { return repo.Tagesdatum; }
            set { repo.Tagesdatum = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            //Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'Form100BuchungenAnzeigen.TitleBar100BuchungenAnzeigen'.", repo.Form100BuchungenAnzeigen.TitleBar100BuchungenAnzeigenInfo, new RecordItemIndex(0));
            //Validate.Exists(repo.Form100BuchungenAnzeigen.TitleBar100BuchungenAnzeigenInfo);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Beleg_NR' with focus on 'Form100BuchungenAnzeigen.Beleg'.", repo.Form100BuchungenAnzeigen.BelegInfo, new RecordItemIndex(1));
            repo.Form100BuchungenAnzeigen.Beleg.EnsureVisible();
            Keyboard.Press(Beleg_NR);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Tab' Press.", new RecordItemIndex(2));
            Keyboard.Press(System.Windows.Forms.Keys.Tab, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Form100BuchungenAnzeigen.PbDataAccessLoad' at Center.", repo.Form100BuchungenAnzeigen.PbDataAccessLoadInfo, new RecordItemIndex(3));
            repo.Form100BuchungenAnzeigen.PbDataAccessLoad.Click();
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 2m to exist. Associated repository item: 'DlgMessageBox'", repo.DlgMessageBox.SelfInfo, new ActionTimeout(120000), new RecordItemIndex(4));
            repo.DlgMessageBox.SelfInfo.WaitForExists(120000);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (Text>$Anzahl_OPs) on item 'DlgMessageBox.LabelMeldungstext'.", repo.DlgMessageBox.LabelMeldungstextInfo, new RecordItemIndex(5));
            Validate.AttributeContains(repo.DlgMessageBox.LabelMeldungstextInfo, "Text", Anzahl_OPs);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='15 Buchungen gefunden.\r\n \r\nAnzeigen ? ') on item 'DlgMessageBox.LabelMeldungstext'.", repo.DlgMessageBox.LabelMeldungstextInfo, new RecordItemIndex(6));
            Validate.AttributeEqual(repo.DlgMessageBox.LabelMeldungstextInfo, "Text", "15 Buchungen gefunden.\r\n \r\nAnzeigen ? ");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'DlgMessageBox.Button0' at Center.", repo.DlgMessageBox.Button0Info, new RecordItemIndex(7));
            repo.DlgMessageBox.Button0.Click();
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Beleg_NR) on item 'Form100BuchungenAnzeigen.Beleg'.", repo.Form100BuchungenAnzeigen.BelegInfo, new RecordItemIndex(8));
            Validate.AttributeEqual(repo.Form100BuchungenAnzeigen.BelegInfo, "Text", Beleg_NR);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 2m to exist. Associated repository item: 'Form100BuchungenAnzeigen.Zeilen1_39_rows.Row1'", repo.Form100BuchungenAnzeigen.Zeilen1_39_rows.Row1Info, new ActionTimeout(120000), new RecordItemIndex(9));
            repo.Form100BuchungenAnzeigen.Zeilen1_39_rows.Row1Info.WaitForExists(120000);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
