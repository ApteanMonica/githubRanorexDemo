///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace B_JOUR_004.Recordings
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The User_RSX_pruefen recording.
    /// </summary>
    [TestModule("eba928a0-ffdb-4896-9d1d-7c8a19a1f78c", ModuleType.Recording, 1)]
    public partial class User_RSX_pruefen : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::B_JOUR_004.B_JOUR_004Repository repository.
        /// </summary>
        public static global::B_JOUR_004.B_JOUR_004Repository repo = global::B_JOUR_004.B_JOUR_004Repository.Instance;

        static User_RSX_pruefen instance = new User_RSX_pruefen();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public User_RSX_pruefen()
        {
            User_RSX = "RSX";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static User_RSX_pruefen Instance
        {
            get { return instance; }
        }

#region Variables

        string _User_RSX;

        /// <summary>
        /// Gets or sets the value of variable User_RSX.
        /// </summary>
        [TestVariable("8cc1930a-b675-4c69-8ee5-09a202f0228d")]
        public string User_RSX
        {
            get { return _User_RSX; }
            set { _User_RSX = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            // Set Search Timeout +90s
            //Report.Log(ReportLevel.Info, "Mouse", "Set Search Timeout +90s\r\nMouse Left Click item 'BJOUR.Support_510_511' at Center.", repo.BJOUR.Support_510_511Info, new RecordItemIndex(0));
            //repo.BJOUR.Support_510_511.Click();
            
            // Set Search Timeout +90s
            //Report.Log(ReportLevel.Info, "Mouse", "Set Search Timeout +90s\r\nMouse Left Click item 'BJOUR.Support_521' at Center.", repo.BJOUR.Support_521Info, new RecordItemIndex(1));
            //repo.BJOUR.Support_521.Click();
            
            // Shortcut für Hilfe-Menü
            Report.Log(ReportLevel.Info, "Keyboard", "Shortcut für Hilfe-Menü\r\nKey 'Alt+H' Press.", new RecordItemIndex(2));
            Keyboard.Press(System.Windows.Forms.Keys.H | System.Windows.Forms.Keys.Alt, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            // S für Supportaufruf (unterschiedl. Elemente)
            Report.Log(ReportLevel.Info, "Keyboard", "S für Supportaufruf (unterschiedl. Elemente)\r\nKey sequence 's'.", new RecordItemIndex(3));
            Keyboard.Press("s");
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 1m to exist. Associated repository item: 'DlgWebSupport.TitleBar100SupportanfrageUebermitte'", repo.DlgWebSupport.TitleBar100SupportanfrageUebermitteInfo, new ActionTimeout(60000), new RecordItemIndex(4));
            repo.DlgWebSupport.TitleBar100SupportanfrageUebermitteInfo.WaitForExists(60000);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'DlgWebSupport.TitleBar100SupportanfrageUebermitte'.", repo.DlgWebSupport.TitleBar100SupportanfrageUebermitteInfo, new RecordItemIndex(5));
            Validate.Exists(repo.DlgWebSupport.TitleBar100SupportanfrageUebermitteInfo);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (Text>$User_RSX) on item 'DlgWebSupport.Meldungstext'.", repo.DlgWebSupport.MeldungstextInfo, new RecordItemIndex(6));
            Validate.AttributeContains(repo.DlgWebSupport.MeldungstextInfo, "Text", User_RSX);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'DlgWebSupport.Schliessen' at Center.", repo.DlgWebSupport.SchliessenInfo, new RecordItemIndex(7));
            repo.DlgWebSupport.Schliessen.Click();
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 300ms.", new RecordItemIndex(8));
            Delay.Duration(300, false);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
