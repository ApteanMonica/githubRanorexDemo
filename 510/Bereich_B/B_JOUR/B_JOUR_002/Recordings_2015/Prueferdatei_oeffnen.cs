///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace B_JOUR_002.Recordings_2015
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Prueferdatei_oeffnen recording.
    /// </summary>
    [TestModule("1bdb30d8-bf3e-48f6-80d3-22e2a9d0bbf9", ModuleType.Recording, 1)]
    public partial class Prueferdatei_oeffnen : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::B_JOUR_002.B_JOUR_002Repository repository.
        /// </summary>
        public static global::B_JOUR_002.B_JOUR_002Repository repo = global::B_JOUR_002.B_JOUR_002Repository.Instance;

        static Prueferdatei_oeffnen instance = new Prueferdatei_oeffnen();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Prueferdatei_oeffnen()
        {
            File_DE_2015 = "b_JOUR_001_journal_DE_vorlaeufig_2015.txt";
            Pfad_File_DE_2015 = "c:\\temp\\b_JOUR_001_journal_DE_vorlaeufig_2015.txt";
            Programm2 = "notepad.exe";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Prueferdatei_oeffnen Instance
        {
            get { return instance; }
        }

#region Variables

        string _File_DE_2015;

        /// <summary>
        /// Gets or sets the value of variable File_DE_2015.
        /// </summary>
        [TestVariable("86935c40-d886-4320-8312-20457dd42f8d")]
        public string File_DE_2015
        {
            get { return _File_DE_2015; }
            set { _File_DE_2015 = value; }
        }

        string _Pfad_File_DE_2015;

        /// <summary>
        /// Gets or sets the value of variable Pfad_File_DE_2015.
        /// </summary>
        [TestVariable("3d8cba93-3bd9-4d74-8849-d315e59005ca")]
        public string Pfad_File_DE_2015
        {
            get { return _Pfad_File_DE_2015; }
            set { _Pfad_File_DE_2015 = value; }
        }

        string _Programm2;

        /// <summary>
        /// Gets or sets the value of variable Programm2.
        /// </summary>
        [TestVariable("79bbcc19-b159-4b37-9ca4-b91a7ef0bef5")]
        public string Programm2
        {
            get { return _Programm2; }
            set { _Programm2 = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Application", "Run application with file name from variable $Pfad_File_DE_2015 with arguments from variable $Programm2 in normal mode.", new RecordItemIndex(0));
            Host.Local.RunApplication(Pfad_File_DE_2015, Programm2, "", false);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 2m to exist. Associated repository item: 'BJOUR001JournalDEVorlaeufig2015Tx.BJOUR001JournalDEVorlaeufig2015Tx'", repo.BJOUR001JournalDEVorlaeufig2015Tx.BJOUR001JournalDEVorlaeufig2015TxInfo, new ActionTimeout(120000), new RecordItemIndex(1));
            repo.BJOUR001JournalDEVorlaeufig2015Tx.BJOUR001JournalDEVorlaeufig2015TxInfo.WaitForExists(120000);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'BJOUR001JournalDEVorlaeufig2015Tx.BJOUR001JournalDEVorlaeufig2015Tx'.", repo.BJOUR001JournalDEVorlaeufig2015Tx.BJOUR001JournalDEVorlaeufig2015TxInfo, new RecordItemIndex(2));
            Validate.Exists(repo.BJOUR001JournalDEVorlaeufig2015Tx.BJOUR001JournalDEVorlaeufig2015TxInfo);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (Text>$File_DE_2015) on item 'BJOUR001JournalDEVorlaeufig2015Tx.BJOUR001JournalDEVorlaeufig2015Tx'.", repo.BJOUR001JournalDEVorlaeufig2015Tx.BJOUR001JournalDEVorlaeufig2015TxInfo, new RecordItemIndex(3));
            Validate.AttributeContains(repo.BJOUR001JournalDEVorlaeufig2015Tx.BJOUR001JournalDEVorlaeufig2015TxInfo, "Text", File_DE_2015);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
