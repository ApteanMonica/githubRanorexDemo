///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace B_JOUR_002.Recordings_2015
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Journalausgabe_2015_ok recording.
    /// </summary>
    [TestModule("2979ffbb-9efd-468e-aef1-0ac15642eb91", ModuleType.Recording, 1)]
    public partial class Journalausgabe_2015_ok : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::B_JOUR_002.B_JOUR_002Repository repository.
        /// </summary>
        public static global::B_JOUR_002.B_JOUR_002Repository repo = global::B_JOUR_002.B_JOUR_002Repository.Instance;

        static Journalausgabe_2015_ok instance = new Journalausgabe_2015_ok();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Journalausgabe_2015_ok()
        {
            GJ_2015 = "2015";
            Pfad_Datei_2015 = "c:\\temp\\b_JOUR_001_journal_DE_vorlaeufig_2015.txt";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Journalausgabe_2015_ok Instance
        {
            get { return instance; }
        }

#region Variables

        string _GJ_2015;

        /// <summary>
        /// Gets or sets the value of variable GJ_2015.
        /// </summary>
        [TestVariable("79595e8e-b938-441f-ab70-34e5eafe4f11")]
        public string GJ_2015
        {
            get { return _GJ_2015; }
            set { _GJ_2015 = value; }
        }

        string _Pfad_Datei_2015;

        /// <summary>
        /// Gets or sets the value of variable Pfad_Datei_2015.
        /// </summary>
        [TestVariable("e8bde285-1f04-48ca-82d3-cbe23350a4b4")]
        public string Pfad_Datei_2015
        {
            get { return _Pfad_Datei_2015; }
            set { _Pfad_Datei_2015 = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$GJ_2015) on item 'FrmJournal.Buchungsjahr'.", repo.FrmJournal.BuchungsjahrInfo, new RecordItemIndex(0));
            Validate.AttributeEqual(repo.FrmJournal.BuchungsjahrInfo, "Text", GJ_2015);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Checked='False') on item 'FrmJournal.TpJournaldruck1.CbEndgueltig'.", repo.FrmJournal.TpJournaldruck1.CbEndgueltigInfo, new RecordItemIndex(1));
            Validate.AttributeEqual(repo.FrmJournal.TpJournaldruck1.CbEndgueltigInfo, "Checked", "False");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Checked='False') on item 'FrmJournal.TpJournaldruck1.CbWiederholung'.", repo.FrmJournal.TpJournaldruck1.CbWiederholungInfo, new RecordItemIndex(2));
            Validate.AttributeEqual(repo.FrmJournal.TpJournaldruck1.CbWiederholungInfo, "Checked", "False");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Checked='True') on item 'FrmJournal.TpJournaldruck1.CbFinanzMitXML'.", repo.FrmJournal.TpJournaldruck1.CbFinanzMitXMLInfo, new RecordItemIndex(3));
            Validate.AttributeEqual(repo.FrmJournal.TpJournaldruck1.CbFinanzMitXMLInfo, "Checked", "True");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmJournal.PbStandard2' at Center.", repo.FrmJournal.PbStandard2Info, new RecordItemIndex(4));
            repo.FrmJournal.PbStandard2.Click();
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 2m to exist. Associated repository item: 'DlgMessageBox.Journaldruck'", repo.DlgMessageBox.JournaldruckInfo, new ActionTimeout(120000), new RecordItemIndex(5));
            repo.DlgMessageBox.JournaldruckInfo.WaitForExists(120000);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='Das Erstellen einer Prüfdatei ist nur bei einem endgültigen Erfassungsjournal \r\noder der Wiederholung eines Erfassungsjournales sinnvoll.\r\n\r\nSoll die Datei trotzdem gedruckt werden?\r\n') on item 'DlgMessageBox.LabelMeldungstext'.", repo.DlgMessageBox.LabelMeldungstextInfo, new RecordItemIndex(6));
            Validate.AttributeEqual(repo.DlgMessageBox.LabelMeldungstextInfo, "Text", "Das Erstellen einer Prüfdatei ist nur bei einem endgültigen Erfassungsjournal \r\noder der Wiederholung eines Erfassungsjournales sinnvoll.\r\n\r\nSoll die Datei trotzdem gedruckt werden?\r\n");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'DlgMessageBox.Button0' at Center.", repo.DlgMessageBox.Button0Info, new RecordItemIndex(7));
            repo.DlgMessageBox.Button0.Click();
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 2m to exist. Associated repository item: 'DlgDruckenDatei.Dateiname'", repo.DlgDruckenDatei.DateinameInfo, new ActionTimeout(120000), new RecordItemIndex(8));
            repo.DlgDruckenDatei.DateinameInfo.WaitForExists(120000);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Pfad_Datei_2015' with focus on 'DlgDruckenDatei.Dateiname'.", repo.DlgDruckenDatei.DateinameInfo, new RecordItemIndex(9));
            repo.DlgDruckenDatei.Dateiname.PressKeys(Pfad_Datei_2015);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'DlgDruckenDatei.PbOk' at Center.", repo.DlgDruckenDatei.PbOkInfo, new RecordItemIndex(10));
            repo.DlgDruckenDatei.PbOk.Click();
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 2m to exist. Associated repository item: 'DlgMessageBox.Journaldruck'", repo.DlgMessageBox.JournaldruckInfo, new ActionTimeout(120000), new RecordItemIndex(11));
            repo.DlgMessageBox.JournaldruckInfo.WaitForExists(120000);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='Der Journaldruck wurde beendet.') on item 'DlgMessageBox.LabelMeldungstext'.", repo.DlgMessageBox.LabelMeldungstextInfo, new RecordItemIndex(12));
            Validate.AttributeEqual(repo.DlgMessageBox.LabelMeldungstextInfo, "Text", "Der Journaldruck wurde beendet.");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'DlgMessageBox.Button0' at Center.", repo.DlgMessageBox.Button0Info, new RecordItemIndex(13));
            repo.DlgMessageBox.Button0.Click();
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
