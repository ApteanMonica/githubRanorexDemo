///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace B_EXOPV_005.Recordings_B_EXOPV
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Fehlerprotokoll_Pruefung_aufrufen recording.
    /// </summary>
    [TestModule("e832eec0-459c-4f07-8dc5-3837792179c2", ModuleType.Recording, 1)]
    public partial class Fehlerprotokoll_Pruefung_aufrufen : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::B_EXOPV_005.B_EXOPV_005Repository repository.
        /// </summary>
        public static global::B_EXOPV_005.B_EXOPV_005Repository repo = global::B_EXOPV_005.B_EXOPV_005Repository.Instance;

        static Fehlerprotokoll_Pruefung_aufrufen instance = new Fehlerprotokoll_Pruefung_aufrufen();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Fehlerprotokoll_Pruefung_aufrufen()
        {
            Fehlerprotokoll_Pruefung_Datei = "Fehlerprotokoll_b_exopv_005_pruef.txt";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Fehlerprotokoll_Pruefung_aufrufen Instance
        {
            get { return instance; }
        }

#region Variables

        string _Fehlerprotokoll_Pruefung_Datei;

        /// <summary>
        /// Gets or sets the value of variable Fehlerprotokoll_Pruefung_Datei.
        /// </summary>
        [TestVariable("b7ba6b5e-7dc3-48cf-a16c-d176932f3058")]
        public string Fehlerprotokoll_Pruefung_Datei
        {
            get { return _Fehlerprotokoll_Pruefung_Datei; }
            set { _Fehlerprotokoll_Pruefung_Datei = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Wait", "Waiting 1m to exist. Associated repository item: 'DlgMessageBox.FakturenPruefung'", repo.DlgMessageBox.FakturenPruefungInfo, new ActionTimeout(60000), new RecordItemIndex(0));
            repo.DlgMessageBox.FakturenPruefungInfo.WaitForExists(60000);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='Es wurden Fehler/Hinweise protokolliert!\r\n\r\nWollen Sie die Protokoll-Datei öffnen ? ') on item 'DlgMessageBox.LabelMeldungstext'.", repo.DlgMessageBox.LabelMeldungstextInfo, new RecordItemIndex(1));
            Validate.AttributeEqual(repo.DlgMessageBox.LabelMeldungstextInfo, "Text", "Es wurden Fehler/Hinweise protokolliert!\r\n\r\nWollen Sie die Protokoll-Datei öffnen ? ");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'DlgMessageBox.Button0' at Center.", repo.DlgMessageBox.Button0Info, new RecordItemIndex(2));
            repo.DlgMessageBox.Button0.Click();
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 2m to exist. Associated repository item: 'FehlerprotokollBExopv001TxtEditor.Fehlerprotokoll_TxtEditor'", repo.FehlerprotokollBExopv001TxtEditor.Fehlerprotokoll_TxtEditorInfo, new ActionTimeout(120000), new RecordItemIndex(3));
            repo.FehlerprotokollBExopv001TxtEditor.Fehlerprotokoll_TxtEditorInfo.WaitForExists(120000);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (Text>$Fehlerprotokoll_Pruefung_Datei) on item 'FehlerprotokollBExopv001TxtEditor.Fehlerprotokoll_TxtEditor'.", repo.FehlerprotokollBExopv001TxtEditor.Fehlerprotokoll_TxtEditorInfo, new RecordItemIndex(4));
            Validate.AttributeContains(repo.FehlerprotokollBExopv001TxtEditor.Fehlerprotokoll_TxtEditorInfo, "Text", Fehlerprotokoll_Pruefung_Datei);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
