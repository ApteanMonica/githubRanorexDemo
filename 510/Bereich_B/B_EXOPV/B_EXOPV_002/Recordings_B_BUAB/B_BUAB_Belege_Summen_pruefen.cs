///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace B_EXOPV_002.Recordings_B_BUAB
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The B_BUAB_Belege_Summen_pruefen recording.
    /// </summary>
    [TestModule("b9814473-ba4e-4618-91ed-6848f27d26ea", ModuleType.Recording, 1)]
    public partial class B_BUAB_Belege_Summen_pruefen : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::B_EXOPV_002.B_EXOPV_002Repository repository.
        /// </summary>
        public static global::B_EXOPV_002.B_EXOPV_002Repository repo = global::B_EXOPV_002.B_EXOPV_002Repository.Instance;

        static B_BUAB_Belege_Summen_pruefen instance = new B_BUAB_Belege_Summen_pruefen();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public B_BUAB_Belege_Summen_pruefen()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static B_BUAB_Belege_Summen_pruefen Instance
        {
            get { return instance; }
        }

#region Variables

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            // Summenzeile
            Report.Log(ReportLevel.Info, "Section", "Summenzeile", new RecordItemIndex(0));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='Brutto                4.600,00 S                 4.600,00 H         Netto                4.600,00 S                 4.000,00 H') on item 'TblB.Brutto600000S'.", repo.TblB.Brutto600000SInfo, new RecordItemIndex(1));
            Validate.AttributeEqual(repo.TblB.Brutto600000SInfo, "Text", "Brutto                4.600,00 S                 4.600,00 H         Netto                4.600,00 S                 4.000,00 H");
            
            // Summen bilden
            Report.Log(ReportLevel.Info, "Section", "Summen bilden", new RecordItemIndex(2));
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'TblB.Buchungszeilen_Tabelle.Zeile1.Row1Column0' at Center.", repo.TblB.Buchungszeilen_Tabelle.Zeile1.Row1Column0Info, new RecordItemIndex(3));
            repo.TblB.Buchungszeilen_Tabelle.Zeile1.Row1Column0.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{LShiftKey down}'.", new RecordItemIndex(4));
            Keyboard.Press("{LShiftKey down}");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'End' Press.", new RecordItemIndex(5));
            Keyboard.Press(System.Windows.Forms.Keys.End, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{LShiftKey up}'.", new RecordItemIndex(6));
            Keyboard.Press("{LShiftKey up}");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'TblB.PbCommonSumme' at Center.", repo.TblB.PbCommonSummeInfo, new RecordItemIndex(7));
            repo.TblB.PbCommonSumme.Click();
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 2m to exist. Associated repository item: 'TblB.Summenzeilen_Tabelle.Row0'", repo.TblB.Summenzeilen_Tabelle.Row0Info, new ActionTimeout(120000), new RecordItemIndex(8));
            repo.TblB.Summenzeilen_Tabelle.Row0Info.WaitForExists(120000);
            
            // ev. für bessere Sichtbarkeit wegen Ranorex-Fenster
            //Report.Log(ReportLevel.Info, "Mouse", "ev. für bessere Sichtbarkeit wegen Ranorex-Fenster\r\nMouse Left Click item 'TblB.PageRight' at Center.", repo.TblB.PageRightInfo, new RecordItemIndex(9));
            //repo.TblB.PageRight.Click();
            
            // Summen prüfen
            Report.Log(ReportLevel.Info, "Section", "Summen prüfen", new RecordItemIndex(10));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='Summe Soll') on item 'TblB.Summenzeilen_Tabelle.ColBelegnrRow0'.", repo.TblB.Summenzeilen_Tabelle.ColBelegnrRow0Info, new RecordItemIndex(11));
            Validate.AttributeEqual(repo.TblB.Summenzeilen_Tabelle.ColBelegnrRow0Info, "Text", "Summe Soll");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='4.600,00') on item 'TblB.Summenzeilen_Tabelle.ColBetragRow0'.", repo.TblB.Summenzeilen_Tabelle.ColBetragRow0Info, new RecordItemIndex(12));
            Validate.AttributeEqual(repo.TblB.Summenzeilen_Tabelle.ColBetragRow0Info, "Text", "4.600,00");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='S') on item 'TblB.Summenzeilen_Tabelle.ColSHRow0'.", repo.TblB.Summenzeilen_Tabelle.ColSHRow0Info, new RecordItemIndex(13));
            Validate.AttributeEqual(repo.TblB.Summenzeilen_Tabelle.ColSHRow0Info, "Text", "S");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='0,00') on item 'TblB.Summenzeilen_Tabelle.ColUstbetragRow0'.", repo.TblB.Summenzeilen_Tabelle.ColUstbetragRow0Info, new RecordItemIndex(14));
            Validate.AttributeEqual(repo.TblB.Summenzeilen_Tabelle.ColUstbetragRow0Info, "Text", "0,00");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='Summe Haben') on item 'TblB.Summenzeilen_Tabelle.ColBelegnrRow1'.", repo.TblB.Summenzeilen_Tabelle.ColBelegnrRow1Info, new RecordItemIndex(15));
            Validate.AttributeEqual(repo.TblB.Summenzeilen_Tabelle.ColBelegnrRow1Info, "Text", "Summe Haben");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='4.000,00') on item 'TblB.Summenzeilen_Tabelle.ColBetragRow1'.", repo.TblB.Summenzeilen_Tabelle.ColBetragRow1Info, new RecordItemIndex(16));
            Validate.AttributeEqual(repo.TblB.Summenzeilen_Tabelle.ColBetragRow1Info, "Text", "4.000,00");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='H') on item 'TblB.Summenzeilen_Tabelle.ColSHRow1'.", repo.TblB.Summenzeilen_Tabelle.ColSHRow1Info, new RecordItemIndex(17));
            Validate.AttributeEqual(repo.TblB.Summenzeilen_Tabelle.ColSHRow1Info, "Text", "H");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='600,00') on item 'TblB.Summenzeilen_Tabelle.ColUstbetragRow1'.", repo.TblB.Summenzeilen_Tabelle.ColUstbetragRow1Info, new RecordItemIndex(18));
            Validate.AttributeEqual(repo.TblB.Summenzeilen_Tabelle.ColUstbetragRow1Info, "Text", "600,00");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='Saldo') on item 'TblB.Summenzeilen_Tabelle.ColBelegnrRow2'.", repo.TblB.Summenzeilen_Tabelle.ColBelegnrRow2Info, new RecordItemIndex(19));
            Validate.AttributeEqual(repo.TblB.Summenzeilen_Tabelle.ColBelegnrRow2Info, "Text", "Saldo");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='600,00') on item 'TblB.Summenzeilen_Tabelle.ColBetragRow2'.", repo.TblB.Summenzeilen_Tabelle.ColBetragRow2Info, new RecordItemIndex(20));
            Validate.AttributeEqual(repo.TblB.Summenzeilen_Tabelle.ColBetragRow2Info, "Text", "600,00");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='S') on item 'TblB.Summenzeilen_Tabelle.ColSHRow2'.", repo.TblB.Summenzeilen_Tabelle.ColSHRow2Info, new RecordItemIndex(21));
            Validate.AttributeEqual(repo.TblB.Summenzeilen_Tabelle.ColSHRow2Info, "Text", "S");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='-600,00') on item 'TblB.Summenzeilen_Tabelle.ColUstbetragRow2'.", repo.TblB.Summenzeilen_Tabelle.ColUstbetragRow2Info, new RecordItemIndex(22));
            Validate.AttributeEqual(repo.TblB.Summenzeilen_Tabelle.ColUstbetragRow2Info, "Text", "-600,00");
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
