///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace B_EXOPV_003.Recordings_V_FIBU
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Korrekturbelege_v_fibu_ueberleiten recording.
    /// </summary>
    [TestModule("3e414e24-297c-4ce8-b10b-318e11bd8645", ModuleType.Recording, 1)]
    public partial class Korrekturbelege_v_fibu_ueberleiten : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::B_EXOPV_003.B_EXOPV_003Repository repository.
        /// </summary>
        public static global::B_EXOPV_003.B_EXOPV_003Repository repo = global::B_EXOPV_003.B_EXOPV_003Repository.Instance;

        static Korrekturbelege_v_fibu_ueberleiten instance = new Korrekturbelege_v_fibu_ueberleiten();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Korrekturbelege_v_fibu_ueberleiten()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Korrekturbelege_v_fibu_ueberleiten Instance
        {
            get { return instance; }
        }

#region Variables

        /// <summary>
        /// Gets or sets the value of variable Beleg1.
        /// </summary>
        [TestVariable("651d75e3-d7fd-41de-aa2f-0a40420d3bbc")]
        public string Beleg1
        {
            get { return repo.Beleg1; }
            set { repo.Beleg1 = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable Beleg2.
        /// </summary>
        [TestVariable("8261a08a-5eee-442f-b396-1263cda25e8a")]
        public string Beleg2
        {
            get { return repo.Beleg2; }
            set { repo.Beleg2 = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'TblFIBU.FlexGrid_mit_variablen_Belegnr.Column0_in_Zeile_mit_Beleg1' at Center.", repo.TblFIBU.FlexGrid_mit_variablen_Belegnr.Column0_in_Zeile_mit_Beleg1Info, new RecordItemIndex(0));
            repo.TblFIBU.FlexGrid_mit_variablen_Belegnr.Column0_in_Zeile_mit_Beleg1.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{LControlKey down}'.", new RecordItemIndex(1));
            Keyboard.Press("{LControlKey down}");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'TblFIBU.FlexGrid_mit_variablen_Belegnr.Column0_in_Zeile_mit_Beleg2' at Center.", repo.TblFIBU.FlexGrid_mit_variablen_Belegnr.Column0_in_Zeile_mit_Beleg2Info, new RecordItemIndex(2));
            repo.TblFIBU.FlexGrid_mit_variablen_Belegnr.Column0_in_Zeile_mit_Beleg2.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{LControlKey up}'.", new RecordItemIndex(3));
            Keyboard.Press("{LControlKey up}");
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 3s.", new RecordItemIndex(4));
            Delay.Duration(3000, false);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'TblFIBU.PbSpec1Ueberleiten' at Center.", repo.TblFIBU.PbSpec1UeberleitenInfo, new RecordItemIndex(5));
            repo.TblFIBU.PbSpec1Ueberleiten.Click();
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 1m to exist. Associated repository item: 'DlgMessageBox.FakturenPruefung'", repo.DlgMessageBox.FakturenPruefungInfo, new ActionTimeout(60000), new RecordItemIndex(6));
            repo.DlgMessageBox.FakturenPruefungInfo.WaitForExists(60000);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='Es sind bereits Sätze in der Schnittstelle (b_exop) vorhanden.\r\nMöchten Sie fortfahren und die bestehenden Einträge ergänzen?') on item 'DlgMessageBox.LabelMeldungstext'.", repo.DlgMessageBox.LabelMeldungstextInfo, new RecordItemIndex(7));
            Validate.AttributeEqual(repo.DlgMessageBox.LabelMeldungstextInfo, "Text", "Es sind bereits Sätze in der Schnittstelle (b_exop) vorhanden.\r\nMöchten Sie fortfahren und die bestehenden Einträge ergänzen?");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'DlgMessageBox.Button0' at Center.", repo.DlgMessageBox.Button0Info, new RecordItemIndex(8));
            repo.DlgMessageBox.Button0.Click();
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 3s.", new RecordItemIndex(9));
            Delay.Duration(3000, false);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='FIBU-Übernahme beendet.  2 Rechnung(en) übergeleitet !') on item 'DlgMessageBox.LabelMeldungstext'.", repo.DlgMessageBox.LabelMeldungstextInfo, new RecordItemIndex(10));
            Validate.AttributeEqual(repo.DlgMessageBox.LabelMeldungstextInfo, "Text", "FIBU-Übernahme beendet.  2 Rechnung(en) übergeleitet !");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'DlgMessageBox.Button0' at Center.", repo.DlgMessageBox.Button0Info, new RecordItemIndex(11));
            repo.DlgMessageBox.Button0.Click();
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
