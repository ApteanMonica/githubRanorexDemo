///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace B_EXOPV_003.Recordings_V_FIBU
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Korrekturbelege_v_fibu_pruefen recording.
    /// </summary>
    [TestModule("7a045ce6-6057-4027-bdb9-84a4aacf942b", ModuleType.Recording, 1)]
    public partial class Korrekturbelege_v_fibu_pruefen : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::B_EXOPV_003.B_EXOPV_003Repository repository.
        /// </summary>
        public static global::B_EXOPV_003.B_EXOPV_003Repository repo = global::B_EXOPV_003.B_EXOPV_003Repository.Instance;

        static Korrekturbelege_v_fibu_pruefen instance = new Korrekturbelege_v_fibu_pruefen();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Korrekturbelege_v_fibu_pruefen()
        {
            Beleg1 = "R20/0009";
            Beleg2 = "R20/0010";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Korrekturbelege_v_fibu_pruefen Instance
        {
            get { return instance; }
        }

#region Variables

        /// <summary>
        /// Gets or sets the value of variable Beleg1.
        /// </summary>
        [TestVariable("fd5c7d90-a3e1-40f4-a8f7-9972bbf228b7")]
        public string Beleg1
        {
            get { return repo.Beleg1; }
            set { repo.Beleg1 = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable Beleg2.
        /// </summary>
        [TestVariable("8261a08a-5eee-442f-b396-1263cda25e8a")]
        public string Beleg2
        {
            get { return repo.Beleg2; }
            set { repo.Beleg2 = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Beleg1' with focus on 'TblFIBU.RechNr'.", repo.TblFIBU.RechNrInfo, new RecordItemIndex(0));
            repo.TblFIBU.RechNr.PressKeys(Beleg1);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Tab' Press.", new RecordItemIndex(1));
            Keyboard.Press(System.Windows.Forms.Keys.Tab, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Beleg2' with focus on 'TblFIBU.Text'.", repo.TblFIBU.TextInfo, new RecordItemIndex(2));
            repo.TblFIBU.Text.PressKeys(Beleg2);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Tab' Press.", new RecordItemIndex(3));
            Keyboard.Press(System.Windows.Forms.Keys.Tab, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'TblFIBU.PbCommonLoad' at Center.", repo.TblFIBU.PbCommonLoadInfo, new RecordItemIndex(4));
            repo.TblFIBU.PbCommonLoad.Click();
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 1m to exist. Associated repository item: 'TblFIBU.FlexGrid_mit_variablen_Belegnr.row_Zeile_mit_Beleg1'", repo.TblFIBU.FlexGrid_mit_variablen_Belegnr.row_Zeile_mit_Beleg1Info, new ActionTimeout(60000), new RecordItemIndex(5));
            repo.TblFIBU.FlexGrid_mit_variablen_Belegnr.row_Zeile_mit_Beleg1Info.WaitForExists(60000);
            
            // Korrekur_Beleg_1
            Report.Log(ReportLevel.Info, "Section", "Korrekur_Beleg_1", new RecordItemIndex(6));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Beleg1) on item 'TblFIBU.FlexGrid_mit_variablen_Belegnr.ColRechNr_in_Zeile_mit_Beleg1'.", repo.TblFIBU.FlexGrid_mit_variablen_Belegnr.ColRechNr_in_Zeile_mit_Beleg1Info, new RecordItemIndex(7));
            Validate.AttributeEqual(repo.TblFIBU.FlexGrid_mit_variablen_Belegnr.ColRechNr_in_Zeile_mit_Beleg1Info, "Text", Beleg1);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='03.02.2020') on item 'TblFIBU.FlexGrid_mit_variablen_Belegnr.ColRechDatum_in_Zeile_mit_Beleg1'.", repo.TblFIBU.FlexGrid_mit_variablen_Belegnr.ColRechDatum_in_Zeile_mit_Beleg1Info, new RecordItemIndex(8));
            Validate.AttributeEqual(repo.TblFIBU.FlexGrid_mit_variablen_Belegnr.ColRechDatum_in_Zeile_mit_Beleg1Info, "Text", "03.02.2020");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='2.400,00') on item 'TblFIBU.FlexGrid_mit_variablen_Belegnr.ColRechBetrag_in_Zeile_mit_Beleg1'.", repo.TblFIBU.FlexGrid_mit_variablen_Belegnr.ColRechBetrag_in_Zeile_mit_Beleg1Info, new RecordItemIndex(9));
            Validate.AttributeEqual(repo.TblFIBU.FlexGrid_mit_variablen_Belegnr.ColRechBetrag_in_Zeile_mit_Beleg1Info, "Text", "2.400,00");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='2') on item 'TblFIBU.FlexGrid_mit_variablen_Belegnr.ColRechKzfibu_in_Zeile_mit_Beleg1'.", repo.TblFIBU.FlexGrid_mit_variablen_Belegnr.ColRechKzfibu_in_Zeile_mit_Beleg1Info, new RecordItemIndex(10));
            Validate.AttributeEqual(repo.TblFIBU.FlexGrid_mit_variablen_Belegnr.ColRechKzfibu_in_Zeile_mit_Beleg1Info, "Text", "2");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='4') on item 'TblFIBU.FlexGrid_mit_variablen_Belegnr.ColRechKzkorr_in_Zeile_mit_Beleg1'.", repo.TblFIBU.FlexGrid_mit_variablen_Belegnr.ColRechKzkorr_in_Zeile_mit_Beleg1Info, new RecordItemIndex(11));
            Validate.AttributeEqual(repo.TblFIBU.FlexGrid_mit_variablen_Belegnr.ColRechKzkorr_in_Zeile_mit_Beleg1Info, "Text", "4");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='0') on item 'TblFIBU.FlexGrid_mit_variablen_Belegnr.ColRechStatus_in_Zeile_mit_Beleg1'.", repo.TblFIBU.FlexGrid_mit_variablen_Belegnr.ColRechStatus_in_Zeile_mit_Beleg1Info, new RecordItemIndex(12));
            Validate.AttributeEqual(repo.TblFIBU.FlexGrid_mit_variablen_Belegnr.ColRechStatus_in_Zeile_mit_Beleg1Info, "Text", "0");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='9') on item 'TblFIBU.FlexGrid_mit_variablen_Belegnr.ColAufkKzfreigabe_in_Zeile_mit_Beleg1'.", repo.TblFIBU.FlexGrid_mit_variablen_Belegnr.ColAufkKzfreigabe_in_Zeile_mit_Beleg1Info, new RecordItemIndex(13));
            Validate.AttributeEqual(repo.TblFIBU.FlexGrid_mit_variablen_Belegnr.ColAufkKzfreigabe_in_Zeile_mit_Beleg1Info, "Text", "9");
            
            // Korrekur_Beleg_2
            Report.Log(ReportLevel.Info, "Section", "Korrekur_Beleg_2", new RecordItemIndex(14));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Beleg2) on item 'TblFIBU.FlexGrid_mit_variablen_Belegnr.ColRechNr_in_Zeile_mit_Beleg2'.", repo.TblFIBU.FlexGrid_mit_variablen_Belegnr.ColRechNr_in_Zeile_mit_Beleg2Info, new RecordItemIndex(15));
            Validate.AttributeEqual(repo.TblFIBU.FlexGrid_mit_variablen_Belegnr.ColRechNr_in_Zeile_mit_Beleg2Info, "Text", Beleg2);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='03.02.2020') on item 'TblFIBU.FlexGrid_mit_variablen_Belegnr.ColRechDatum_in_Zeile_mit_Beleg2'.", repo.TblFIBU.FlexGrid_mit_variablen_Belegnr.ColRechDatum_in_Zeile_mit_Beleg2Info, new RecordItemIndex(16));
            Validate.AttributeEqual(repo.TblFIBU.FlexGrid_mit_variablen_Belegnr.ColRechDatum_in_Zeile_mit_Beleg2Info, "Text", "03.02.2020");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='3.600,00') on item 'TblFIBU.FlexGrid_mit_variablen_Belegnr.ColRechBetrag_in_Zeile_mit_Beleg2'.", repo.TblFIBU.FlexGrid_mit_variablen_Belegnr.ColRechBetrag_in_Zeile_mit_Beleg2Info, new RecordItemIndex(17));
            Validate.AttributeEqual(repo.TblFIBU.FlexGrid_mit_variablen_Belegnr.ColRechBetrag_in_Zeile_mit_Beleg2Info, "Text", "3.600,00");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='2') on item 'TblFIBU.FlexGrid_mit_variablen_Belegnr.ColRechKzfibu_in_Zeile_mit_Beleg2'.", repo.TblFIBU.FlexGrid_mit_variablen_Belegnr.ColRechKzfibu_in_Zeile_mit_Beleg2Info, new RecordItemIndex(18));
            Validate.AttributeEqual(repo.TblFIBU.FlexGrid_mit_variablen_Belegnr.ColRechKzfibu_in_Zeile_mit_Beleg2Info, "Text", "2");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='4') on item 'TblFIBU.FlexGrid_mit_variablen_Belegnr.ColRechKzkorr_in_Zeile_mit_Beleg2'.", repo.TblFIBU.FlexGrid_mit_variablen_Belegnr.ColRechKzkorr_in_Zeile_mit_Beleg2Info, new RecordItemIndex(19));
            Validate.AttributeEqual(repo.TblFIBU.FlexGrid_mit_variablen_Belegnr.ColRechKzkorr_in_Zeile_mit_Beleg2Info, "Text", "4");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='0') on item 'TblFIBU.FlexGrid_mit_variablen_Belegnr.ColRechStatus_in_Zeile_mit_Beleg2'.", repo.TblFIBU.FlexGrid_mit_variablen_Belegnr.ColRechStatus_in_Zeile_mit_Beleg2Info, new RecordItemIndex(20));
            Validate.AttributeEqual(repo.TblFIBU.FlexGrid_mit_variablen_Belegnr.ColRechStatus_in_Zeile_mit_Beleg2Info, "Text", "0");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='9') on item 'TblFIBU.FlexGrid_mit_variablen_Belegnr.ColAufkKzfreigabe_in_Zeile_mit_Beleg2'.", repo.TblFIBU.FlexGrid_mit_variablen_Belegnr.ColAufkKzfreigabe_in_Zeile_mit_Beleg2Info, new RecordItemIndex(21));
            Validate.AttributeEqual(repo.TblFIBU.FlexGrid_mit_variablen_Belegnr.ColAufkKzfreigabe_in_Zeile_mit_Beleg2Info, "Text", "9");
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
