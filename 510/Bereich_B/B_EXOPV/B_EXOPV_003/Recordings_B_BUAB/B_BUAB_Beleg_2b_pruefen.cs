///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace B_EXOPV_003.Recordings_B_BUAB
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The B_BUAB_Beleg_2b_pruefen recording.
    /// </summary>
    [TestModule("974ffd29-452a-4f47-a1b9-4d46b5152241", ModuleType.Recording, 1)]
    public partial class B_BUAB_Beleg_2b_pruefen : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::B_EXOPV_003.B_EXOPV_003Repository repository.
        /// </summary>
        public static global::B_EXOPV_003.B_EXOPV_003Repository repo = global::B_EXOPV_003.B_EXOPV_003Repository.Instance;

        static B_BUAB_Beleg_2b_pruefen instance = new B_BUAB_Beleg_2b_pruefen();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public B_BUAB_Beleg_2b_pruefen()
        {
            Keybel_V_3 = "";
            Beleg2 = "R20/0010";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static B_BUAB_Beleg_2b_pruefen Instance
        {
            get { return instance; }
        }

#region Variables

        string _Keybel_V_3;

        /// <summary>
        /// Gets or sets the value of variable Keybel_V_3.
        /// </summary>
        [TestVariable("00f0853b-3b63-44b8-acb0-3e575d86c114")]
        public string Keybel_V_3
        {
            get { return _Keybel_V_3; }
            set { _Keybel_V_3 = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable Beleg2.
        /// </summary>
        [TestVariable("13ae4842-2b43-4587-931e-6eab85310c5c")]
        public string Beleg2
        {
            get { return repo.Beleg2; }
            set { repo.Beleg2 = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            // Zeile_7 Beleg 2b verbuchter Korrekurbeleg Beleg 2 aus Verkaufs-Überleitung
            Report.Log(ReportLevel.Info, "Section", "Zeile_7 Beleg 2b verbuchter Korrekurbeleg Beleg 2 aus Verkaufs-Überleitung", new RecordItemIndex(0));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Keybel_V_3) on item 'TblB.Buchungszeilen_Tabelle.Zeile7.ColKeybelRow7'.", repo.TblB.Buchungszeilen_Tabelle.Zeile7.ColKeybelRow7Info, new RecordItemIndex(1));
            Validate.AttributeEqual(repo.TblB.Buchungszeilen_Tabelle.Zeile7.ColKeybelRow7Info, "Text", Keybel_V_3);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Beleg2) on item 'TblB.Buchungszeilen_Tabelle.Zeile7.ColBelegnrRow7'.", repo.TblB.Buchungszeilen_Tabelle.Zeile7.ColBelegnrRow7Info, new RecordItemIndex(2));
            Validate.AttributeEqual(repo.TblB.Buchungszeilen_Tabelle.Zeile7.ColBelegnrRow7Info, "Text", Beleg2);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='3.600,00') on item 'TblB.Buchungszeilen_Tabelle.Zeile7.ColBetragRow7'.", repo.TblB.Buchungszeilen_Tabelle.Zeile7.ColBetragRow7Info, new RecordItemIndex(3));
            Validate.AttributeEqual(repo.TblB.Buchungszeilen_Tabelle.Zeile7.ColBetragRow7Info, "Text", "3.600,00");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='30') on item 'TblB.Buchungszeilen_Tabelle.Zeile7.ColCd1Row7'.", repo.TblB.Buchungszeilen_Tabelle.Zeile7.ColCd1Row7Info, new RecordItemIndex(4));
            Validate.AttributeEqual(repo.TblB.Buchungszeilen_Tabelle.Zeile7.ColCd1Row7Info, "Text", "30");
            
            // Zeile_8 Beleg 2b Pos. 2 verbuchter Korrekurbeleg Beleg 2 aus Verkaufs-Überleitung
            Report.Log(ReportLevel.Info, "Section", "Zeile_8 Beleg 2b Pos. 2 verbuchter Korrekurbeleg Beleg 2 aus Verkaufs-Überleitung", new RecordItemIndex(5));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='2.000,00') on item 'TblB.Buchungszeilen_Tabelle.Zeile8.ColBetragRow8'.", repo.TblB.Buchungszeilen_Tabelle.Zeile8.ColBetragRow8Info, new RecordItemIndex(6));
            Validate.AttributeEqual(repo.TblB.Buchungszeilen_Tabelle.Zeile8.ColBetragRow8Info, "Text", "2.000,00");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='M20') on item 'TblB.Buchungszeilen_Tabelle.Zeile8.ColUstcdRow8'.", repo.TblB.Buchungszeilen_Tabelle.Zeile8.ColUstcdRow8Info, new RecordItemIndex(7));
            Validate.AttributeEqual(repo.TblB.Buchungszeilen_Tabelle.Zeile8.ColUstcdRow8Info, "Text", "M20");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='400,00') on item 'TblB.Buchungszeilen_Tabelle.Zeile8.ColUstbetragRow8'.", repo.TblB.Buchungszeilen_Tabelle.Zeile8.ColUstbetragRow8Info, new RecordItemIndex(8));
            Validate.AttributeEqual(repo.TblB.Buchungszeilen_Tabelle.Zeile8.ColUstbetragRow8Info, "Text", "400,00");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='2020-2') on item 'TblB.Buchungszeilen_Tabelle.Zeile8.ColUvaRow8'.", repo.TblB.Buchungszeilen_Tabelle.Zeile8.ColUvaRow8Info, new RecordItemIndex(9));
            Validate.AttributeEqual(repo.TblB.Buchungszeilen_Tabelle.Zeile8.ColUvaRow8Info, "Text", "2020-2");
            
            // Zeile_9 Beleg 2b Pos. 3 verbuchter Korrekurbeleg Beleg 2 aus Verkaufs-Überleitung
            Report.Log(ReportLevel.Info, "Section", "Zeile_9 Beleg 2b Pos. 3 verbuchter Korrekurbeleg Beleg 2 aus Verkaufs-Überleitung", new RecordItemIndex(10));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='1.000,00') on item 'TblB.Buchungszeilen_Tabelle.Zeile9.ColBetragRow9'.", repo.TblB.Buchungszeilen_Tabelle.Zeile9.ColBetragRow9Info, new RecordItemIndex(11));
            Validate.AttributeEqual(repo.TblB.Buchungszeilen_Tabelle.Zeile9.ColBetragRow9Info, "Text", "1.000,00");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='M20') on item 'TblB.Buchungszeilen_Tabelle.Zeile9.ColUstcdRow9'.", repo.TblB.Buchungszeilen_Tabelle.Zeile9.ColUstcdRow9Info, new RecordItemIndex(12));
            Validate.AttributeEqual(repo.TblB.Buchungszeilen_Tabelle.Zeile9.ColUstcdRow9Info, "Text", "M20");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='200,00') on item 'TblB.Buchungszeilen_Tabelle.Zeile9.ColUstbetragRow9'.", repo.TblB.Buchungszeilen_Tabelle.Zeile9.ColUstbetragRow9Info, new RecordItemIndex(13));
            Validate.AttributeEqual(repo.TblB.Buchungszeilen_Tabelle.Zeile9.ColUstbetragRow9Info, "Text", "200,00");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='2020-2') on item 'TblB.Buchungszeilen_Tabelle.Zeile9.ColUvaRow9'.", repo.TblB.Buchungszeilen_Tabelle.Zeile9.ColUvaRow9Info, new RecordItemIndex(14));
            Validate.AttributeEqual(repo.TblB.Buchungszeilen_Tabelle.Zeile9.ColUvaRow9Info, "Text", "2020-2");
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
