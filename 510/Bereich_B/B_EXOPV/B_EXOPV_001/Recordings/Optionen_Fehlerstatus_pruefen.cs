///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace B_EXOPV_001.Recordings
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Optionen_Fehlerstatus_pruefen recording.
    /// </summary>
    [TestModule("255bc42e-7e0e-4421-81c0-9b206029191c", ModuleType.Recording, 1)]
    public partial class Optionen_Fehlerstatus_pruefen : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::B_EXOPV_001.B_EXOPV_001Repository repository.
        /// </summary>
        public static global::B_EXOPV_001.B_EXOPV_001Repository repo = global::B_EXOPV_001.B_EXOPV_001Repository.Instance;

        static Optionen_Fehlerstatus_pruefen instance = new Optionen_Fehlerstatus_pruefen();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Optionen_Fehlerstatus_pruefen()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Optionen_Fehlerstatus_pruefen Instance
        {
            get { return instance; }
        }

#region Variables

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Form100ExterneBuchungenVerbuchen.PbOptionenOptionen' at Center.", repo.Form100ExterneBuchungenVerbuchen.PbOptionenOptionenInfo, new RecordItemIndex(0));
            repo.Form100ExterneBuchungenVerbuchen.PbOptionenOptionen.Click();
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 2m to exist. Associated repository item: 'DlgOptionenParameter.TitleBar100Optionen'", repo.DlgOptionenParameter.TitleBar100OptionenInfo, new ActionTimeout(120000), new RecordItemIndex(1));
            repo.DlgOptionenParameter.TitleBar100OptionenInfo.WaitForExists(120000);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Checked='True') on item 'DlgOptionenParameter.TpName0.CbFehlerstatus'.", repo.DlgOptionenParameter.TpName0.CbFehlerstatusInfo, new RecordItemIndex(2));
            Validate.AttributeEqual(repo.DlgOptionenParameter.TpName0.CbFehlerstatusInfo, "Checked", "True");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Checked='False') on item 'DlgOptionenParameter.TpName0.CbFehlerkonto'.", repo.DlgOptionenParameter.TpName0.CbFehlerkontoInfo, new RecordItemIndex(3));
            Validate.AttributeEqual(repo.DlgOptionenParameter.TpName0.CbFehlerkontoInfo, "Checked", "False");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Checked='False') on item 'DlgOptionenParameter.TpName0.CbLoeschen'.", repo.DlgOptionenParameter.TpName0.CbLoeschenInfo, new RecordItemIndex(4));
            Validate.AttributeEqual(repo.DlgOptionenParameter.TpName0.CbLoeschenInfo, "Checked", "False");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Checked='False') on item 'DlgOptionenParameter.TpName0.CbStornoLoeschen'.", repo.DlgOptionenParameter.TpName0.CbStornoLoeschenInfo, new RecordItemIndex(5));
            Validate.AttributeEqual(repo.DlgOptionenParameter.TpName0.CbStornoLoeschenInfo, "Checked", "False");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Alt+F4' Press with focus on 'DlgOptionenParameter.TitleBar100Optionen'.", repo.DlgOptionenParameter.TitleBar100OptionenInfo, new RecordItemIndex(6));
            Keyboard.PrepareFocus(repo.DlgOptionenParameter.TitleBar100Optionen);
            Keyboard.Press(System.Windows.Forms.Keys.F4 | System.Windows.Forms.Keys.Alt, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
