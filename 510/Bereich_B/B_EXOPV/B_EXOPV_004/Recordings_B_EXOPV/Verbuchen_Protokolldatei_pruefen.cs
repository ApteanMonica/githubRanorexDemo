///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace B_EXOPV_004.Recordings_B_EXOPV
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Verbuchen_Protokolldatei_pruefen recording.
    /// </summary>
    [TestModule("cab5a3cd-9aa9-4106-b1fa-ea5a27820c06", ModuleType.Recording, 1)]
    public partial class Verbuchen_Protokolldatei_pruefen : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::B_EXOPV_004.B_EXOPV_004Repository repository.
        /// </summary>
        public static global::B_EXOPV_004.B_EXOPV_004Repository repo = global::B_EXOPV_004.B_EXOPV_004Repository.Instance;

        static Verbuchen_Protokolldatei_pruefen instance = new Verbuchen_Protokolldatei_pruefen();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Verbuchen_Protokolldatei_pruefen()
        {
            Fehlerprotokoll_Verbuchung_Datei = "Fehlerprotokoll_b_exopv_004_verbuch.txt";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Verbuchen_Protokolldatei_pruefen Instance
        {
            get { return instance; }
        }

#region Variables

        string _Fehlerprotokoll_Verbuchung_Datei;

        /// <summary>
        /// Gets or sets the value of variable Fehlerprotokoll_Verbuchung_Datei.
        /// </summary>
        [TestVariable("b9f1933d-e17d-4b83-92f3-e73986c8de66")]
        public string Fehlerprotokoll_Verbuchung_Datei
        {
            get { return _Fehlerprotokoll_Verbuchung_Datei; }
            set { _Fehlerprotokoll_Verbuchung_Datei = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Wait", "Waiting 4m to exist. Associated repository item: 'DlgMessageBox.FakturenPruefung'", repo.DlgMessageBox.FakturenPruefungInfo, new ActionTimeout(240000), new RecordItemIndex(0));
            repo.DlgMessageBox.FakturenPruefungInfo.WaitForExists(240000);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (Text>'Fakturen-Verbuchung') on item 'DlgMessageBox.FakturenPruefung'.", repo.DlgMessageBox.FakturenPruefungInfo, new RecordItemIndex(1));
            Validate.AttributeContains(repo.DlgMessageBox.FakturenPruefungInfo, "Text", "Fakturen-Verbuchung");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (Text>'4 Belege wurden verbucht  !\r\n\r\nEs wurden Fehler/Hinweise protokolliert!\r\nWollen Sie die Protokoll-Datei öffnen ? ') on item 'DlgMessageBox.LabelMeldungstext'.", repo.DlgMessageBox.LabelMeldungstextInfo, new RecordItemIndex(2));
            Validate.AttributeContains(repo.DlgMessageBox.LabelMeldungstextInfo, "Text", "4 Belege wurden verbucht  !\r\n\r\nEs wurden Fehler/Hinweise protokolliert!\r\nWollen Sie die Protokoll-Datei öffnen ? ");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'DlgMessageBox.Button0' at Center.", repo.DlgMessageBox.Button0Info, new RecordItemIndex(3));
            repo.DlgMessageBox.Button0.Click();
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 2m to exist. Associated repository item: 'Fehlerprotokoll_Editor.Fehlerprotokoll_Editor'", repo.Fehlerprotokoll_Editor.Fehlerprotokoll_EditorInfo, new ActionTimeout(120000), new RecordItemIndex(4));
            repo.Fehlerprotokoll_Editor.Fehlerprotokoll_EditorInfo.WaitForExists(120000);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (Text>$Fehlerprotokoll_Verbuchung_Datei) on item 'Fehlerprotokoll_Editor.Fehlerprotokoll_Editor'.", repo.Fehlerprotokoll_Editor.Fehlerprotokoll_EditorInfo, new RecordItemIndex(5));
            Validate.AttributeContains(repo.Fehlerprotokoll_Editor.Fehlerprotokoll_EditorInfo, "Text", Fehlerprotokoll_Verbuchung_Datei);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (Text>'[100] Starte Verbuchung B_EXOPV_004') on item 'Fehlerprotokoll_Editor.Text15'.", repo.Fehlerprotokoll_Editor.Text15Info, new RecordItemIndex(6));
            Validate.AttributeContains(repo.Fehlerprotokoll_Editor.Text15Info, "Text", "[100] Starte Verbuchung B_EXOPV_004");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (Text>'Exop: 24\tBeleg: ER_03_B_EXOPV_004: UVA - Jahr/Monat 2018 /5 schon abgeschlossen!') on item 'Fehlerprotokoll_Editor.Text15'.", repo.Fehlerprotokoll_Editor.Text15Info, new RecordItemIndex(7));
            Validate.AttributeContains(repo.Fehlerprotokoll_Editor.Text15Info, "Text", "Exop: 24\tBeleg: ER_03_B_EXOPV_004: UVA - Jahr/Monat 2018 /5 schon abgeschlossen!");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (Text>'Exop: 25\tBeleg: ER_04_B_EXOPV_004: Jahr/Monat außerhalb erlaubter Perioden!') on item 'Fehlerprotokoll_Editor.Text15'.", repo.Fehlerprotokoll_Editor.Text15Info, new RecordItemIndex(8));
            Validate.AttributeContains(repo.Fehlerprotokoll_Editor.Text15Info, "Text", "Exop: 25\tBeleg: ER_04_B_EXOPV_004: Jahr/Monat außerhalb erlaubter Perioden!");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (Text>'Exop: 25\tBeleg: ER_04_B_EXOPV_004: UVA - Jahr/Monat 2018 /5 schon abgeschlossen!') on item 'Fehlerprotokoll_Editor.Text15'.", repo.Fehlerprotokoll_Editor.Text15Info, new RecordItemIndex(9));
            Validate.AttributeContains(repo.Fehlerprotokoll_Editor.Text15Info, "Text", "Exop: 25\tBeleg: ER_04_B_EXOPV_004: UVA - Jahr/Monat 2018 /5 schon abgeschlossen!");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (Text>'Fehlerhafte Zeilen wurden mit Status >F< in Schnittstelle gespeichert') on item 'Fehlerprotokoll_Editor.Text15'.", repo.Fehlerprotokoll_Editor.Text15Info, new RecordItemIndex(10));
            Validate.AttributeContains(repo.Fehlerprotokoll_Editor.Text15Info, "Text", "Fehlerhafte Zeilen wurden mit Status >F< in Schnittstelle gespeichert");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (Text>'[100] Beende Verbuchung B_EXOPV_004') on item 'Fehlerprotokoll_Editor.Text15'.", repo.Fehlerprotokoll_Editor.Text15Info, new RecordItemIndex(11));
            Validate.AttributeContains(repo.Fehlerprotokoll_Editor.Text15Info, "Text", "[100] Beende Verbuchung B_EXOPV_004");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (Text>'Anzahl Buchungen gelesen  6') on item 'Fehlerprotokoll_Editor.Text15'.", repo.Fehlerprotokoll_Editor.Text15Info, new RecordItemIndex(12));
            Validate.AttributeContains(repo.Fehlerprotokoll_Editor.Text15Info, "Text", "Anzahl Buchungen gelesen  6");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (Text>'Anzahl Buchungen verbucht 4  Summe verbucht: 16800,00') on item 'Fehlerprotokoll_Editor.Text15'.", repo.Fehlerprotokoll_Editor.Text15Info, new RecordItemIndex(13));
            Validate.AttributeContains(repo.Fehlerprotokoll_Editor.Text15Info, "Text", "Anzahl Buchungen verbucht 4  Summe verbucht: 16800,00");
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
