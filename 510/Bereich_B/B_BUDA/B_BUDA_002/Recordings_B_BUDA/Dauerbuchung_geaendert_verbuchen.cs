///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace B_BUDA_002.Recordings_B_BUDA
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Dauerbuchung_geaendert_verbuchen recording.
    /// </summary>
    [TestModule("ca3454ce-1c7e-46b9-b47e-5a8c4fc0a74a", ModuleType.Recording, 1)]
    public partial class Dauerbuchung_geaendert_verbuchen : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::B_BUDA_002.B_BUDA_002Repository repository.
        /// </summary>
        public static global::B_BUDA_002.B_BUDA_002Repository repo = global::B_BUDA_002.B_BUDA_002Repository.Instance;

        static Dauerbuchung_geaendert_verbuchen instance = new Dauerbuchung_geaendert_verbuchen();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Dauerbuchung_geaendert_verbuchen()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Dauerbuchung_geaendert_verbuchen Instance
        {
            get { return instance; }
        }

#region Variables

        /// <summary>
        /// Gets or sets the value of variable Beleg_NR.
        /// </summary>
        [TestVariable("f725085c-3233-4094-a5ad-efcf5fdb606e")]
        public string Beleg_NR
        {
            get { return repo.Beleg_NR; }
            set { repo.Beleg_NR = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Wait", "Waiting 2m to exist. Associated repository item: 'TblDaBu.TitleBar100Dauerbuchungen'", repo.TblDaBu.TitleBar100DauerbuchungenInfo, new ActionTimeout(120000), new RecordItemIndex(0));
            repo.TblDaBu.TitleBar100DauerbuchungenInfo.WaitForExists(120000);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'TblDaBu.TitleBar100Dauerbuchungen'.", repo.TblDaBu.TitleBar100DauerbuchungenInfo, new RecordItemIndex(1));
            Validate.Exists(repo.TblDaBu.TitleBar100DauerbuchungenInfo);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'TblDaBu.ChildTableWindow.Column0_in_Zeile_mit_ColText_B_BUDA_002' at Center.", repo.TblDaBu.ChildTableWindow.Column0_in_Zeile_mit_ColText_B_BUDA_002Info, new RecordItemIndex(2));
            repo.TblDaBu.ChildTableWindow.Column0_in_Zeile_mit_ColText_B_BUDA_002.Click();
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'TblDaBu.PbToolBarItemsBookIt' at Center.", repo.TblDaBu.PbToolBarItemsBookItInfo, new RecordItemIndex(3));
            repo.TblDaBu.PbToolBarItemsBookIt.Click();
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 2m to exist. Associated repository item: 'DlgMessageBox.LabelMeldungstext'", repo.DlgMessageBox.LabelMeldungstextInfo, new ActionTimeout(120000), new RecordItemIndex(4));
            repo.DlgMessageBox.LabelMeldungstextInfo.WaitForExists(120000);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='Es sind Buchungen markiert!?\r\n\r\nJa: Nur markierte Buchungen verarbeiten?\r\nNein: Alle Buchungen verarbeiten?') on item 'DlgMessageBox.LabelMeldungstext'.", repo.DlgMessageBox.LabelMeldungstextInfo, new RecordItemIndex(5));
            Validate.AttributeEqual(repo.DlgMessageBox.LabelMeldungstextInfo, "Text", "Es sind Buchungen markiert!?\r\n\r\nJa: Nur markierte Buchungen verarbeiten?\r\nNein: Alle Buchungen verarbeiten?");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'DlgMessageBox.Button0' at Center.", repo.DlgMessageBox.Button0Info, new RecordItemIndex(6));
            repo.DlgMessageBox.Button0.Click();
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (Text>'303091\r\nBeleg:\tB_BUDA_002-0\r\nBetrag: \t2188,00 EUR\r\n\r\nKein Eintrag im ER-BUCH vorhanden!\r\n\r\nSoll Dauerbuchung ohne ER-Buch-Buchung trotzdem durchgeführt werden?\r\n') on item 'DlgMessageBox.LabelMeldungstext'.", repo.DlgMessageBox.LabelMeldungstextInfo, new RecordItemIndex(7));
            //Validate.AttributeContains(repo.DlgMessageBox.LabelMeldungstextInfo, "Text", "303091\r\nBeleg:\tB_BUDA_002-0\r\nBetrag: \t2188,00 EUR\r\n\r\nKein Eintrag im ER-BUCH vorhanden!\r\n\r\nSoll Dauerbuchung ohne ER-Buch-Buchung trotzdem durchgeführt werden?\r\n");
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'DlgMessageBox.Button0' at Center.", repo.DlgMessageBox.Button0Info, new RecordItemIndex(8));
            //repo.DlgMessageBox.Button0.Click();
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 2m to exist. Associated repository item: 'DlgMessageBox.LabelMeldungstext'", repo.DlgMessageBox.LabelMeldungstextInfo, new ActionTimeout(120000), new RecordItemIndex(9));
            repo.DlgMessageBox.LabelMeldungstextInfo.WaitForExists(120000);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='Firma:\t100\r\nLieferant:\t303091\r\nBeleg:\tB_BUDA_002-0\r\nBetrag: \t2188,00 EUR\r\n\r\nKein Eintrag im ER-BUCH vorhanden!\r\n\r\nSoll Dauerbuchung ohne ER-Buch-Buchung trotzdem durchgeführt werden?\r\n') on item 'DlgMessageBox.LabelMeldungstext'.", repo.DlgMessageBox.LabelMeldungstextInfo, new RecordItemIndex(10));
            Validate.AttributeEqual(repo.DlgMessageBox.LabelMeldungstextInfo, "Text", "Firma:\t100\r\nLieferant:\t303091\r\nBeleg:\tB_BUDA_002-0\r\nBetrag: \t2188,00 EUR\r\n\r\nKein Eintrag im ER-BUCH vorhanden!\r\n\r\nSoll Dauerbuchung ohne ER-Buch-Buchung trotzdem durchgeführt werden?\r\n");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'DlgMessageBox.Button0' at Center.", repo.DlgMessageBox.Button0Info, new RecordItemIndex(11));
            repo.DlgMessageBox.Button0.Click();
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 2m to exist. Associated repository item: 'DlgBuchung.TitleBar100VerbuchenDerDauerbuchun'", repo.DlgBuchung.TitleBar100VerbuchenDerDauerbuchunInfo, new ActionTimeout(120000), new RecordItemIndex(12));
            repo.DlgBuchung.TitleBar100VerbuchenDerDauerbuchunInfo.WaitForExists(120000);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (Text>'Verbuchen der Dauerbuchungen - ( nur markierte DABU´s ) ') on item 'DlgBuchung.TitleBar100VerbuchenDerDauerbuchun'.", repo.DlgBuchung.TitleBar100VerbuchenDerDauerbuchunInfo, new RecordItemIndex(13));
            Validate.AttributeContains(repo.DlgBuchung.TitleBar100VerbuchenDerDauerbuchunInfo, "Text", "Verbuchen der Dauerbuchungen - ( nur markierte DABU´s ) ");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '01.02.2022' with focus on 'DlgBuchung.VerbucheBis'.", repo.DlgBuchung.VerbucheBisInfo, new RecordItemIndex(14));
            repo.DlgBuchung.VerbucheBis.PressKeys("01.02.2022");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Tab' Press with focus on 'DlgBuchung.VerbucheBis'.", repo.DlgBuchung.VerbucheBisInfo, new RecordItemIndex(15));
            Keyboard.PrepareFocus(repo.DlgBuchung.VerbucheBis);
            Keyboard.Press(System.Windows.Forms.Keys.Tab, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'DlgBuchung.PbBookIt' at Center.", repo.DlgBuchung.PbBookItInfo, new RecordItemIndex(16));
            repo.DlgBuchung.PbBookIt.Click();
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 2m to exist. Associated repository item: 'DlgMessageBox.LabelMeldungstext'", repo.DlgMessageBox.LabelMeldungstextInfo, new ActionTimeout(120000), new RecordItemIndex(17));
            repo.DlgMessageBox.LabelMeldungstextInfo.WaitForExists(120000);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='Verbuchung beendet!') on item 'DlgMessageBox.LabelMeldungstext'.", repo.DlgMessageBox.LabelMeldungstextInfo, new RecordItemIndex(18));
            Validate.AttributeEqual(repo.DlgMessageBox.LabelMeldungstextInfo, "Text", "Verbuchung beendet!");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'DlgMessageBox.Button0' at Center.", repo.DlgMessageBox.Button0Info, new RecordItemIndex(19));
            repo.DlgMessageBox.Button0.Click();
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 2m to exist. Associated repository item: 'DlgBuchung.Row1'", repo.DlgBuchung.Row1Info, new ActionTimeout(120000), new RecordItemIndex(20));
            repo.DlgBuchung.Row1Info.WaitForExists(120000);
            
            // Regex mit ... statt keybel
            Report.Log(ReportLevel.Info, "Validation", "Regex mit ... statt keybel\r\nValidating AttributeRegex (Text~'B_BUDA_002-0\tB_BUDA_002\t01.01.2022\t...\tGebucht\t2.388,00') on item 'DlgBuchung.Row1'.", repo.DlgBuchung.Row1Info, new RecordItemIndex(21));
            Validate.AttributeRegex(repo.DlgBuchung.Row1Info, "Text", new Regex("B_BUDA_002-0\tB_BUDA_002\t01.01.2022\t...\tGebucht\t2.388,00"));
            
            // Regex mit ... statt keybel
            Report.Log(ReportLevel.Info, "Validation", "Regex mit ... statt keybel\r\nValidating AttributeRegex (Text~'B_BUDA_002-0\tB_BUDA_002\t01.02.2022\t...\tGebucht\t2.388,00') on item 'DlgBuchung.Row2'.", repo.DlgBuchung.Row2Info, new RecordItemIndex(22));
            Validate.AttributeRegex(repo.DlgBuchung.Row2Info, "Text", new Regex("B_BUDA_002-0\tB_BUDA_002\t01.02.2022\t...\tGebucht\t2.388,00"));
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
