///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace B_BUAB_006.Recordings
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Existierende_Beleg_aendern recording.
    /// </summary>
    [TestModule("80321e02-a5a2-4d5a-a143-21ebaf95bd0c", ModuleType.Recording, 1)]
    public partial class Existierende_Beleg_aendern : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::B_BUAB_006.B_BUAB_006Repository repository.
        /// </summary>
        public static global::B_BUAB_006.B_BUAB_006Repository repo = global::B_BUAB_006.B_BUAB_006Repository.Instance;

        static Existierende_Beleg_aendern instance = new Existierende_Beleg_aendern();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Existierende_Beleg_aendern()
        {
            alte_Wert = "";
            existierende_Beleg_aendern1 = "BA_2030001_2020_2";
            text_beleg = "Belegnummer BA_2030001_2020_2 existiert bereits!";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Existierende_Beleg_aendern Instance
        {
            get { return instance; }
        }

#region Variables

        string _alte_Wert;

        /// <summary>
        /// Gets or sets the value of variable alte_Wert.
        /// </summary>
        [TestVariable("53deb41f-5c3b-47a2-a6ae-0d37bddd6e48")]
        public string alte_Wert
        {
            get { return _alte_Wert; }
            set { _alte_Wert = value; }
        }

        string _existierende_Beleg_aendern1;

        /// <summary>
        /// Gets or sets the value of variable existierende_Beleg_aendern1.
        /// </summary>
        [TestVariable("ab952236-7f1e-46ff-ad2f-ad3251dc21c5")]
        public string existierende_Beleg_aendern1
        {
            get { return _existierende_Beleg_aendern1; }
            set { _existierende_Beleg_aendern1 = value; }
        }

        string _text_beleg;

        /// <summary>
        /// Gets or sets the value of variable text_beleg.
        /// </summary>
        [TestVariable("01b22ed1-1ba4-4aff-9b45-101384f6a02f")]
        public string text_beleg
        {
            get { return _text_beleg; }
            set { _text_beleg = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'TblB1.PbExtrasAendern' at Center.", repo.TblB1.PbExtrasAendernInfo, new RecordItemIndex(0));
            repo.TblB1.PbExtrasAendern.Click();
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'BBUAB.BelegAendern' at Center.", repo.BBUAB.BelegAendernInfo, new RecordItemIndex(1));
            repo.BBUAB.BelegAendern.Click();
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'Text' from item 'DlgAEndern.NeueWerte' and assigning its value to variable 'alte_Wert'.", repo.DlgAEndern.NeueWerteInfo, new RecordItemIndex(2));
            alte_Wert = repo.DlgAEndern.NeueWerte.Element.GetAttributeValueText("Text");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$existierende_Beleg_aendern1' with focus on 'DlgAEndern.NeueWerte'.", repo.DlgAEndern.NeueWerteInfo, new RecordItemIndex(3));
            repo.DlgAEndern.NeueWerte.PressKeys(existierende_Beleg_aendern1);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Tab' Press with focus on 'DlgAEndern.NeueWerte'.", repo.DlgAEndern.NeueWerteInfo, new RecordItemIndex(4));
            Keyboard.PrepareFocus(repo.DlgAEndern.NeueWerte);
            Keyboard.Press(System.Windows.Forms.Keys.Tab, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$existierende_Beleg_aendern1) on item 'DlgAEndern.NeueWerte'.", repo.DlgAEndern.NeueWerteInfo, new RecordItemIndex(5));
            Validate.AttributeEqual(repo.DlgAEndern.NeueWerteInfo, "Text", existierende_Beleg_aendern1);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$text_beleg) on item 'DlgMessageBox.LabelMeldungstext'.", repo.DlgMessageBox.LabelMeldungstextInfo, new RecordItemIndex(6));
            Validate.AttributeEqual(repo.DlgMessageBox.LabelMeldungstextInfo, "Text", text_beleg);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'DlgMessageBox.Button0' at Center.", repo.DlgMessageBox.Button0Info, new RecordItemIndex(7));
            repo.DlgMessageBox.Button0.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$alte_Wert' with focus on 'DlgAEndern.NeueWerte'.", repo.DlgAEndern.NeueWerteInfo, new RecordItemIndex(8));
            repo.DlgAEndern.NeueWerte.PressKeys(alte_Wert);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'DlgAEndern.PbOK' at Center.", repo.DlgAEndern.PbOKInfo, new RecordItemIndex(9));
            repo.DlgAEndern.PbOK.Click();
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
