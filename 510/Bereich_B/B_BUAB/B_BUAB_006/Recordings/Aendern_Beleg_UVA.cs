///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace B_BUAB_006.Recordings
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Aendern_Beleg_UVA recording.
    /// </summary>
    [TestModule("b73c90ba-8767-4211-b480-a60ea9eb7c81", ModuleType.Recording, 1)]
    public partial class Aendern_Beleg_UVA : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::B_BUAB_006.B_BUAB_006Repository repository.
        /// </summary>
        public static global::B_BUAB_006.B_BUAB_006Repository repo = global::B_BUAB_006.B_BUAB_006Repository.Instance;

        static Aendern_Beleg_UVA instance = new Aendern_Beleg_UVA();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Aendern_Beleg_UVA()
        {
            UVA_Periode = "1";
            buchungsMonat = "2";
            UVA_Termin = "2020-1";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Aendern_Beleg_UVA Instance
        {
            get { return instance; }
        }

#region Variables

        string _UVA_Periode;

        /// <summary>
        /// Gets or sets the value of variable UVA_Periode.
        /// </summary>
        [TestVariable("48ffd07f-8411-403b-b800-d190233ca2c7")]
        public string UVA_Periode
        {
            get { return _UVA_Periode; }
            set { _UVA_Periode = value; }
        }

        string _buchungsMonat;

        /// <summary>
        /// Gets or sets the value of variable buchungsMonat.
        /// </summary>
        [TestVariable("7572d430-f97b-4338-b313-852651e0d830")]
        public string buchungsMonat
        {
            get { return _buchungsMonat; }
            set { _buchungsMonat = value; }
        }

        string _UVA_Termin;

        /// <summary>
        /// Gets or sets the value of variable UVA_Termin.
        /// </summary>
        [TestVariable("47f40a52-c989-4773-8a1b-5a9430e29041")]
        public string UVA_Termin
        {
            get { return _UVA_Termin; }
            set { _UVA_Termin = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'TblB1.Row1Column0' at Center.", repo.TblB1.Row1Column0Info, new RecordItemIndex(0));
            repo.TblB1.Row1Column0.Click();
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'TblB1.PbExtrasAendern' at Center.", repo.TblB1.PbExtrasAendernInfo, new RecordItemIndex(1));
            repo.TblB1.PbExtrasAendern.Click();
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'BBUAB.BelegAendern' at Center.", repo.BBUAB.BelegAendernInfo, new RecordItemIndex(2));
            repo.BBUAB.BelegAendern.Click();
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 2m to exist. Associated repository item: 'DlgAEndern.TitleBar100BelegAEnderungen'", repo.DlgAEndern.TitleBar100BelegAEnderungenInfo, new ActionTimeout(120000), new RecordItemIndex(3));
            repo.DlgAEndern.TitleBar100BelegAEnderungenInfo.WaitForExists(120000);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'DlgAEndern.Text' at Center.", repo.DlgAEndern.TextInfo, new RecordItemIndex(4));
            repo.DlgAEndern.Text.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Back}' with focus on 'DlgAEndern.Text'.", repo.DlgAEndern.TextInfo, new RecordItemIndex(5));
            repo.DlgAEndern.Text.PressKeys("{Back}");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$UVA_Periode' with focus on 'DlgAEndern.Text'.", repo.DlgAEndern.TextInfo, new RecordItemIndex(6));
            repo.DlgAEndern.Text.EnsureVisible();
            Keyboard.Press(UVA_Periode);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Tab}{Tab}' with focus on 'DlgAEndern.Text1'.", repo.DlgAEndern.Text1Info, new RecordItemIndex(7));
            repo.DlgAEndern.Text1.EnsureVisible();
            Keyboard.Press("{Tab}{Tab}");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Back}' with focus on 'DlgAEndern.Text1'.", repo.DlgAEndern.Text1Info, new RecordItemIndex(8));
            repo.DlgAEndern.Text1.EnsureVisible();
            Keyboard.Press("{Back}");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$buchungsMonat'.", new RecordItemIndex(9));
            Keyboard.Press(buchungsMonat);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Tab' Press.", new RecordItemIndex(10));
            Keyboard.Press(System.Windows.Forms.Keys.Tab, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 1s.", new RecordItemIndex(11));
            Delay.Duration(1000, false);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{F12}'.", new RecordItemIndex(12));
            Keyboard.Press("{F12}");
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 1s.", new RecordItemIndex(13));
            Delay.Duration(1000, false);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'TblB.PbDataAccessLoad' at Center.", repo.TblB.PbDataAccessLoadInfo, new RecordItemIndex(14));
            repo.TblB.PbDataAccessLoad.Click();
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 1s.", new RecordItemIndex(15));
            Delay.Duration(1000, false);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$buchungsMonat) on item 'TblB1.ColPeriRow1'.", repo.TblB1.ColPeriRow1Info, new RecordItemIndex(16));
            Validate.AttributeEqual(repo.TblB1.ColPeriRow1Info, "Text", buchungsMonat);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$UVA_Termin) on item 'TblB1.ColUvaRow1'.", repo.TblB1.ColUvaRow1Info, new RecordItemIndex(17));
            Validate.AttributeEqual(repo.TblB1.ColUvaRow1Info, "Text", UVA_Termin);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'TblB.PbCommonOPAnzeige' at Center.", repo.TblB.PbCommonOPAnzeigeInfo, new RecordItemIndex(18));
            repo.TblB.PbCommonOPAnzeige.Click();
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 2m to exist. Associated repository item: 'TblBuop.TitleBar100OPs2030002KUNDEDIVBK'", repo.TblBuop.TitleBar100OPs2030002KUNDEDIVBKInfo, new ActionTimeout(120000), new RecordItemIndex(19));
            repo.TblBuop.TitleBar100OPs2030002KUNDEDIVBKInfo.WaitForExists(120000);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$buchungsMonat) on item 'TblBuop.ColBusaPeriodeRow1'.", repo.TblBuop.ColBusaPeriodeRow1Info, new RecordItemIndex(20));
            Validate.AttributeEqual(repo.TblBuop.ColBusaPeriodeRow1Info, "Text", buchungsMonat);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'TblBuop.Schliessen' at Center.", repo.TblBuop.SchliessenInfo, new RecordItemIndex(21));
            repo.TblBuop.Schliessen.Click();
            
            Report.Log(ReportLevel.Info, "Validation", "Validating NotExists on item 'TblBuop.TitleBar100OPs2030002KUNDEDIVBK'.", repo.TblBuop.TitleBar100OPs2030002KUNDEDIVBKInfo, new RecordItemIndex(22));
            Validate.NotExists(repo.TblBuop.TitleBar100OPs2030002KUNDEDIVBKInfo);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
