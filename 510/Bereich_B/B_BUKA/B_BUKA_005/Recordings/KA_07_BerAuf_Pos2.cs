///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace B_BUKA_005.Recordings
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The KA_07_BerAuf_Pos2 recording.
    /// </summary>
    [TestModule("eb57f3b7-1ad3-4767-b6b4-cb9e624d68f5", ModuleType.Recording, 1)]
    public partial class KA_07_BerAuf_Pos2 : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::B_BUKA_005.B_BUKA_005Repository repository.
        /// </summary>
        public static global::B_BUKA_005.B_BUKA_005Repository repo = global::B_BUKA_005.B_BUKA_005Repository.Instance;

        static KA_07_BerAuf_Pos2 instance = new KA_07_BerAuf_Pos2();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public KA_07_BerAuf_Pos2()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static KA_07_BerAuf_Pos2 Instance
        {
            get { return instance; }
        }

#region Variables

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Insert}'.", new RecordItemIndex(0));
            Keyboard.Press("{Insert}");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='300') on item 'TblBerAufteilung.SomeText'.", repo.TblBerAufteilung.SomeTextInfo, new RecordItemIndex(1));
            Validate.AttributeEqual(repo.TblBerAufteilung.SomeTextInfo, "Text", "300");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '100' with focus on 'TblBerAufteilung.FlexGrid1.ColBetragBRow2'.", repo.TblBerAufteilung.FlexGrid1.ColBetragBRow2Info, new RecordItemIndex(2));
            repo.TblBerAufteilung.FlexGrid1.ColBetragBRow2.PressKeys("100");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Tab}'.", new RecordItemIndex(3));
            Keyboard.Press("{Tab}");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '4000' with focus on 'TblBerAufteilung.FlexGrid1.ColKtoNrRow2'.", repo.TblBerAufteilung.FlexGrid1.ColKtoNrRow2Info, new RecordItemIndex(4));
            repo.TblBerAufteilung.FlexGrid1.ColKtoNrRow2.PressKeys("4000");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Tab}{Tab}'.", new RecordItemIndex(5));
            Keyboard.Press("{Tab}{Tab}");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '20' with focus on 'TblBerAufteilung.FlexGrid1.ColBektNr1Row2'.", repo.TblBerAufteilung.FlexGrid1.ColBektNr1Row2Info, new RecordItemIndex(6));
            repo.TblBerAufteilung.FlexGrid1.ColBektNr1Row2.PressKeys("20");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Tab}'.", new RecordItemIndex(7));
            Keyboard.Press("{Tab}");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='100,00') on item 'TblBerAufteilung.FlexGrid1.ColBetragBRow2'.", repo.TblBerAufteilung.FlexGrid1.ColBetragBRow2Info, new RecordItemIndex(8));
            Validate.AttributeEqual(repo.TblBerAufteilung.FlexGrid1.ColBetragBRow2Info, "Text", "100,00");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='4000') on item 'TblBerAufteilung.FlexGrid1.ColKtoNrRow2'.", repo.TblBerAufteilung.FlexGrid1.ColKtoNrRow2Info, new RecordItemIndex(9));
            Validate.AttributeEqual(repo.TblBerAufteilung.FlexGrid1.ColKtoNrRow2Info, "Text", "4000");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='20') on item 'TblBerAufteilung.FlexGrid1.ColBektNr1Row2'.", repo.TblBerAufteilung.FlexGrid1.ColBektNr1Row2Info, new RecordItemIndex(10));
            Validate.AttributeEqual(repo.TblBerAufteilung.FlexGrid1.ColBektNr1Row2Info, "Text", "20");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='M20') on item 'TblBerAufteilung.FlexGrid1.ColUstCdRow2'.", repo.TblBerAufteilung.FlexGrid1.ColUstCdRow2Info, new RecordItemIndex(11));
            Validate.AttributeEqual(repo.TblBerAufteilung.FlexGrid1.ColUstCdRow2Info, "Text", "M20");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='16,67') on item 'TblBerAufteilung.FlexGrid1.ColUstbetragRow2'.", repo.TblBerAufteilung.FlexGrid1.ColUstbetragRow2Info, new RecordItemIndex(12));
            Validate.AttributeEqual(repo.TblBerAufteilung.FlexGrid1.ColUstbetragRow2Info, "Text", "16,67");
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
