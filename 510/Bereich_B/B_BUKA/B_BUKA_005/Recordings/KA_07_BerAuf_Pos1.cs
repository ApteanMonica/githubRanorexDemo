///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace B_BUKA_005.Recordings
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The KA_07_BerAuf_Pos1 recording.
    /// </summary>
    [TestModule("3eecdee8-8f59-408c-b754-a5b55de703bc", ModuleType.Recording, 1)]
    public partial class KA_07_BerAuf_Pos1 : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::B_BUKA_005.B_BUKA_005Repository repository.
        /// </summary>
        public static global::B_BUKA_005.B_BUKA_005Repository repo = global::B_BUKA_005.B_BUKA_005Repository.Instance;

        static KA_07_BerAuf_Pos1 instance = new KA_07_BerAuf_Pos1();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public KA_07_BerAuf_Pos1()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static KA_07_BerAuf_Pos1 Instance
        {
            get { return instance; }
        }

#region Variables

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'TblBuka.FlexGrid.Row5Column0' at Center.", repo.TblBuka.FlexGrid.Row5Column0Info, new RecordItemIndex(0));
            repo.TblBuka.FlexGrid.Row5Column0.Click();
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'TblBuka.PbToolBarItemsBerAufteilung' at Center.", repo.TblBuka.PbToolBarItemsBerAufteilungInfo, new RecordItemIndex(1));
            repo.TblBuka.PbToolBarItemsBerAufteilung.Click();
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 1m to exist. Associated repository item: 'TblBerAufteilung.TitleBar100BereichsAufteilung'", repo.TblBerAufteilung.TitleBar100BereichsAufteilungInfo, new ActionTimeout(60000), new RecordItemIndex(2));
            repo.TblBerAufteilung.TitleBar100BereichsAufteilungInfo.WaitForExists(60000);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (Text>'Bereichs-Aufteilung') on item 'TblBerAufteilung.TitleBar100BereichsAufteilung'.", repo.TblBerAufteilung.TitleBar100BereichsAufteilungInfo, new RecordItemIndex(3));
            Validate.AttributeContains(repo.TblBerAufteilung.TitleBar100BereichsAufteilungInfo, "Text", "Bereichs-Aufteilung");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'TblBerAufteilung.PbSpeichern' at Center.", repo.TblBerAufteilung.PbSpeichernInfo, new RecordItemIndex(4));
            repo.TblBerAufteilung.PbSpeichern.Click();
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'TblBerAufteilung.FlexGrid1.FlexGrid' at Center.", repo.TblBerAufteilung.FlexGrid1.FlexGridInfo, new RecordItemIndex(5));
            repo.TblBerAufteilung.FlexGrid1.FlexGrid.Click();
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Right Click item 'TblBerAufteilung.FlexGrid1.FlexGrid' at Center.", repo.TblBerAufteilung.FlexGrid1.FlexGridInfo, new RecordItemIndex(6));
            repo.TblBerAufteilung.FlexGrid1.FlexGrid.Click(System.Windows.Forms.MouseButtons.Right);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'BBUKA.ZeileEinfuegen' at Center.", repo.BBUKA.ZeileEinfuegenInfo, new RecordItemIndex(7));
            repo.BBUKA.ZeileEinfuegen.Click();
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'TblBerAufteilung.FlexGrid1.ColPosRow1' at Center.", repo.TblBerAufteilung.FlexGrid1.ColPosRow1Info, new RecordItemIndex(8));
            repo.TblBerAufteilung.FlexGrid1.ColPosRow1.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Tab' Press.", new RecordItemIndex(9));
            Keyboard.Press(System.Windows.Forms.Keys.Tab, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '200' with focus on 'TblBerAufteilung.FlexGrid1.ColBetragBRow1'.", repo.TblBerAufteilung.FlexGrid1.ColBetragBRow1Info, new RecordItemIndex(10));
            repo.TblBerAufteilung.FlexGrid1.ColBetragBRow1.PressKeys("200");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Tab}{Tab}{Tab}'.", new RecordItemIndex(11));
            Keyboard.Press("{Tab}{Tab}{Tab}");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '10' with focus on 'TblBerAufteilung.FlexGrid1.ColBektNr1Row1'.", repo.TblBerAufteilung.FlexGrid1.ColBektNr1Row1Info, new RecordItemIndex(12));
            repo.TblBerAufteilung.FlexGrid1.ColBektNr1Row1.PressKeys("10");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Tab' Press.", new RecordItemIndex(13));
            Keyboard.Press(System.Windows.Forms.Keys.Tab, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='200,00') on item 'TblBerAufteilung.FlexGrid1.ColBetragBRow1'.", repo.TblBerAufteilung.FlexGrid1.ColBetragBRow1Info, new RecordItemIndex(14));
            Validate.AttributeEqual(repo.TblBerAufteilung.FlexGrid1.ColBetragBRow1Info, "Text", "200,00");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='4000') on item 'TblBerAufteilung.FlexGrid1.ColKtoNrRow1'.", repo.TblBerAufteilung.FlexGrid1.ColKtoNrRow1Info, new RecordItemIndex(15));
            Validate.AttributeEqual(repo.TblBerAufteilung.FlexGrid1.ColKtoNrRow1Info, "Text", "4000");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='M20') on item 'TblBerAufteilung.FlexGrid1.ColUstCdRow1'.", repo.TblBerAufteilung.FlexGrid1.ColUstCdRow1Info, new RecordItemIndex(16));
            Validate.AttributeEqual(repo.TblBerAufteilung.FlexGrid1.ColUstCdRow1Info, "Text", "M20");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='33,33') on item 'TblBerAufteilung.FlexGrid1.ColUstbetragRow1'.", repo.TblBerAufteilung.FlexGrid1.ColUstbetragRow1Info, new RecordItemIndex(17));
            Validate.AttributeEqual(repo.TblBerAufteilung.FlexGrid1.ColUstbetragRow1Info, "Text", "33,33");
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
