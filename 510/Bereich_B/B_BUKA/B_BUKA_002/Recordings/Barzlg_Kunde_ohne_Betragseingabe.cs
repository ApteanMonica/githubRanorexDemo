///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace B_BUKA_002.Recordings
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Barzlg_Kunde_ohne_Betragseingabe recording.
    /// </summary>
    [TestModule("81ee5fce-6684-41c5-851d-fac022ac0ff7", ModuleType.Recording, 1)]
    public partial class Barzlg_Kunde_ohne_Betragseingabe : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::B_BUKA_002.B_BUKA_002Repository repository.
        /// </summary>
        public static global::B_BUKA_002.B_BUKA_002Repository repo = global::B_BUKA_002.B_BUKA_002Repository.Instance;

        static Barzlg_Kunde_ohne_Betragseingabe instance = new Barzlg_Kunde_ohne_Betragseingabe();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Barzlg_Kunde_ohne_Betragseingabe()
        {
            Text_Kundenzahlung_1 = "Bez. Beleg KA_03";
            Adr_Nr_2 = "200007";
            OP_1 = "KA_03";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Barzlg_Kunde_ohne_Betragseingabe Instance
        {
            get { return instance; }
        }

#region Variables

        string _Text_Kundenzahlung_1;

        /// <summary>
        /// Gets or sets the value of variable Text_Kundenzahlung_1.
        /// </summary>
        [TestVariable("dc91d083-71f2-4a29-9771-572e51a03463")]
        public string Text_Kundenzahlung_1
        {
            get { return _Text_Kundenzahlung_1; }
            set { _Text_Kundenzahlung_1 = value; }
        }

        string _Adr_Nr_2;

        /// <summary>
        /// Gets or sets the value of variable Adr_Nr_2.
        /// </summary>
        [TestVariable("c016dd49-3ef3-4a7c-b6c1-dbbf9c14e4f2")]
        public string Adr_Nr_2
        {
            get { return _Adr_Nr_2; }
            set { _Adr_Nr_2 = value; }
        }

        string _OP_1;

        /// <summary>
        /// Gets or sets the value of variable OP_1.
        /// </summary>
        [TestVariable("bf5c83c2-7444-4a73-ac1d-2408290a6f77")]
        public string OP_1
        {
            get { return _OP_1; }
            set { _OP_1 = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Insert}' with focus on 'TblBuka.FlexGrid1.FlexGrid'.", repo.TblBuka.FlexGrid1.FlexGridInfo, new RecordItemIndex(0));
            repo.TblBuka.FlexGrid1.FlexGrid.PressKeys("{Insert}");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '08' with focus on 'TblBuka.FlexGrid1.ColTagRow4'.", repo.TblBuka.FlexGrid1.ColTagRow4Info, new RecordItemIndex(1));
            repo.TblBuka.FlexGrid1.ColTagRow4.PressKeys("08");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Tab}'.", new RecordItemIndex(2));
            Keyboard.Press("{Tab}");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Text_Kundenzahlung_1' with focus on 'TblBuka.FlexGrid1.ColTextRow4'.", repo.TblBuka.FlexGrid1.ColTextRow4Info, new RecordItemIndex(3));
            repo.TblBuka.FlexGrid1.ColTextRow4.PressKeys(Text_Kundenzahlung_1);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Tab}{Tab}{Tab}'.", new RecordItemIndex(4));
            Keyboard.Press("{Tab}{Tab}{Tab}");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'K' with focus on 'TblBuka.FlexGrid1.ColBukaKlRow4'.", repo.TblBuka.FlexGrid1.ColBukaKlRow4Info, new RecordItemIndex(5));
            repo.TblBuka.FlexGrid1.ColBukaKlRow4.PressKeys("K");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Tab}'.", new RecordItemIndex(6));
            Keyboard.Press("{Tab}");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Adr_Nr_2' with focus on 'TblBuka.FlexGrid1.ColAdrNrRow4'.", repo.TblBuka.FlexGrid1.ColAdrNrRow4Info, new RecordItemIndex(7));
            repo.TblBuka.FlexGrid1.ColAdrNrRow4.PressKeys(Adr_Nr_2);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Tab}'.", new RecordItemIndex(8));
            Keyboard.Press("{Tab}");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$OP_1' with focus on 'TblBuka.FlexGrid1.ColBukaOpbelegnrRow4'.", repo.TblBuka.FlexGrid1.ColBukaOpbelegnrRow4Info, new RecordItemIndex(9));
            repo.TblBuka.FlexGrid1.ColBukaOpbelegnrRow4.PressKeys(OP_1);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Tab}'.", new RecordItemIndex(10));
            Keyboard.Press("{Tab}");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'TblBuka.PbDataAccessSave' at Center.", repo.TblBuka.PbDataAccessSaveInfo, new RecordItemIndex(11));
            repo.TblBuka.PbDataAccessSave.Click();
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='300,00') on item 'TblBuka.FlexGrid1.ColEingangRow4'.", repo.TblBuka.FlexGrid1.ColEingangRow4Info, new RecordItemIndex(12));
            Validate.AttributeEqual(repo.TblBuka.FlexGrid1.ColEingangRow4Info, "Text", "300,00");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='15.300,00') on item 'TblBuka.FlexGrid1.ColSaldoLfdRow4'.", repo.TblBuka.FlexGrid1.ColSaldoLfdRow4Info, new RecordItemIndex(13));
            Validate.AttributeEqual(repo.TblBuka.FlexGrid1.ColSaldoLfdRow4Info, "Text", "15.300,00");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='0,00') on item 'TblBuka.FlexGrid1.ColBukaSkontoRow4'.", repo.TblBuka.FlexGrid1.ColBukaSkontoRow4Info, new RecordItemIndex(14));
            Validate.AttributeEqual(repo.TblBuka.FlexGrid1.ColBukaSkontoRow4Info, "Text", "0,00");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='2000') on item 'TblBuka.FlexGrid1.ColKtoNrSamkRow4'.", repo.TblBuka.FlexGrid1.ColKtoNrSamkRow4Info, new RecordItemIndex(15));
            Validate.AttributeEqual(repo.TblBuka.FlexGrid1.ColKtoNrSamkRow4Info, "Text", "2000");
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
