///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace B_BUKA_002.Recordings
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Barzlg_Kunde_mit_BetrEingabe_und_Skonto recording.
    /// </summary>
    [TestModule("974fd7a1-d65d-4d1b-a91b-a95c94677d8b", ModuleType.Recording, 1)]
    public partial class Barzlg_Kunde_mit_BetrEingabe_und_Skonto : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::B_BUKA_002.B_BUKA_002Repository repository.
        /// </summary>
        public static global::B_BUKA_002.B_BUKA_002Repository repo = global::B_BUKA_002.B_BUKA_002Repository.Instance;

        static Barzlg_Kunde_mit_BetrEingabe_und_Skonto instance = new Barzlg_Kunde_mit_BetrEingabe_und_Skonto();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Barzlg_Kunde_mit_BetrEingabe_und_Skonto()
        {
            Beleg_Nr_00011 = "00011";
            Text_Kundenzahlung_2 = "Bez. Beleg KA_04";
            Adr_Nr_2 = "200007";
            OP_2 = "KA_04";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Barzlg_Kunde_mit_BetrEingabe_und_Skonto Instance
        {
            get { return instance; }
        }

#region Variables

        string _Beleg_Nr_00011;

        /// <summary>
        /// Gets or sets the value of variable Beleg_Nr_00011.
        /// </summary>
        [TestVariable("d87f729d-f91b-4a3f-a10e-700725a92467")]
        public string Beleg_Nr_00011
        {
            get { return _Beleg_Nr_00011; }
            set { _Beleg_Nr_00011 = value; }
        }

        string _Text_Kundenzahlung_2;

        /// <summary>
        /// Gets or sets the value of variable Text_Kundenzahlung_2.
        /// </summary>
        [TestVariable("be969597-a383-4493-8454-e8cb40b6d5ad")]
        public string Text_Kundenzahlung_2
        {
            get { return _Text_Kundenzahlung_2; }
            set { _Text_Kundenzahlung_2 = value; }
        }

        string _Adr_Nr_2;

        /// <summary>
        /// Gets or sets the value of variable Adr_Nr_2.
        /// </summary>
        [TestVariable("3b0c0a6d-b27a-45e6-b3b6-863609f7c439")]
        public string Adr_Nr_2
        {
            get { return _Adr_Nr_2; }
            set { _Adr_Nr_2 = value; }
        }

        string _OP_2;

        /// <summary>
        /// Gets or sets the value of variable OP_2.
        /// </summary>
        [TestVariable("4e1d819d-e5e1-420d-907d-60aeb016e29d")]
        public string OP_2
        {
            get { return _OP_2; }
            set { _OP_2 = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Insert}' with focus on 'TblBuka.FlexGrid1.FlexGrid'.", repo.TblBuka.FlexGrid1.FlexGridInfo, new RecordItemIndex(0));
            repo.TblBuka.FlexGrid1.FlexGrid.PressKeys("{Insert}");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Tab}' with focus on 'TblBuka.FlexGrid1.ColTagRow5'.", repo.TblBuka.FlexGrid1.ColTagRow5Info, new RecordItemIndex(1));
            repo.TblBuka.FlexGrid1.ColTagRow5.PressKeys("{Tab}");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Text_Kundenzahlung_2' with focus on 'TblBuka.FlexGrid1.ColTextRow5'.", repo.TblBuka.FlexGrid1.ColTextRow5Info, new RecordItemIndex(2));
            repo.TblBuka.FlexGrid1.ColTextRow5.PressKeys(Text_Kundenzahlung_2);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Tab}'.", new RecordItemIndex(3));
            Keyboard.Press("{Tab}");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '1180,' with focus on 'TblBuka.FlexGrid1.ColEingangRow5'.", repo.TblBuka.FlexGrid1.ColEingangRow5Info, new RecordItemIndex(4));
            repo.TblBuka.FlexGrid1.ColEingangRow5.PressKeys("1180,");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Tab}{Tab}'.", new RecordItemIndex(5));
            Keyboard.Press("{Tab}{Tab}");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'K' with focus on 'TblBuka.FlexGrid1.ColBukaKlRow5'.", repo.TblBuka.FlexGrid1.ColBukaKlRow5Info, new RecordItemIndex(6));
            repo.TblBuka.FlexGrid1.ColBukaKlRow5.PressKeys("K");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Tab}'.", new RecordItemIndex(7));
            Keyboard.Press("{Tab}");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Adr_Nr_2' with focus on 'TblBuka.FlexGrid1.ColAdrNrRow5'.", repo.TblBuka.FlexGrid1.ColAdrNrRow5Info, new RecordItemIndex(8));
            repo.TblBuka.FlexGrid1.ColAdrNrRow5.PressKeys(Adr_Nr_2);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Tab}'.", new RecordItemIndex(9));
            Keyboard.Press("{Tab}");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$OP_2' with focus on 'TblBuka.FlexGrid1.ColBukaOpbelegnrRow5'.", repo.TblBuka.FlexGrid1.ColBukaOpbelegnrRow5Info, new RecordItemIndex(10));
            repo.TblBuka.FlexGrid1.ColBukaOpbelegnrRow5.PressKeys(OP_2);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Tab}'.", new RecordItemIndex(11));
            Keyboard.Press("{Tab}");
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 1m to exist. Associated repository item: 'DlgMessageBox'", repo.DlgMessageBox.SelfInfo, new ActionTimeout(60000), new RecordItemIndex(12));
            repo.DlgMessageBox.SelfInfo.WaitForExists(60000);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='Restbetrag 20,00 ist Skonto?') on item 'DlgMessageBox.LabelMeldungstext'.", repo.DlgMessageBox.LabelMeldungstextInfo, new RecordItemIndex(13));
            Validate.AttributeEqual(repo.DlgMessageBox.LabelMeldungstextInfo, "Text", "Restbetrag 20,00 ist Skonto?");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'DlgMessageBox.Button0' at Center.", repo.DlgMessageBox.Button0Info, new RecordItemIndex(14));
            repo.DlgMessageBox.Button0.Click();
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'TblBuka.PbDataAccessSave' at Center.", repo.TblBuka.PbDataAccessSaveInfo, new RecordItemIndex(15));
            repo.TblBuka.PbDataAccessSave.Click();
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='08') on item 'TblBuka.FlexGrid1.ColTagRow5'.", repo.TblBuka.FlexGrid1.ColTagRow5Info, new RecordItemIndex(16));
            Validate.AttributeEqual(repo.TblBuka.FlexGrid1.ColTagRow5Info, "Text", "08");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='16.480,00') on item 'TblBuka.FlexGrid1.ColSaldoLfdRow5'.", repo.TblBuka.FlexGrid1.ColSaldoLfdRow5Info, new RecordItemIndex(17));
            Validate.AttributeEqual(repo.TblBuka.FlexGrid1.ColSaldoLfdRow5Info, "Text", "16.480,00");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='20,00') on item 'TblBuka.FlexGrid1.ColBukaSkontoRow5'.", repo.TblBuka.FlexGrid1.ColBukaSkontoRow5Info, new RecordItemIndex(18));
            Validate.AttributeEqual(repo.TblBuka.FlexGrid1.ColBukaSkontoRow5Info, "Text", "20,00");
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
