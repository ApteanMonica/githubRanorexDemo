///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace B_BUKA_002.Recordings
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The VZ_Kunde recording.
    /// </summary>
    [TestModule("f8ab6141-2cff-4431-9da2-29d17869403c", ModuleType.Recording, 1)]
    public partial class VZ_Kunde : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::B_BUKA_002.B_BUKA_002Repository repository.
        /// </summary>
        public static global::B_BUKA_002.B_BUKA_002Repository repo = global::B_BUKA_002.B_BUKA_002Repository.Instance;

        static VZ_Kunde instance = new VZ_Kunde();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public VZ_Kunde()
        {
            Beleg_Nr_00009 = "00009";
            Text_VZ = "VZ Kunde BUKA_01";
            Adr_Nr_1 = "200006";
            VZ_Euro = "5000";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static VZ_Kunde Instance
        {
            get { return instance; }
        }

#region Variables

        string _Beleg_Nr_00009;

        /// <summary>
        /// Gets or sets the value of variable Beleg_Nr_00009.
        /// </summary>
        [TestVariable("a62c71f6-2ca0-421c-9ed2-1842ed53cbc5")]
        public string Beleg_Nr_00009
        {
            get { return _Beleg_Nr_00009; }
            set { _Beleg_Nr_00009 = value; }
        }

        string _Text_VZ;

        /// <summary>
        /// Gets or sets the value of variable Text_VZ.
        /// </summary>
        [TestVariable("0c00e7ed-c07f-41f0-9d1b-5b3682f86e45")]
        public string Text_VZ
        {
            get { return _Text_VZ; }
            set { _Text_VZ = value; }
        }

        string _Adr_Nr_1;

        /// <summary>
        /// Gets or sets the value of variable Adr_Nr_1.
        /// </summary>
        [TestVariable("e417ae10-428e-49fc-b1b8-01e2d15346b9")]
        public string Adr_Nr_1
        {
            get { return _Adr_Nr_1; }
            set { _Adr_Nr_1 = value; }
        }

        string _VZ_Euro;

        /// <summary>
        /// Gets or sets the value of variable VZ_Euro.
        /// </summary>
        [TestVariable("8e3f41ba-fab7-47f9-ae67-ededab1b1dde")]
        public string VZ_Euro
        {
            get { return _VZ_Euro; }
            set { _VZ_Euro = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Right Click item 'TblBuka.FlexGrid1.FlexGrid' at LowerCenter.", repo.TblBuka.FlexGrid1.FlexGridInfo, new RecordItemIndex(0));
            repo.TblBuka.FlexGrid1.FlexGrid.Click(System.Windows.Forms.MouseButtons.Right, Location.LowerCenter);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'BBUKA.ZeileEinfuegen' at Center.", repo.BBUKA.ZeileEinfuegenInfo, new RecordItemIndex(1));
            repo.BBUKA.ZeileEinfuegen.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '07' with focus on 'TblBuka.FlexGrid1.ColTagRow3'.", repo.TblBuka.FlexGrid1.ColTagRow3Info, new RecordItemIndex(2));
            repo.TblBuka.FlexGrid1.ColTagRow3.PressKeys("07");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Tab}'.", new RecordItemIndex(3));
            Keyboard.Press("{Tab}");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Text_VZ' with focus on 'TblBuka.FlexGrid1.ColTextRow3'.", repo.TblBuka.FlexGrid1.ColTextRow3Info, new RecordItemIndex(4));
            repo.TblBuka.FlexGrid1.ColTextRow3.PressKeys(Text_VZ);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Tab}'.", new RecordItemIndex(5));
            Keyboard.Press("{Tab}");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$VZ_Euro' with focus on 'TblBuka.FlexGrid1.ColEingangRow3'.", repo.TblBuka.FlexGrid1.ColEingangRow3Info, new RecordItemIndex(6));
            repo.TblBuka.FlexGrid1.ColEingangRow3.PressKeys(VZ_Euro);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Tab}{Tab}'.", new RecordItemIndex(7));
            Keyboard.Press("{Tab}{Tab}");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'K' with focus on 'TblBuka.FlexGrid1.ColBukaKlRow3'.", repo.TblBuka.FlexGrid1.ColBukaKlRow3Info, new RecordItemIndex(8));
            repo.TblBuka.FlexGrid1.ColBukaKlRow3.PressKeys("K");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Tab}'.", new RecordItemIndex(9));
            Keyboard.Press("{Tab}");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Adr_Nr_1' with focus on 'TblBuka.FlexGrid1.ColAdrNrRow3'.", repo.TblBuka.FlexGrid1.ColAdrNrRow3Info, new RecordItemIndex(10));
            repo.TblBuka.FlexGrid1.ColAdrNrRow3.PressKeys(Adr_Nr_1);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Tab}'.", new RecordItemIndex(11));
            Keyboard.Press("{Tab}");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'TblBuka.PbDataAccessSave' at Center.", repo.TblBuka.PbDataAccessSaveInfo, new RecordItemIndex(12));
            repo.TblBuka.PbDataAccessSave.Click();
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='15.000,00') on item 'TblBuka.FlexGrid1.ColSaldoLfdRow3'.", repo.TblBuka.FlexGrid1.ColSaldoLfdRow3Info, new RecordItemIndex(13));
            Validate.AttributeEqual(repo.TblBuka.FlexGrid1.ColSaldoLfdRow3Info, "Text", "15.000,00");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='KUNDE FÜR B_BUCH MIT BV') on item 'TblBuka.FlexGrid1.ColAdrNameRow3'.", repo.TblBuka.FlexGrid1.ColAdrNameRow3Info, new RecordItemIndex(14));
            Validate.AttributeEqual(repo.TblBuka.FlexGrid1.ColAdrNameRow3Info, "Text", "KUNDE FÜR B_BUCH MIT BV");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='2000') on item 'TblBuka.FlexGrid1.ColKtoNrSamkRow3'.", repo.TblBuka.FlexGrid1.ColKtoNrSamkRow3Info, new RecordItemIndex(15));
            Validate.AttributeEqual(repo.TblBuka.FlexGrid1.ColKtoNrSamkRow3Info, "Text", "2000");
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
