///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace B_BUKA_001.Recordings
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Barzlg_Lieferant_mit_BetrEingabe_und_Skonto recording.
    /// </summary>
    [TestModule("3905a848-6edb-4df8-a4eb-4f24df1cc7fe", ModuleType.Recording, 1)]
    public partial class Barzlg_Lieferant_mit_BetrEingabe_und_Skonto : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::B_BUKA_001.B_BUKA_001Repository repository.
        /// </summary>
        public static global::B_BUKA_001.B_BUKA_001Repository repo = global::B_BUKA_001.B_BUKA_001Repository.Instance;

        static Barzlg_Lieferant_mit_BetrEingabe_und_Skonto instance = new Barzlg_Lieferant_mit_BetrEingabe_und_Skonto();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Barzlg_Lieferant_mit_BetrEingabe_und_Skonto()
        {
            Text_Lieferantenzahlung_2 = "Bez. Beleg KA_02";
            OP_2 = "KA_02";
            Adr_Nr_1 = "300012";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Barzlg_Lieferant_mit_BetrEingabe_und_Skonto Instance
        {
            get { return instance; }
        }

#region Variables

        string _Text_Lieferantenzahlung_2;

        /// <summary>
        /// Gets or sets the value of variable Text_Lieferantenzahlung_2.
        /// </summary>
        [TestVariable("d4f47edf-fd93-4a68-9023-12de3d253bf8")]
        public string Text_Lieferantenzahlung_2
        {
            get { return _Text_Lieferantenzahlung_2; }
            set { _Text_Lieferantenzahlung_2 = value; }
        }

        string _OP_2;

        /// <summary>
        /// Gets or sets the value of variable OP_2.
        /// </summary>
        [TestVariable("d0b8060b-99aa-46ab-b93b-24941f4fa83a")]
        public string OP_2
        {
            get { return _OP_2; }
            set { _OP_2 = value; }
        }

        string _Adr_Nr_1;

        /// <summary>
        /// Gets or sets the value of variable Adr_Nr_1.
        /// </summary>
        [TestVariable("9452a0e4-7943-4059-8972-117e96954660")]
        public string Adr_Nr_1
        {
            get { return _Adr_Nr_1; }
            set { _Adr_Nr_1 = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Insert}' with focus on 'TblBuka.FlexGrid1.FlexGrid'.", repo.TblBuka.FlexGrid1.FlexGridInfo, new RecordItemIndex(0));
            repo.TblBuka.FlexGrid1.FlexGrid.PressKeys("{Insert}");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '05' with focus on 'TblBuka.FlexGrid1.ColTagRow4'.", repo.TblBuka.FlexGrid1.ColTagRow4Info, new RecordItemIndex(1));
            repo.TblBuka.FlexGrid1.ColTagRow4.PressKeys("05");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Tab}'.", new RecordItemIndex(2));
            Keyboard.Press("{Tab}");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Text_Lieferantenzahlung_2' with focus on 'TblBuka.FlexGrid1.ColTextRow4'.", repo.TblBuka.FlexGrid1.ColTextRow4Info, new RecordItemIndex(3));
            repo.TblBuka.FlexGrid1.ColTextRow4.PressKeys(Text_Lieferantenzahlung_2);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Tab}{Tab}'.", new RecordItemIndex(4));
            Keyboard.Press("{Tab}{Tab}");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '931' with focus on 'TblBuka.FlexGrid1.ColAusgangRow4'.", repo.TblBuka.FlexGrid1.ColAusgangRow4Info, new RecordItemIndex(5));
            repo.TblBuka.FlexGrid1.ColAusgangRow4.PressKeys("931");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Tab}'.", new RecordItemIndex(6));
            Keyboard.Press("{Tab}");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'L' with focus on 'TblBuka.FlexGrid1.ColBukaKlRow4'.", repo.TblBuka.FlexGrid1.ColBukaKlRow4Info, new RecordItemIndex(7));
            repo.TblBuka.FlexGrid1.ColBukaKlRow4.PressKeys("L");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Tab}'.", new RecordItemIndex(8));
            Keyboard.Press("{Tab}");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Adr_Nr_1' with focus on 'TblBuka.FlexGrid1.ColAdrNrRow4'.", repo.TblBuka.FlexGrid1.ColAdrNrRow4Info, new RecordItemIndex(9));
            repo.TblBuka.FlexGrid1.ColAdrNrRow4.PressKeys(Adr_Nr_1);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Tab}'.", new RecordItemIndex(10));
            Keyboard.Press("{Tab}");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$OP_2' with focus on 'TblBuka.FlexGrid1.ColBukaOpbelegnrRow4'.", repo.TblBuka.FlexGrid1.ColBukaOpbelegnrRow4Info, new RecordItemIndex(11));
            repo.TblBuka.FlexGrid1.ColBukaOpbelegnrRow4.PressKeys(OP_2);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Tab}'.", new RecordItemIndex(12));
            Keyboard.Press("{Tab}");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'TblBuka.PbDataAccessSave' at Center.", repo.TblBuka.PbDataAccessSaveInfo, new RecordItemIndex(13));
            repo.TblBuka.PbDataAccessSave.Click();
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 1m to exist. Associated repository item: 'DlgMessageBox.Kassabuch'", repo.DlgMessageBox.KassabuchInfo, new ActionTimeout(60000), new RecordItemIndex(14));
            repo.DlgMessageBox.KassabuchInfo.WaitForExists(60000);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='Restbetrag 19,00 ist Skonto?') on item 'DlgMessageBox.LabelMeldungstext'.", repo.DlgMessageBox.LabelMeldungstextInfo, new RecordItemIndex(15));
            Validate.AttributeEqual(repo.DlgMessageBox.LabelMeldungstextInfo, "Text", "Restbetrag 19,00 ist Skonto?");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'DlgMessageBox.Button0' at Center.", repo.DlgMessageBox.Button0Info, new RecordItemIndex(16));
            repo.DlgMessageBox.Button0.Click();
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='0003') on item 'TblBuka.FlexGrid1.ColBelegRow4'.", repo.TblBuka.FlexGrid1.ColBelegRow4Info, new RecordItemIndex(17));
            Validate.AttributeEqual(repo.TblBuka.FlexGrid1.ColBelegRow4Info, "Text", "0003");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='8.069,00') on item 'TblBuka.FlexGrid1.ColSaldoLfdRow4'.", repo.TblBuka.FlexGrid1.ColSaldoLfdRow4Info, new RecordItemIndex(18));
            Validate.AttributeEqual(repo.TblBuka.FlexGrid1.ColSaldoLfdRow4Info, "Text", "8.069,00");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='19,00') on item 'TblBuka.FlexGrid1.ColBukaSkontoRow4'.", repo.TblBuka.FlexGrid1.ColBukaSkontoRow4Info, new RecordItemIndex(19));
            Validate.AttributeEqual(repo.TblBuka.FlexGrid1.ColBukaSkontoRow4Info, "Text", "19,00");
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
