///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace B_BUKA_007.Recordings
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Firmenwechsel_in_100 recording.
    /// </summary>
    [TestModule("b5d14e71-f180-4a88-987b-5e24e5feb635", ModuleType.Recording, 1)]
    public partial class Firmenwechsel_in_100 : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::B_BUKA_007.B_BUKA_007Repository repository.
        /// </summary>
        public static global::B_BUKA_007.B_BUKA_007Repository repo = global::B_BUKA_007.B_BUKA_007Repository.Instance;

        static Firmenwechsel_in_100 instance = new Firmenwechsel_in_100();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Firmenwechsel_in_100()
        {
            Mandant_100 = "100";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Firmenwechsel_in_100 Instance
        {
            get { return instance; }
        }

#region Variables

        string _Mandant_100;

        /// <summary>
        /// Gets or sets the value of variable Mandant_100.
        /// </summary>
        [TestVariable("0026c6e6-2e48-4629-9a87-628a1a0f3d39")]
        public string Mandant_100
        {
            get { return _Mandant_100; }
            set { _Mandant_100 = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left DoubleClick item 'TblBuka.ToolBar.Zahlkonto' at Center.", repo.TblBuka.ToolBar.ZahlkontoInfo, new RecordItemIndex(0));
            repo.TblBuka.ToolBar.Zahlkonto.DoubleClick();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Delete' Press.", new RecordItemIndex(1));
            Keyboard.Press(System.Windows.Forms.Keys.Delete, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '2707' with focus on 'TblBuka.ToolBar.Zahlkonto'.", repo.TblBuka.ToolBar.ZahlkontoInfo, new RecordItemIndex(2));
            repo.TblBuka.ToolBar.Zahlkonto.PressKeys("2707");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Tab' Press.", new RecordItemIndex(3));
            Keyboard.Press(System.Windows.Forms.Keys.Tab, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'TblBuka.PbDruckenFirmenwechsel' at Center.", repo.TblBuka.PbDruckenFirmenwechselInfo, new RecordItemIndex(4));
            repo.TblBuka.PbDruckenFirmenwechsel.Click();
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 1m to exist. Associated repository item: 'DlgFirmenwechsel.TitleBar100FirmaWechseln'", repo.DlgFirmenwechsel.TitleBar100FirmaWechselnInfo, new ActionTimeout(60000), new RecordItemIndex(5));
            repo.DlgFirmenwechsel.TitleBar100FirmaWechselnInfo.WaitForExists(60000);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (Text>'Firma') on item 'DlgFirmenwechsel.TitleBar100FirmaWechseln'.", repo.DlgFirmenwechsel.TitleBar100FirmaWechselnInfo, new RecordItemIndex(6));
            Validate.AttributeContains(repo.DlgFirmenwechsel.TitleBar100FirmaWechselnInfo, "Text", "Firma");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Mandant_100' with focus on 'DlgFirmenwechsel.Firma'.", repo.DlgFirmenwechsel.FirmaInfo, new RecordItemIndex(7));
            repo.DlgFirmenwechsel.Firma.PressKeys(Mandant_100);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'DlgFirmenwechsel.PbOk' at Center.", repo.DlgFirmenwechsel.PbOkInfo, new RecordItemIndex(8));
            repo.DlgFirmenwechsel.PbOk.Click();
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (Text>$Mandant_100) on item 'TblBuka.TitleBar100Kassabuch'.", repo.TblBuka.TitleBar100KassabuchInfo, new RecordItemIndex(9));
            Validate.AttributeContains(repo.TblBuka.TitleBar100KassabuchInfo, "Text", Mandant_100);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
