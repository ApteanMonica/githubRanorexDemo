///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace B_MNDR_004.Recordings_B_KLAB
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Aufruf_B_KLAB_Kunde_2 recording.
    /// </summary>
    [TestModule("48400136-2c22-451d-9799-dc879dc70cfe", ModuleType.Recording, 1)]
    public partial class Aufruf_B_KLAB_Kunde_2 : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::B_MNDR_004.B_MNDR_004Repository repository.
        /// </summary>
        public static global::B_MNDR_004.B_MNDR_004Repository repo = global::B_MNDR_004.B_MNDR_004Repository.Instance;

        static Aufruf_B_KLAB_Kunde_2 instance = new Aufruf_B_KLAB_Kunde_2();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Aufruf_B_KLAB_Kunde_2()
        {
            Kunde_2 = "200025";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Aufruf_B_KLAB_Kunde_2 Instance
        {
            get { return instance; }
        }

#region Variables

        string _Kunde_2;

        /// <summary>
        /// Gets or sets the value of variable Kunde_2.
        /// </summary>
        [TestVariable("a83bd3f0-6bd3-4cc1-ab86-e2cdf8bb0e8c")]
        public string Kunde_2
        {
            get { return _Kunde_2; }
            set { _Kunde_2 = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Kunde_2' with focus on 'FrmKlAb.FrmSearchPage.Text'.", repo.FrmKlAb.FrmSearchPage.TextInfo, new RecordItemIndex(0));
            repo.FrmKlAb.FrmSearchPage.Text.PressKeys(Kunde_2);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmKlAb.FrmSearchPage.PbEdit' at Center.", repo.FrmKlAb.FrmSearchPage.PbEditInfo, new RecordItemIndex(1));
            repo.FrmKlAb.FrmSearchPage.PbEdit.Click();
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Kunde_2) on item 'FrmKlAb.Konto'.", repo.FrmKlAb.KontoInfo, new RecordItemIndex(2));
            Validate.AttributeEqual(repo.FrmKlAb.KontoInfo, "Text", Kunde_2);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmKlAb.PbOPLaden' at Center.", repo.FrmKlAb.PbOPLadenInfo, new RecordItemIndex(3));
            repo.FrmKlAb.PbOPLaden.Click();
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 1m to exist. Associated repository item: 'TblBuop.TitleBar100OPs200016QSKUNDE1B'", repo.TblBuop.TitleBar100OPs200016QSKUNDE1BInfo, new ActionTimeout(60000), new RecordItemIndex(4));
            repo.TblBuop.TitleBar100OPs200016QSKUNDE1BInfo.WaitForExists(60000);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
