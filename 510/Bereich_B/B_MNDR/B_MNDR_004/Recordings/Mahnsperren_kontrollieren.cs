///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace B_MNDR_004.Recordings
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Mahnsperren_kontrollieren recording.
    /// </summary>
    [TestModule("6d5a2d4a-21f9-495f-8f59-67b5fb92b544", ModuleType.Recording, 1)]
    public partial class Mahnsperren_kontrollieren : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::B_MNDR_004.B_MNDR_004Repository repository.
        /// </summary>
        public static global::B_MNDR_004.B_MNDR_004Repository repo = global::B_MNDR_004.B_MNDR_004Repository.Instance;

        static Mahnsperren_kontrollieren instance = new Mahnsperren_kontrollieren();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Mahnsperren_kontrollieren()
        {
            Kunde_2 = "200025";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Mahnsperren_kontrollieren Instance
        {
            get { return instance; }
        }

#region Variables

        string _Kunde_2;

        /// <summary>
        /// Gets or sets the value of variable Kunde_2.
        /// </summary>
        [TestVariable("087623a8-a02d-476c-9fc3-c2b12512059a")]
        public string Kunde_2
        {
            get { return _Kunde_2; }
            set { _Kunde_2 = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (Text>'01.02.2021\t28.02.2021\tKLAGE\tkeine Mahnung wegen Klage') on item 'Form100Sperren.obere_Sperrtabelle.Row_obere_Maske_Sperre'.", repo.Form100Sperren.obere_Sperrtabelle.Row_obere_Maske_SperreInfo, new RecordItemIndex(0));
            Validate.AttributeContains(repo.Form100Sperren.obere_Sperrtabelle.Row_obere_Maske_SperreInfo, "Text", "01.02.2021\t28.02.2021\tKLAGE\tkeine Mahnung wegen Klage");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (Text>'Mahnsperre\t01.02.2021\t28.02.2021\tB_MNDR_004_01\t*\tKLAGE\tkeine Mahnung wegen Klage') on item 'Form100Sperren.untere_Sperrtabelle.Row1_untere_Sperrtabelle'.", repo.Form100Sperren.untere_Sperrtabelle.Row1_untere_SperrtabelleInfo, new RecordItemIndex(1));
            Validate.AttributeContains(repo.Form100Sperren.untere_Sperrtabelle.Row1_untere_SperrtabelleInfo, "Text", "Mahnsperre\t01.02.2021\t28.02.2021\tB_MNDR_004_01\t*\tKLAGE\tkeine Mahnung wegen Klage");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Alt+F4' Press with focus on 'Form100Sperren.TitleBar100Sperren'.", repo.Form100Sperren.TitleBar100SperrenInfo, new RecordItemIndex(2));
            Keyboard.PrepareFocus(repo.Form100Sperren.TitleBar100Sperren);
            Keyboard.Press(System.Windows.Forms.Keys.F4 | System.Windows.Forms.Keys.Alt, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            // Zwischenschritt welchen man theoretisch nach Korrektur der des Tickets AR570 wieder entfernen kann
            Report.Log(ReportLevel.Info, "Mouse", "Zwischenschritt welchen man theoretisch nach Korrektur der des Tickets AR570 wieder entfernen kann\r\nMouse Left Click item 'FrmVorschlagAEndern.PbDataAccessSave' at Center.", repo.FrmVorschlagAEndern.PbDataAccessSaveInfo, new RecordItemIndex(3));
            repo.FrmVorschlagAEndern.PbDataAccessSave.Click();
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Kunde_2) on item 'FrmVorschlagAEndern.FlexGrid_Tabelle.Row4.ColAdrNrRow4'.", repo.FrmVorschlagAEndern.FlexGrid_Tabelle.Row4.ColAdrNrRow4Info, new RecordItemIndex(4));
            Validate.AttributeEqual(repo.FrmVorschlagAEndern.FlexGrid_Tabelle.Row4.ColAdrNrRow4Info, "Text", Kunde_2);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='B_MNDR_004_01') on item 'FrmVorschlagAEndern.FlexGrid_Tabelle.Row4.ColBelegRow4'.", repo.FrmVorschlagAEndern.FlexGrid_Tabelle.Row4.ColBelegRow4Info, new RecordItemIndex(5));
            Validate.AttributeEqual(repo.FrmVorschlagAEndern.FlexGrid_Tabelle.Row4.ColBelegRow4Info, "Text", "B_MNDR_004_01");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='N') on item 'FrmVorschlagAEndern.FlexGrid_Tabelle.Row4.ColSperreRow4'.", repo.FrmVorschlagAEndern.FlexGrid_Tabelle.Row4.ColSperreRow4Info, new RecordItemIndex(6));
            Validate.AttributeEqual(repo.FrmVorschlagAEndern.FlexGrid_Tabelle.Row4.ColSperreRow4Info, "Text", "N");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='KLAGE') on item 'FrmVorschlagAEndern.FlexGrid_Tabelle.Row4.ColOpspCdRow4'.", repo.FrmVorschlagAEndern.FlexGrid_Tabelle.Row4.ColOpspCdRow4Info, new RecordItemIndex(7));
            Validate.AttributeEqual(repo.FrmVorschlagAEndern.FlexGrid_Tabelle.Row4.ColOpspCdRow4Info, "Text", "KLAGE");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='keine Mahnung wegen Klage') on item 'FrmVorschlagAEndern.FlexGrid_Tabelle.Row4.ColOpspBezRow4'.", repo.FrmVorschlagAEndern.FlexGrid_Tabelle.Row4.ColOpspBezRow4Info, new RecordItemIndex(8));
            Validate.AttributeEqual(repo.FrmVorschlagAEndern.FlexGrid_Tabelle.Row4.ColOpspBezRow4Info, "Text", "keine Mahnung wegen Klage");
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
