///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace B_MNDR_004.Recordings
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Button_Mahnsperre_Sperre_setzen recording.
    /// </summary>
    [TestModule("e49ba5b8-c190-416f-920b-1207c93f5e67", ModuleType.Recording, 1)]
    public partial class Button_Mahnsperre_Sperre_setzen : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::B_MNDR_004.B_MNDR_004Repository repository.
        /// </summary>
        public static global::B_MNDR_004.B_MNDR_004Repository repo = global::B_MNDR_004.B_MNDR_004Repository.Instance;

        static Button_Mahnsperre_Sperre_setzen instance = new Button_Mahnsperre_Sperre_setzen();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Button_Mahnsperre_Sperre_setzen()
        {
            Kunde_2 = "200025";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Button_Mahnsperre_Sperre_setzen Instance
        {
            get { return instance; }
        }

#region Variables

        string _Kunde_2;

        /// <summary>
        /// Gets or sets the value of variable Kunde_2.
        /// </summary>
        [TestVariable("2514e925-c77b-41ef-b17d-a24db53425bc")]
        public string Kunde_2
        {
            get { return _Kunde_2; }
            set { _Kunde_2 = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (Text>'B_MNDR_004_01') on item 'FrmVorschlagAEndern.FlexGrid_Tabelle.Row4.ColBelegRow4'.", repo.FrmVorschlagAEndern.FlexGrid_Tabelle.Row4.ColBelegRow4Info, new RecordItemIndex(0));
            Validate.AttributeContains(repo.FrmVorschlagAEndern.FlexGrid_Tabelle.Row4.ColBelegRow4Info, "Text", "B_MNDR_004_01");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmVorschlagAEndern.FlexGrid_Tabelle.Row4.Row4Column0' at Center.", repo.FrmVorschlagAEndern.FlexGrid_Tabelle.Row4.Row4Column0Info, new RecordItemIndex(1));
            repo.FrmVorschlagAEndern.FlexGrid_Tabelle.Row4.Row4Column0.Click();
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmVorschlagAEndern.PbSperrenMahnsperre' at Center.", repo.FrmVorschlagAEndern.PbSperrenMahnsperreInfo, new RecordItemIndex(2));
            repo.FrmVorschlagAEndern.PbSperrenMahnsperre.Click();
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 2m to exist. Associated repository item: 'Form100Sperren.TitleBar100Sperren'", repo.Form100Sperren.TitleBar100SperrenInfo, new ActionTimeout(120000), new RecordItemIndex(3));
            repo.Form100Sperren.TitleBar100SperrenInfo.WaitForExists(120000);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (Text>'Sperren') on item 'Form100Sperren.TitleBar100Sperren'.", repo.Form100Sperren.TitleBar100SperrenInfo, new RecordItemIndex(4));
            Validate.AttributeContains(repo.Form100Sperren.TitleBar100SperrenInfo, "Text", "Sperren");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (Text>$Kunde_2) on item 'Form100Sperren.Adresse'.", repo.Form100Sperren.AdresseInfo, new RecordItemIndex(5));
            Validate.AttributeContains(repo.Form100Sperren.AdresseInfo, "Text", Kunde_2);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Tab' Press with focus on 'Form100Sperren.Adresse'.", repo.Form100Sperren.AdresseInfo, new RecordItemIndex(6));
            Keyboard.PrepareFocus(repo.Form100Sperren.Adresse);
            Keyboard.Press(System.Windows.Forms.Keys.Tab, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Form100Sperren.obere_Sperrtabelle' at Center.", repo.Form100Sperren.obere_Sperrtabelle.SelfInfo, new RecordItemIndex(7));
            repo.Form100Sperren.obere_Sperrtabelle.Self.Click();
            
            // dieses Reposetory genommen, weil die näheren bzw. genaueren einzelnen Felder nicht eindeutig bekannt sind. Keine andere Möglichkeit gefunden die Zeile einzufügen in Tabelle
            Report.Log(ReportLevel.Info, "Keyboard", "dieses Reposetory genommen, weil die näheren bzw. genaueren einzelnen Felder nicht eindeutig bekannt sind. Keine andere Möglichkeit gefunden die Zeile einzufügen in Tabelle\r\nKey 'Insert' Press with focus on 'Form100Sperren.obere_Sperrtabelle'.", repo.Form100Sperren.obere_Sperrtabelle.SelfInfo, new RecordItemIndex(8));
            Keyboard.PrepareFocus(repo.Form100Sperren.obere_Sperrtabelle.Self);
            Keyboard.Press(System.Windows.Forms.Keys.Insert, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Delete' Press with focus on 'Form100Sperren.obere_Sperrtabelle.Row1_obere_Sperrtabelle'.", repo.Form100Sperren.obere_Sperrtabelle.Row1_obere_SperrtabelleInfo, new RecordItemIndex(9));
            Keyboard.PrepareFocus(repo.Form100Sperren.obere_Sperrtabelle.Row1_obere_Sperrtabelle);
            Keyboard.Press(System.Windows.Forms.Keys.Delete, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '01.02.2021' with focus on 'Form100Sperren.obere_Sperrtabelle.Row1_obere_Sperrtabelle'.", repo.Form100Sperren.obere_Sperrtabelle.Row1_obere_SperrtabelleInfo, new RecordItemIndex(10));
            repo.Form100Sperren.obere_Sperrtabelle.Row1_obere_Sperrtabelle.PressKeys("01.02.2021");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Tab' Press.", new RecordItemIndex(11));
            Keyboard.Press(System.Windows.Forms.Keys.Tab, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Delete' Press with focus on 'Form100Sperren.obere_Sperrtabelle.Row1_obere_Sperrtabelle'.", repo.Form100Sperren.obere_Sperrtabelle.Row1_obere_SperrtabelleInfo, new RecordItemIndex(12));
            Keyboard.PrepareFocus(repo.Form100Sperren.obere_Sperrtabelle.Row1_obere_Sperrtabelle);
            Keyboard.Press(System.Windows.Forms.Keys.Delete, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '28.02.2021' with focus on 'Form100Sperren.obere_Sperrtabelle.Row1_obere_Sperrtabelle'.", repo.Form100Sperren.obere_Sperrtabelle.Row1_obere_SperrtabelleInfo, new RecordItemIndex(13));
            repo.Form100Sperren.obere_Sperrtabelle.Row1_obere_Sperrtabelle.PressKeys("28.02.2021");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Tab' Press.", new RecordItemIndex(14));
            Keyboard.Press(System.Windows.Forms.Keys.Tab, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'Klage' with focus on 'Form100Sperren.obere_Sperrtabelle.Row1_obere_Sperrtabelle'.", repo.Form100Sperren.obere_Sperrtabelle.Row1_obere_SperrtabelleInfo, new RecordItemIndex(15));
            repo.Form100Sperren.obere_Sperrtabelle.Row1_obere_Sperrtabelle.PressKeys("Klage");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Tab' Press.", new RecordItemIndex(16));
            Keyboard.Press(System.Windows.Forms.Keys.Tab, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (Text>'01.02.2021\t28.02.2021\tKLAGE\tkeine Mahnung wegen Klage') on item 'Form100Sperren.obere_Sperrtabelle.Row1_obere_Sperrtabelle'.", repo.Form100Sperren.obere_Sperrtabelle.Row1_obere_SperrtabelleInfo, new RecordItemIndex(17));
            Validate.AttributeContains(repo.Form100Sperren.obere_Sperrtabelle.Row1_obere_SperrtabelleInfo, "Text", "01.02.2021\t28.02.2021\tKLAGE\tkeine Mahnung wegen Klage");
            
            // Lösungsvariante 2 Anlage Mahnsperre
            Report.Log(ReportLevel.Info, "Section", "Lösungsvariante 2 Anlage Mahnsperre", new RecordItemIndex(18));
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Form100Sperren.PbSpeichern' at Center.", repo.Form100Sperren.PbSpeichernInfo, new RecordItemIndex(19));
            repo.Form100Sperren.PbSpeichern.Click();
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
