///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace B_MNDR_004.Recordings
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Kontrolle_der_Loeschung recording.
    /// </summary>
    [TestModule("9201e311-5ca6-49e7-9af7-cde38129d713", ModuleType.Recording, 1)]
    public partial class Kontrolle_der_Loeschung : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::B_MNDR_004.B_MNDR_004Repository repository.
        /// </summary>
        public static global::B_MNDR_004.B_MNDR_004Repository repo = global::B_MNDR_004.B_MNDR_004Repository.Instance;

        static Kontrolle_der_Loeschung instance = new Kontrolle_der_Loeschung();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Kontrolle_der_Loeschung()
        {
            Hinweis = "Löschen";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Kontrolle_der_Loeschung Instance
        {
            get { return instance; }
        }

#region Variables

        string _Hinweis;

        /// <summary>
        /// Gets or sets the value of variable Hinweis.
        /// </summary>
        [TestVariable("6eef670d-f744-4784-997b-d893e1bdc364")]
        public string Hinweis
        {
            get { return _Hinweis; }
            set { _Hinweis = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            // search timeout reduziert
            Report.Log(ReportLevel.Info, "Validation", "search timeout reduziert\r\nValidating NotExists on item 'Form100Sperren.obere_Sperrtabelle.Row_obere_Maske_Sperre'.", repo.Form100Sperren.obere_Sperrtabelle.Row_obere_Maske_SperreInfo, new RecordItemIndex(0));
            Validate.NotExists(repo.Form100Sperren.obere_Sperrtabelle.Row_obere_Maske_SperreInfo);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Form100Sperren.GeloeschteSperrenAnzeigen' at Center.", repo.Form100Sperren.GeloeschteSperrenAnzeigenInfo, new RecordItemIndex(1));
            repo.Form100Sperren.GeloeschteSperrenAnzeigen.Click();
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Checked='True') on item 'Form100Sperren.GeloeschteSperrenAnzeigen'.", repo.Form100Sperren.GeloeschteSperrenAnzeigenInfo, new RecordItemIndex(2));
            Validate.AttributeEqual(repo.Form100Sperren.GeloeschteSperrenAnzeigenInfo, "Checked", "True");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (Text>$Hinweis) on item 'Form100Sperren.untere_Sperrtabelle.Row2_untere_Sperrtabelle'.", repo.Form100Sperren.untere_Sperrtabelle.Row2_untere_SperrtabelleInfo, new RecordItemIndex(3));
            Validate.AttributeContains(repo.Form100Sperren.untere_Sperrtabelle.Row2_untere_SperrtabelleInfo, "Text", Hinweis);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (Text>'B_MNDR_004_03') on item 'Form100Sperren.untere_Sperrtabelle.Row2_untere_Sperrtabelle'.", repo.Form100Sperren.untere_Sperrtabelle.Row2_untere_SperrtabelleInfo, new RecordItemIndex(4));
            Validate.AttributeContains(repo.Form100Sperren.untere_Sperrtabelle.Row2_untere_SperrtabelleInfo, "Text", "B_MNDR_004_03");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Alt+F4' Press with focus on 'Form100Sperren.TitleBar100Sperren'.", repo.Form100Sperren.TitleBar100SperrenInfo, new RecordItemIndex(5));
            Keyboard.PrepareFocus(repo.Form100Sperren.TitleBar100Sperren);
            Keyboard.Press(System.Windows.Forms.Keys.F4 | System.Windows.Forms.Keys.Alt, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
