///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace B_MNDR_001.Recordings
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Register_Faelligkeit recording.
    /// </summary>
    [TestModule("02187b76-45ea-4e3b-b337-d9325f8a71f2", ModuleType.Recording, 1)]
    public partial class Register_Faelligkeit : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::B_MNDR_001.B_MNDR_001Repository repository.
        /// </summary>
        public static global::B_MNDR_001.B_MNDR_001Repository repo = global::B_MNDR_001.B_MNDR_001Repository.Instance;

        static Register_Faelligkeit instance = new Register_Faelligkeit();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Register_Faelligkeit()
        {
            Beschreibung = "B_MNDR_001";
            Faelligkeitsdatum = "03.03.2021";
            Zahlungen_bis = "03.03.2021";
            Mahndatum = "04.03.2021";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Register_Faelligkeit Instance
        {
            get { return instance; }
        }

#region Variables

        string _Faelligkeitsdatum;

        /// <summary>
        /// Gets or sets the value of variable Faelligkeitsdatum.
        /// </summary>
        [TestVariable("392c2002-0ffb-49af-82e9-c307a39ffbe3")]
        public string Faelligkeitsdatum
        {
            get { return _Faelligkeitsdatum; }
            set { _Faelligkeitsdatum = value; }
        }

        string _Zahlungen_bis;

        /// <summary>
        /// Gets or sets the value of variable Zahlungen_bis.
        /// </summary>
        [TestVariable("467c79ce-00a5-4f50-b0a6-bffc9da97ffb")]
        public string Zahlungen_bis
        {
            get { return _Zahlungen_bis; }
            set { _Zahlungen_bis = value; }
        }

        string _Mahndatum;

        /// <summary>
        /// Gets or sets the value of variable Mahndatum.
        /// </summary>
        [TestVariable("436afd5e-f5a2-4858-b151-66080c323ac1")]
        public string Mahndatum
        {
            get { return _Mahndatum; }
            set { _Mahndatum = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable Beschreibung.
        /// </summary>
        [TestVariable("7d395e52-bb65-47b8-89e6-ee2e96204352")]
        public string Beschreibung
        {
            get { return repo.Beschreibung; }
            set { repo.Beschreibung = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left DoubleClick item 'FrmVorschlagErstellen.DatumDerMahnung' at Center.", repo.FrmVorschlagErstellen.DatumDerMahnungInfo, new RecordItemIndex(0));
            repo.FrmVorschlagErstellen.DatumDerMahnung.DoubleClick();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Back}' with focus on 'FrmVorschlagErstellen.DatumDerMahnung'.", repo.FrmVorschlagErstellen.DatumDerMahnungInfo, new RecordItemIndex(1));
            repo.FrmVorschlagErstellen.DatumDerMahnung.PressKeys("{Back}");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Mahndatum' with focus on 'FrmVorschlagErstellen.DatumDerMahnung'.", repo.FrmVorschlagErstellen.DatumDerMahnungInfo, new RecordItemIndex(2));
            repo.FrmVorschlagErstellen.DatumDerMahnung.PressKeys(Mahndatum);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Tab}' with focus on 'FrmVorschlagErstellen.DatumDerMahnung'.", repo.FrmVorschlagErstellen.DatumDerMahnungInfo, new RecordItemIndex(3));
            repo.FrmVorschlagErstellen.DatumDerMahnung.PressKeys("{Tab}");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Faelligkeitsdatum' with focus on 'FrmVorschlagErstellen.PostenFaelligBis'.", repo.FrmVorschlagErstellen.PostenFaelligBisInfo, new RecordItemIndex(4));
            repo.FrmVorschlagErstellen.PostenFaelligBis.EnsureVisible();
            Keyboard.Press(Faelligkeitsdatum);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Tab}' with focus on 'FrmVorschlagErstellen.PostenFaelligBis'.", repo.FrmVorschlagErstellen.PostenFaelligBisInfo, new RecordItemIndex(5));
            repo.FrmVorschlagErstellen.PostenFaelligBis.EnsureVisible();
            Keyboard.Press("{Tab}");
            
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeEqual (Text='26.02.2021') on item 'FrmVorschlagErstellen.PostenMitLetzterMahnungVor'.", repo.FrmVorschlagErstellen.PostenMitLetzterMahnungVorInfo, new RecordItemIndex(6));
                Validate.AttributeEqual(repo.FrmVorschlagErstellen.PostenMitLetzterMahnungVorInfo, "Text", "26.02.2021", null, new Validate.Options(){ReportScreenshot=Validate.ResultOption.Always});
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(6)); }
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left DoubleClick item 'FrmVorschlagErstellen.ZahlungenBeruecksichtigtBis' at Center.", repo.FrmVorschlagErstellen.ZahlungenBeruecksichtigtBisInfo, new RecordItemIndex(7));
            repo.FrmVorschlagErstellen.ZahlungenBeruecksichtigtBis.DoubleClick();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Back}' with focus on 'FrmVorschlagErstellen.ZahlungenBeruecksichtigtBis'.", repo.FrmVorschlagErstellen.ZahlungenBeruecksichtigtBisInfo, new RecordItemIndex(8));
            repo.FrmVorschlagErstellen.ZahlungenBeruecksichtigtBis.PressKeys("{Back}");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Zahlungen_bis' with focus on 'FrmVorschlagErstellen.ZahlungenBeruecksichtigtBis'.", repo.FrmVorschlagErstellen.ZahlungenBeruecksichtigtBisInfo, new RecordItemIndex(9));
            repo.FrmVorschlagErstellen.ZahlungenBeruecksichtigtBis.PressKeys(Zahlungen_bis);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Tab}' with focus on 'FrmVorschlagErstellen.ZahlungenBeruecksichtigtBis'.", repo.FrmVorschlagErstellen.ZahlungenBeruecksichtigtBisInfo, new RecordItemIndex(10));
            repo.FrmVorschlagErstellen.ZahlungenBeruecksichtigtBis.PressKeys("{Tab}");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Beschreibung' with focus on 'FrmVorschlagErstellen.Beschreibung'.", repo.FrmVorschlagErstellen.BeschreibungInfo, new RecordItemIndex(11));
            repo.FrmVorschlagErstellen.Beschreibung.PressKeys(Beschreibung);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Tab}' with focus on 'FrmVorschlagErstellen.Beschreibung'.", repo.FrmVorschlagErstellen.BeschreibungInfo, new RecordItemIndex(12));
            repo.FrmVorschlagErstellen.Beschreibung.PressKeys("{Tab}");
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
