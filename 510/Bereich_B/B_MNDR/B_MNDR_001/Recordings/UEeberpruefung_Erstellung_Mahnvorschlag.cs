///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace B_MNDR_001.Recordings
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The UEeberpruefung_Erstellung_Mahnvorschlag recording.
    /// </summary>
    [TestModule("a764b9c8-a3cd-4e30-8feb-a07f052ab6a4", ModuleType.Recording, 1)]
    public partial class UEeberpruefung_Erstellung_Mahnvorschlag : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::B_MNDR_001.B_MNDR_001Repository repository.
        /// </summary>
        public static global::B_MNDR_001.B_MNDR_001Repository repo = global::B_MNDR_001.B_MNDR_001Repository.Instance;

        static UEeberpruefung_Erstellung_Mahnvorschlag instance = new UEeberpruefung_Erstellung_Mahnvorschlag();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public UEeberpruefung_Erstellung_Mahnvorschlag()
        {
            Tagesdatum = "";
            Beschreibung = "B_MNDR_001";
            Mahndatum = "04.03.2021";
            Faelligkeitsdatum = "03.03.2021";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static UEeberpruefung_Erstellung_Mahnvorschlag Instance
        {
            get { return instance; }
        }

#region Variables

        string _Tagesdatum;

        /// <summary>
        /// Gets or sets the value of variable Tagesdatum.
        /// </summary>
        [TestVariable("c46028eb-2330-4edd-9770-b552a6993ae3")]
        public string Tagesdatum
        {
            get { return _Tagesdatum; }
            set { _Tagesdatum = value; }
        }

        string _Mahndatum;

        /// <summary>
        /// Gets or sets the value of variable Mahndatum.
        /// </summary>
        [TestVariable("7177af7d-bae5-4962-b893-28f3806add21")]
        public string Mahndatum
        {
            get { return _Mahndatum; }
            set { _Mahndatum = value; }
        }

        string _Faelligkeitsdatum;

        /// <summary>
        /// Gets or sets the value of variable Faelligkeitsdatum.
        /// </summary>
        [TestVariable("404a87a3-d1d5-4ca2-9b28-6efd4da275ef")]
        public string Faelligkeitsdatum
        {
            get { return _Faelligkeitsdatum; }
            set { _Faelligkeitsdatum = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable Beschreibung.
        /// </summary>
        [TestVariable("09aa442d-a00a-475e-9e12-044e0b3c6d08")]
        public string Beschreibung
        {
            get { return repo.Beschreibung; }
            set { repo.Beschreibung = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'TblMndt.FlexGrid_Tabelle.Row_mit_Beschreibung_B_MNDR_01'.", repo.TblMndt.FlexGrid_Tabelle.Row_mit_Beschreibung_B_MNDR_01Info, new RecordItemIndex(0));
            Validate.Exists(repo.TblMndt.FlexGrid_Tabelle.Row_mit_Beschreibung_B_MNDR_01Info);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Tagesdatum) on item 'TblMndt.FlexGrid_Tabelle.ColMndtDtanlag_in_Zeile_mit_Beschreibung'.", repo.TblMndt.FlexGrid_Tabelle.ColMndtDtanlag_in_Zeile_mit_BeschreibungInfo, new RecordItemIndex(1));
            Validate.AttributeEqual(repo.TblMndt.FlexGrid_Tabelle.ColMndtDtanlag_in_Zeile_mit_BeschreibungInfo, "Text", Tagesdatum);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='2') on item 'TblMndt.FlexGrid_Tabelle.ColAnzKunden_in_Zeile_mit_Beschreibung'.", repo.TblMndt.FlexGrid_Tabelle.ColAnzKunden_in_Zeile_mit_BeschreibungInfo, new RecordItemIndex(2));
            Validate.AttributeEqual(repo.TblMndt.FlexGrid_Tabelle.ColAnzKunden_in_Zeile_mit_BeschreibungInfo, "Text", "2");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='4') on item 'TblMndt.FlexGrid_Tabelle.ColAnzNr_in_Zeile_mit_Beschreibung'.", repo.TblMndt.FlexGrid_Tabelle.ColAnzNr_in_Zeile_mit_BeschreibungInfo, new RecordItemIndex(3));
            Validate.AttributeEqual(repo.TblMndt.FlexGrid_Tabelle.ColAnzNr_in_Zeile_mit_BeschreibungInfo, "Text", "4");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Faelligkeitsdatum) on item 'TblMndt.FlexGrid_Tabelle.ColMndtFaellig_Zeile_mit_Beschreibung'.", repo.TblMndt.FlexGrid_Tabelle.ColMndtFaellig_Zeile_mit_BeschreibungInfo, new RecordItemIndex(4));
            Validate.AttributeEqual(repo.TblMndt.FlexGrid_Tabelle.ColMndtFaellig_Zeile_mit_BeschreibungInfo, "Text", Faelligkeitsdatum);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Mahndatum) on item 'TblMndt.FlexGrid_Tabelle.ColMndtAktuell_in_Zeile_mit_Beschreibung'.", repo.TblMndt.FlexGrid_Tabelle.ColMndtAktuell_in_Zeile_mit_BeschreibungInfo, new RecordItemIndex(5));
            Validate.AttributeEqual(repo.TblMndt.FlexGrid_Tabelle.ColMndtAktuell_in_Zeile_mit_BeschreibungInfo, "Text", Mahndatum);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
