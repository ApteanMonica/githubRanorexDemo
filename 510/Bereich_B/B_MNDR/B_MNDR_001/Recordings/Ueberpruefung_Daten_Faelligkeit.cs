///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace B_MNDR_001.Recordings
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Ueberpruefung_Daten_Faelligkeit recording.
    /// </summary>
    [TestModule("2eeddfaa-6110-4c20-ba30-70de98a764ed", ModuleType.Recording, 1)]
    public partial class Ueberpruefung_Daten_Faelligkeit : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::B_MNDR_001.B_MNDR_001Repository repository.
        /// </summary>
        public static global::B_MNDR_001.B_MNDR_001Repository repo = global::B_MNDR_001.B_MNDR_001Repository.Instance;

        static Ueberpruefung_Daten_Faelligkeit instance = new Ueberpruefung_Daten_Faelligkeit();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Ueberpruefung_Daten_Faelligkeit()
        {
            Mahndatum = "04.03.2021";
            Faelligkeitsdatum = "03.03.2021";
            Zahlungen_bis = "03.03.2021";
            Posten_letzte_Mahnung_vor = "26.02.2021";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Ueberpruefung_Daten_Faelligkeit Instance
        {
            get { return instance; }
        }

#region Variables

        string _Mahndatum;

        /// <summary>
        /// Gets or sets the value of variable Mahndatum.
        /// </summary>
        [TestVariable("207eb433-3461-4906-bc7c-cf8c18bbc3eb")]
        public string Mahndatum
        {
            get { return _Mahndatum; }
            set { _Mahndatum = value; }
        }

        string _Faelligkeitsdatum;

        /// <summary>
        /// Gets or sets the value of variable Faelligkeitsdatum.
        /// </summary>
        [TestVariable("87436b7d-e524-4184-918e-116629b9e8d9")]
        public string Faelligkeitsdatum
        {
            get { return _Faelligkeitsdatum; }
            set { _Faelligkeitsdatum = value; }
        }

        string _Zahlungen_bis;

        /// <summary>
        /// Gets or sets the value of variable Zahlungen_bis.
        /// </summary>
        [TestVariable("4e1e0718-00fa-46c7-b6ff-56c8eaa21f76")]
        public string Zahlungen_bis
        {
            get { return _Zahlungen_bis; }
            set { _Zahlungen_bis = value; }
        }

        string _Posten_letzte_Mahnung_vor;

        /// <summary>
        /// Gets or sets the value of variable Posten_letzte_Mahnung_vor.
        /// </summary>
        [TestVariable("239476ea-7d8c-412e-a523-6d12f9975adf")]
        public string Posten_letzte_Mahnung_vor
        {
            get { return _Posten_letzte_Mahnung_vor; }
            set { _Posten_letzte_Mahnung_vor = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmVorschlagErstellen.TabPageFaelligkeit' at Center.", repo.FrmVorschlagErstellen.TabPageFaelligkeitInfo, new RecordItemIndex(0));
            repo.FrmVorschlagErstellen.TabPageFaelligkeit.Click();
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 2m to exist. Associated repository item: 'FrmVorschlagErstellen.Register_Faelligkeit.DatumDerMahnung'", repo.FrmVorschlagErstellen.Register_Faelligkeit.DatumDerMahnungInfo, new ActionTimeout(120000), new RecordItemIndex(1));
            repo.FrmVorschlagErstellen.Register_Faelligkeit.DatumDerMahnungInfo.WaitForExists(120000);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Mahndatum) on item 'FrmVorschlagErstellen.Register_Faelligkeit.DatumDerMahnung'.", repo.FrmVorschlagErstellen.Register_Faelligkeit.DatumDerMahnungInfo, new RecordItemIndex(2));
            Validate.AttributeEqual(repo.FrmVorschlagErstellen.Register_Faelligkeit.DatumDerMahnungInfo, "Text", Mahndatum);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Faelligkeitsdatum) on item 'FrmVorschlagErstellen.Register_Faelligkeit.PostenFaelligBis'.", repo.FrmVorschlagErstellen.Register_Faelligkeit.PostenFaelligBisInfo, new RecordItemIndex(3));
            Validate.AttributeEqual(repo.FrmVorschlagErstellen.Register_Faelligkeit.PostenFaelligBisInfo, "Text", Faelligkeitsdatum);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Posten_letzte_Mahnung_vor) on item 'FrmVorschlagErstellen.Register_Faelligkeit.PostenMitLetzterMahnungVor'.", repo.FrmVorschlagErstellen.Register_Faelligkeit.PostenMitLetzterMahnungVorInfo, new RecordItemIndex(4));
            Validate.AttributeEqual(repo.FrmVorschlagErstellen.Register_Faelligkeit.PostenMitLetzterMahnungVorInfo, "Text", Posten_letzte_Mahnung_vor, null, new Validate.Options(){ReportScreenshot=Validate.ResultOption.Always});
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Zahlungen_bis) on item 'FrmVorschlagErstellen.Register_Faelligkeit.ZahlungenBeruecksichtigtBis'.", repo.FrmVorschlagErstellen.Register_Faelligkeit.ZahlungenBeruecksichtigtBisInfo, new RecordItemIndex(5));
            Validate.AttributeEqual(repo.FrmVorschlagErstellen.Register_Faelligkeit.ZahlungenBeruecksichtigtBisInfo, "Text", Zahlungen_bis);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='8') on item 'FrmVorschlagErstellen.Register_Faelligkeit.DfFristtage_letzte_Zahlungsfrist'.", repo.FrmVorschlagErstellen.Register_Faelligkeit.DfFristtage_letzte_ZahlungsfristInfo, new RecordItemIndex(6));
            Validate.AttributeEqual(repo.FrmVorschlagErstellen.Register_Faelligkeit.DfFristtage_letzte_ZahlungsfristInfo, "Text", "8");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='') on item 'FrmVorschlagErstellen.Register_Faelligkeit.DfMahnsperre_Mahnkennz'.", repo.FrmVorschlagErstellen.Register_Faelligkeit.DfMahnsperre_MahnkennzInfo, new RecordItemIndex(7));
            Validate.AttributeEqual(repo.FrmVorschlagErstellen.Register_Faelligkeit.DfMahnsperre_MahnkennzInfo, "Text", "");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Checked='False') on item 'FrmVorschlagErstellen.Register_Faelligkeit.CheckBoxCbG'.", repo.FrmVorschlagErstellen.Register_Faelligkeit.CheckBoxCbGInfo, new RecordItemIndex(8));
            Validate.AttributeEqual(repo.FrmVorschlagErstellen.Register_Faelligkeit.CheckBoxCbGInfo, "Checked", "False");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Checked='False') on item 'FrmVorschlagErstellen.Register_Faelligkeit.Vorauszahlungen'.", repo.FrmVorschlagErstellen.Register_Faelligkeit.VorauszahlungenInfo, new RecordItemIndex(9));
            Validate.AttributeEqual(repo.FrmVorschlagErstellen.Register_Faelligkeit.VorauszahlungenInfo, "Checked", "False");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Checked='False') on item 'FrmVorschlagErstellen.Register_Faelligkeit.CbBankeinzug'.", repo.FrmVorschlagErstellen.Register_Faelligkeit.CbBankeinzugInfo, new RecordItemIndex(10));
            Validate.AttributeEqual(repo.FrmVorschlagErstellen.Register_Faelligkeit.CbBankeinzugInfo, "Checked", "False");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Checked='False') on item 'FrmVorschlagErstellen.Register_Faelligkeit.CbKeineNegSum'.", repo.FrmVorschlagErstellen.Register_Faelligkeit.CbKeineNegSumInfo, new RecordItemIndex(11));
            Validate.AttributeEqual(repo.FrmVorschlagErstellen.Register_Faelligkeit.CbKeineNegSumInfo, "Checked", "False");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Checked='False') on item 'FrmVorschlagErstellen.Register_Faelligkeit.CbZlvs'.", repo.FrmVorschlagErstellen.Register_Faelligkeit.CbZlvsInfo, new RecordItemIndex(12));
            Validate.AttributeEqual(repo.FrmVorschlagErstellen.Register_Faelligkeit.CbZlvsInfo, "Checked", "False");
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
