///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace B_MNDR_003.Recordings
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Erweiterung_ueberpruefen recording.
    /// </summary>
    [TestModule("b969f0a1-d351-4351-b2ed-c739470e0a01", ModuleType.Recording, 1)]
    public partial class Erweiterung_ueberpruefen : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::B_MNDR_003.B_MNDR_003Repository repository.
        /// </summary>
        public static global::B_MNDR_003.B_MNDR_003Repository repo = global::B_MNDR_003.B_MNDR_003Repository.Instance;

        static Erweiterung_ueberpruefen instance = new Erweiterung_ueberpruefen();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Erweiterung_ueberpruefen()
        {
            Kunde_1 = "200021";
            Kunde_2 = "200022";
            Beschreibung = "B_MNDR_003";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Erweiterung_ueberpruefen Instance
        {
            get { return instance; }
        }

#region Variables

        string _Kunde_1;

        /// <summary>
        /// Gets or sets the value of variable Kunde_1.
        /// </summary>
        [TestVariable("b21c973e-54a1-4026-a296-276c6f5460f5")]
        public string Kunde_1
        {
            get { return _Kunde_1; }
            set { _Kunde_1 = value; }
        }

        string _Kunde_2;

        /// <summary>
        /// Gets or sets the value of variable Kunde_2.
        /// </summary>
        [TestVariable("81bc2561-d462-4490-a74f-ae7aab05cf45")]
        public string Kunde_2
        {
            get { return _Kunde_2; }
            set { _Kunde_2 = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable Beschreibung.
        /// </summary>
        [TestVariable("a341d48a-e072-4868-a5ed-5e5a958ee89a")]
        public string Beschreibung
        {
            get { return repo.Beschreibung; }
            set { repo.Beschreibung = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'TblMndt.TitleBar100MahnenKunden'.", repo.TblMndt.TitleBar100MahnenKundenInfo, new RecordItemIndex(0));
            Validate.Exists(repo.TblMndt.TitleBar100MahnenKundenInfo);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='4') on item 'TblMndt.FlexGrid_Tabelle.ColAnzNr_in_Zeile_mit_Beschreibung'.", repo.TblMndt.FlexGrid_Tabelle.ColAnzNr_in_Zeile_mit_BeschreibungInfo, new RecordItemIndex(1));
            Validate.AttributeEqual(repo.TblMndt.FlexGrid_Tabelle.ColAnzNr_in_Zeile_mit_BeschreibungInfo, "Text", "4");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left DoubleClick item 'TblMndt.FlexGrid_Tabelle.Column0_Zeile_mit_Beschreibung' at Center.", repo.TblMndt.FlexGrid_Tabelle.Column0_Zeile_mit_BeschreibungInfo, new RecordItemIndex(2));
            repo.TblMndt.FlexGrid_Tabelle.Column0_Zeile_mit_Beschreibung.DoubleClick();
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 2m to exist. Associated repository item: 'FrmVorschlagAEndern.TitleBar1003BMNDR003Mahnvorschla'", repo.FrmVorschlagAEndern.TitleBar1003BMNDR003MahnvorschlaInfo, new ActionTimeout(120000), new RecordItemIndex(3));
            repo.FrmVorschlagAEndern.TitleBar1003BMNDR003MahnvorschlaInfo.WaitForExists(120000);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (Text>$Beschreibung) on item 'FrmVorschlagAEndern.TitleBar1003BMNDR003Mahnvorschla'.", repo.FrmVorschlagAEndern.TitleBar1003BMNDR003MahnvorschlaInfo, new RecordItemIndex(4));
            //Validate.AttributeContains(repo.FrmVorschlagAEndern.TitleBar1003BMNDR003MahnvorschlaInfo, "Text", Beschreibung);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (Text>'ändern') on item 'FrmVorschlagAEndern.TitleBar1003BMNDR003Mahnvorschla'.", repo.FrmVorschlagAEndern.TitleBar1003BMNDR003MahnvorschlaInfo, new RecordItemIndex(5));
            Validate.AttributeContains(repo.FrmVorschlagAEndern.TitleBar1003BMNDR003MahnvorschlaInfo, "Text", "ändern");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Kunde_2) on item 'FrmVorschlagAEndern.FlexGrid_Tabelle.ColAdrNrRow3'.", repo.FrmVorschlagAEndern.FlexGrid_Tabelle.ColAdrNrRow3Info, new RecordItemIndex(6));
            Validate.AttributeEqual(repo.FrmVorschlagAEndern.FlexGrid_Tabelle.ColAdrNrRow3Info, "Text", Kunde_2);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='B_MNDR_003_03') on item 'FrmVorschlagAEndern.FlexGrid_Tabelle.ColBelegRow3'.", repo.FrmVorschlagAEndern.FlexGrid_Tabelle.ColBelegRow3Info, new RecordItemIndex(7));
            Validate.AttributeEqual(repo.FrmVorschlagAEndern.FlexGrid_Tabelle.ColBelegRow3Info, "Text", "B_MNDR_003_03");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='14.02.2021') on item 'FrmVorschlagAEndern.FlexGrid_Tabelle.ColFaelligRow3'.", repo.FrmVorschlagAEndern.FlexGrid_Tabelle.ColFaelligRow3Info, new RecordItemIndex(8));
            Validate.AttributeEqual(repo.FrmVorschlagAEndern.FlexGrid_Tabelle.ColFaelligRow3Info, "Text", "14.02.2021");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='1') on item 'FrmVorschlagAEndern.FlexGrid_Tabelle.ColStufeRow3'.", repo.FrmVorschlagAEndern.FlexGrid_Tabelle.ColStufeRow3Info, new RecordItemIndex(9));
            Validate.AttributeEqual(repo.FrmVorschlagAEndern.FlexGrid_Tabelle.ColStufeRow3Info, "Text", "1");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='J') on item 'FrmVorschlagAEndern.FlexGrid_Tabelle.ColSperreRow3'.", repo.FrmVorschlagAEndern.FlexGrid_Tabelle.ColSperreRow3Info, new RecordItemIndex(10));
            Validate.AttributeEqual(repo.FrmVorschlagAEndern.FlexGrid_Tabelle.ColSperreRow3Info, "Text", "J");
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
