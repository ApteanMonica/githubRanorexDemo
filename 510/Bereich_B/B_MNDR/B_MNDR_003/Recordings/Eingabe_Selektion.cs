///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace B_MNDR_003.Recordings
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Eingabe_Selektion recording.
    /// </summary>
    [TestModule("b098f072-25b4-4d7b-ab10-6a254c5a583a", ModuleType.Recording, 1)]
    public partial class Eingabe_Selektion : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::B_MNDR_003.B_MNDR_003Repository repository.
        /// </summary>
        public static global::B_MNDR_003.B_MNDR_003Repository repo = global::B_MNDR_003.B_MNDR_003Repository.Instance;

        static Eingabe_Selektion instance = new Eingabe_Selektion();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Eingabe_Selektion()
        {
            Kunde_1 = "200021";
            Kunde_2 = "200022";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Eingabe_Selektion Instance
        {
            get { return instance; }
        }

#region Variables

        string _Kunde_1;

        /// <summary>
        /// Gets or sets the value of variable Kunde_1.
        /// </summary>
        [TestVariable("bde00df2-5c69-40d8-9f0f-948171280342")]
        public string Kunde_1
        {
            get { return _Kunde_1; }
            set { _Kunde_1 = value; }
        }

        string _Kunde_2;

        /// <summary>
        /// Gets or sets the value of variable Kunde_2.
        /// </summary>
        [TestVariable("f31df7d4-aa51-4518-a866-d2dd861d63af")]
        public string Kunde_2
        {
            get { return _Kunde_2; }
            set { _Kunde_2 = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmVorschlagErstellen.Selektion' at Center.", repo.FrmVorschlagErstellen.SelektionInfo, new RecordItemIndex(0));
            repo.FrmVorschlagErstellen.Selektion.Click();
            
            // Überprüfung ob Klick ins Register "Seletktion" korrekt durchgeführt wurde
            Report.Log(ReportLevel.Info, "Validation", "Überprüfung ob Klick ins Register \"Seletktion\" korrekt durchgeführt wurde\r\nValidating Exists on item 'FrmVorschlagErstellen.Register_Selektion.KontoNrVon'.", repo.FrmVorschlagErstellen.Register_Selektion.KontoNrVonInfo, new RecordItemIndex(1));
            Validate.Exists(repo.FrmVorschlagErstellen.Register_Selektion.KontoNrVonInfo);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmVorschlagErstellen.Register_Selektion.KontoNrVon' at Center.", repo.FrmVorschlagErstellen.Register_Selektion.KontoNrVonInfo, new RecordItemIndex(2));
            repo.FrmVorschlagErstellen.Register_Selektion.KontoNrVon.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Kunde_1' with focus on 'FrmVorschlagErstellen.Register_Selektion.KontoNrVon'.", repo.FrmVorschlagErstellen.Register_Selektion.KontoNrVonInfo, new RecordItemIndex(3));
            repo.FrmVorschlagErstellen.Register_Selektion.KontoNrVon.PressKeys(Kunde_1);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Tab' Press.", new RecordItemIndex(4));
            Keyboard.Press(System.Windows.Forms.Keys.Tab, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Kunde_2' with focus on 'FrmVorschlagErstellen.Register_Selektion.TextBis'.", repo.FrmVorschlagErstellen.Register_Selektion.TextBisInfo, new RecordItemIndex(5));
            repo.FrmVorschlagErstellen.Register_Selektion.TextBis.PressKeys(Kunde_2);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Tab' Press.", new RecordItemIndex(6));
            Keyboard.Press(System.Windows.Forms.Keys.Tab, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Kunde_1) on item 'FrmVorschlagErstellen.Register_Selektion.KontoNrVon'.", repo.FrmVorschlagErstellen.Register_Selektion.KontoNrVonInfo, new RecordItemIndex(7));
            Validate.AttributeEqual(repo.FrmVorschlagErstellen.Register_Selektion.KontoNrVonInfo, "Text", Kunde_1);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Kunde_2) on item 'FrmVorschlagErstellen.Register_Selektion.TextBis'.", repo.FrmVorschlagErstellen.Register_Selektion.TextBisInfo, new RecordItemIndex(8));
            Validate.AttributeEqual(repo.FrmVorschlagErstellen.Register_Selektion.TextBisInfo, "Text", Kunde_2);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
