///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace B_ELSTER_2024_UVA_JUVA_ZM.Recordings_ZM
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Eric_Version_ERiC_Print_xxx_ZMDO_xxx_Bild_in_Druckvorschau_pruefen recording.
    /// </summary>
    [TestModule("3f6bc056-0c33-49e4-93dc-ca362b7b21ea", ModuleType.Recording, 1)]
    public partial class Eric_Version_ERiC_Print_xxx_ZMDO_xxx_Bild_in_Druckvorschau_pruefen : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::B_ELSTER_2024_UVA_JUVA_ZM.B_ELSTER_2024_UVA_JUVA_ZMRepository repository.
        /// </summary>
        public static global::B_ELSTER_2024_UVA_JUVA_ZM.B_ELSTER_2024_UVA_JUVA_ZMRepository repo = global::B_ELSTER_2024_UVA_JUVA_ZM.B_ELSTER_2024_UVA_JUVA_ZMRepository.Instance;

        static Eric_Version_ERiC_Print_xxx_ZMDO_xxx_Bild_in_Druckvorschau_pruefen instance = new Eric_Version_ERiC_Print_xxx_ZMDO_xxx_Bild_in_Druckvorschau_pruefen();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Eric_Version_ERiC_Print_xxx_ZMDO_xxx_Bild_in_Druckvorschau_pruefen()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Eric_Version_ERiC_Print_xxx_ZMDO_xxx_Bild_in_Druckvorschau_pruefen Instance
        {
            get { return instance; }
        }

#region Variables

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            // wenn erfolgreich, muss der Button aktiv sein
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nwenn erfolgreich, muss der Button aktiv sein\r\nValidating AttributeEqual (Enabled='True') on item 'FrmMain_B_ELSTER.ClientArea.PbDrucken'.", repo.FrmMain_B_ELSTER.ClientArea.PbDruckenInfo, new RecordItemIndex(0));
                Validate.AttributeEqual(repo.FrmMain_B_ELSTER.ClientArea.PbDruckenInfo, "Enabled", "True", null, false);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(0)); }
            
            try {
                Report.Log(ReportLevel.Info, "Mouse", "(Optional Action)\r\nMouse Left Click item 'FrmMain_B_ELSTER.ClientArea.PbDrucken' at Center.", repo.FrmMain_B_ELSTER.ClientArea.PbDruckenInfo, new RecordItemIndex(1));
                repo.FrmMain_B_ELSTER.ClientArea.PbDrucken.Click();
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(1)); }
            
            try {
                Report.Log(ReportLevel.Info, "Wait", "(Optional Action)\r\nWaiting 2m to exist. Associated repository item: 'ElstervorUVATESTPDFAdobeAcrobatRe.ElstervorUVATESTPDFAdobeAcrobatRe'", repo.ElstervorUVATESTPDFAdobeAcrobatRe.ElstervorUVATESTPDFAdobeAcrobatReInfo, new ActionTimeout(120000), new RecordItemIndex(2));
                repo.ElstervorUVATESTPDFAdobeAcrobatRe.ElstervorUVATESTPDFAdobeAcrobatReInfo.WaitForExists(120000);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(2)); }
            
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeContains (Text>'ZMDO') on item 'ElstervorUVATESTPDFAdobeAcrobatRe.ElstervorUVATESTPDFAdobeAcrobatRe'.", repo.ElstervorUVATESTPDFAdobeAcrobatRe.ElstervorUVATESTPDFAdobeAcrobatReInfo, new RecordItemIndex(3));
                Validate.AttributeContains(repo.ElstervorUVATESTPDFAdobeAcrobatRe.ElstervorUVATESTPDFAdobeAcrobatReInfo, "Text", "ZMDO", null, false);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(3)); }
            
            try {
                Report.Log(ReportLevel.Info, "Keyboard", "(Optional Action)\r\nKey 'End' Press.", new RecordItemIndex(4));
                Keyboard.Press(System.Windows.Forms.Keys.End, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(4)); }
            
            try {
                Report.Log(ReportLevel.Info, "Delay", "(Optional Action)\r\nWaiting for 1s.", new RecordItemIndex(5));
                Delay.Duration(1000, false);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(5)); }
            
            try {
                Report.Screenshot(ReportLevel.Info, "User", "", null, false, new RecordItemIndex(6));
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(6)); }
            
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating ContainsImage (Screenshot: 'ERiC_Print_39_2_4_ZMDO_39_2_4' with region {X=993,Y=905,Width=472,Height=26}) on item 'ElstervorUVATESTPDFAdobeAcrobatRe.AVLAVView'.", repo.ElstervorUVATESTPDFAdobeAcrobatRe.AVLAVViewInfo, new RecordItemIndex(7));
                Validate.ContainsImage(repo.ElstervorUVATESTPDFAdobeAcrobatRe.AVLAVViewInfo, AVLAVView_ERiC_Print_39_2_4_ZMDO_39_2_4, AVLAVView_ERiC_Print_39_2_4_ZMDO_39_2_4_Options, null, false);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(7)); }
            
            try {
                //Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeContains (WindowText>'ERiC-Print 39.2.4/ZMDO 39.2.4') on item 'ElstervorUVATESTPDFAdobeAcrobatRe.AVLAVView'.", repo.ElstervorUVATESTPDFAdobeAcrobatRe.AVLAVViewInfo, new RecordItemIndex(8));
                //Validate.AttributeContains(repo.ElstervorUVATESTPDFAdobeAcrobatRe.AVLAVViewInfo, "WindowText", "ERiC-Print 39.2.4/ZMDO 39.2.4", null, false);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(8)); }
            
            try {
                Report.Log(ReportLevel.Info, "Keyboard", "(Optional Action)\r\nKey 'Alt+F4' Press with focus on 'ElstervorUVATESTPDFAdobeAcrobatRe.ElstervorUVATESTPDFAdobeAcrobatRe'.", repo.ElstervorUVATESTPDFAdobeAcrobatRe.ElstervorUVATESTPDFAdobeAcrobatReInfo, new RecordItemIndex(9));
                Keyboard.PrepareFocus(repo.ElstervorUVATESTPDFAdobeAcrobatRe.ElstervorUVATESTPDFAdobeAcrobatRe);
                Keyboard.Press(System.Windows.Forms.Keys.F4 | System.Windows.Forms.Keys.Alt, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(9)); }
            
        }

#region Image Feature Data
        /// <summary>
        /// DO NOT REFERENCE THIS CODE  - auto generated
        /// </summary>
        CompressedImage AVLAVView_ERiC_Print_39_2_4_ZMDO_39_2_4
        { get { return repo.ElstervorUVATESTPDFAdobeAcrobatRe.AVLAVViewInfo.GetERiC_Print_39_2_4_ZMDO_39_2_4(new Rectangle(993, 905, 472, 26)); } }

        /// <summary>
        /// DO NOT REFERENCE THIS CODE  - auto generated
        /// </summary>
        Imaging.FindOptions AVLAVView_ERiC_Print_39_2_4_ZMDO_39_2_4_Options
        { get { return Imaging.FindOptions.Default; } }

#endregion
    }
#pragma warning restore 0436
}
