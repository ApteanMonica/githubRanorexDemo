///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace B_ELSTER_2024_UVA_JUVA_ZM.Recordings_B_ELSTER
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Elster_Plausipruefung_durchfuehren recording.
    /// </summary>
    [TestModule("60827fa1-73d9-4db6-bc03-a8a17898fb72", ModuleType.Recording, 1)]
    public partial class Elster_Plausipruefung_durchfuehren : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::B_ELSTER_2024_UVA_JUVA_ZM.B_ELSTER_2024_UVA_JUVA_ZMRepository repository.
        /// </summary>
        public static global::B_ELSTER_2024_UVA_JUVA_ZM.B_ELSTER_2024_UVA_JUVA_ZMRepository repo = global::B_ELSTER_2024_UVA_JUVA_ZM.B_ELSTER_2024_UVA_JUVA_ZMRepository.Instance;

        static Elster_Plausipruefung_durchfuehren instance = new Elster_Plausipruefung_durchfuehren();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Elster_Plausipruefung_durchfuehren()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Elster_Plausipruefung_durchfuehren Instance
        {
            get { return instance; }
        }

#region Variables

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'FrmMain.ClientArea.PbPlausi'.", repo.FrmMain.ClientArea.PbPlausiInfo, new RecordItemIndex(0));
            Validate.Exists(repo.FrmMain.ClientArea.PbPlausiInfo);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Enabled='True') on item 'FrmMain.ClientArea.PbPlausi'.", repo.FrmMain.ClientArea.PbPlausiInfo, new RecordItemIndex(1));
            Validate.AttributeEqual(repo.FrmMain.ClientArea.PbPlausiInfo, "Enabled", "True");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Enabled='False') on item 'FrmMain.ClientArea.PbDrucken'.", repo.FrmMain.ClientArea.PbDruckenInfo, new RecordItemIndex(2));
            Validate.AttributeEqual(repo.FrmMain.ClientArea.PbDruckenInfo, "Enabled", "False");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Enabled='False') on item 'FrmMain.ClientArea.PbSenden'.", repo.FrmMain.ClientArea.PbSendenInfo, new RecordItemIndex(3));
            Validate.AttributeEqual(repo.FrmMain.ClientArea.PbSendenInfo, "Enabled", "False");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmMain.ClientArea.PbPlausi' at Center.", repo.FrmMain.ClientArea.PbPlausiInfo, new RecordItemIndex(4));
            repo.FrmMain.ClientArea.PbPlausi.Click();
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 1m to not exist. Associated repository item: 'Frage_Fehler_Plausipruefung.Fehlermeldung_Plausipruefung'", repo.Frage_Fehler_Plausipruefung.Fehlermeldung_PlausipruefungInfo, new ActionTimeout(60000), new RecordItemIndex(5));
            repo.Frage_Fehler_Plausipruefung.Fehlermeldung_PlausipruefungInfo.WaitForNotExists(60000);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 2m to exist. Associated repository item: 'FrmMain.ClientArea.Button_Druckvorschau_aktiv'", repo.FrmMain.ClientArea.Button_Druckvorschau_aktivInfo, new ActionTimeout(120000), new RecordItemIndex(6));
            repo.FrmMain.ClientArea.Button_Druckvorschau_aktivInfo.WaitForExists(120000);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Enabled='True') on item 'FrmMain.ClientArea.PbPlausi'.", repo.FrmMain.ClientArea.PbPlausiInfo, new RecordItemIndex(7));
            Validate.AttributeEqual(repo.FrmMain.ClientArea.PbPlausiInfo, "Enabled", "True");
            
            // wenn erfolgreich, muss der Button aktiv sein
            Report.Log(ReportLevel.Info, "Validation", "wenn erfolgreich, muss der Button aktiv sein\r\nValidating AttributeEqual (Enabled='True') on item 'FrmMain.ClientArea.PbDrucken'.", repo.FrmMain.ClientArea.PbDruckenInfo, new RecordItemIndex(8));
            Validate.AttributeEqual(repo.FrmMain.ClientArea.PbDruckenInfo, "Enabled", "True");
            
            // wenn erfolgreich, muss der Button aktiv sein
            Report.Log(ReportLevel.Info, "Validation", "wenn erfolgreich, muss der Button aktiv sein\r\nValidating AttributeEqual (Enabled='True') on item 'FrmMain.ClientArea.PbSenden'.", repo.FrmMain.ClientArea.PbSendenInfo, new RecordItemIndex(9));
            Validate.AttributeEqual(repo.FrmMain.ClientArea.PbSendenInfo, "Enabled", "True");
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
