///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace B_BUOPPR_001.Recordings_Einschraenkungen
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Einschraenkungen_LF1_LF2 recording.
    /// </summary>
    [TestModule("b18cac9f-a244-4db1-930d-d0de5057d14f", ModuleType.Recording, 1)]
    public partial class Einschraenkungen_LF1_LF2 : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::B_BUOPPR_001.B_BUOPPR_001Repository repository.
        /// </summary>
        public static global::B_BUOPPR_001.B_BUOPPR_001Repository repo = global::B_BUOPPR_001.B_BUOPPR_001Repository.Instance;

        static Einschraenkungen_LF1_LF2 instance = new Einschraenkungen_LF1_LF2();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Einschraenkungen_LF1_LF2()
        {
            LF_1 = "303006";
            LF_2 = "303007";
            KL = "L";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Einschraenkungen_LF1_LF2 Instance
        {
            get { return instance; }
        }

#region Variables

        string _LF_1;

        /// <summary>
        /// Gets or sets the value of variable LF_1.
        /// </summary>
        [TestVariable("051ab3c2-dbef-41eb-a8fa-84c619e57904")]
        public string LF_1
        {
            get { return _LF_1; }
            set { _LF_1 = value; }
        }

        string _LF_2;

        /// <summary>
        /// Gets or sets the value of variable LF_2.
        /// </summary>
        [TestVariable("96aeb3c5-0baf-43f7-9c28-d3efc13f1ab7")]
        public string LF_2
        {
            get { return _LF_2; }
            set { _LF_2 = value; }
        }

        string _KL;

        /// <summary>
        /// Gets or sets the value of variable KL.
        /// </summary>
        [TestVariable("b50eefcd-278f-42ad-9974-083c9ae68b12")]
        public string KL
        {
            get { return _KL; }
            set { _KL = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$KL' with focus on 'FrmMain.KundenLieferantenKL'.", repo.FrmMain.KundenLieferantenKLInfo, new RecordItemIndex(0));
            repo.FrmMain.KundenLieferantenKL.EnsureVisible();
            Keyboard.Press(KL);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Tab' Press.", new RecordItemIndex(1));
            Keyboard.Press(System.Windows.Forms.Keys.Tab, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$LF_1' with focus on 'FrmMain.Text_Adr_von_'.", repo.FrmMain.Text_Adr_von_Info, new RecordItemIndex(2));
            repo.FrmMain.Text_Adr_von_.PressKeys(LF_1);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Tab' Press.", new RecordItemIndex(3));
            Keyboard.Press(System.Windows.Forms.Keys.Tab, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$LF_2' with focus on 'FrmMain.Text1_Adr_bis'.", repo.FrmMain.Text1_Adr_bisInfo, new RecordItemIndex(4));
            repo.FrmMain.Text1_Adr_bis.PressKeys(LF_2);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Tab' Press.", new RecordItemIndex(5));
            Keyboard.Press(System.Windows.Forms.Keys.Tab, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$KL) on item 'FrmMain.KundenLieferantenKL'.", repo.FrmMain.KundenLieferantenKLInfo, new RecordItemIndex(6));
            Validate.AttributeEqual(repo.FrmMain.KundenLieferantenKLInfo, "Text", KL);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$LF_1) on item 'FrmMain.Text_Adr_von_'.", repo.FrmMain.Text_Adr_von_Info, new RecordItemIndex(7));
            Validate.AttributeEqual(repo.FrmMain.Text_Adr_von_Info, "Text", LF_1);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$LF_2) on item 'FrmMain.Text1_Adr_bis'.", repo.FrmMain.Text1_Adr_bisInfo, new RecordItemIndex(8));
            Validate.AttributeEqual(repo.FrmMain.Text1_Adr_bisInfo, "Text", LF_2);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
