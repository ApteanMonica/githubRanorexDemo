///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace X_MUSTER_010.Recordings
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The GetValue recording.
    /// </summary>
    [TestModule("25bb62c2-5dad-47b9-90a4-8e03c4c7c5ae", ModuleType.Recording, 1)]
    public partial class GetValue : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::X_MUSTER_010.X_MUSTER_010Repository repository.
        /// </summary>
        public static global::X_MUSTER_010.X_MUSTER_010Repository repo = global::X_MUSTER_010.X_MUSTER_010Repository.Instance;

        static GetValue instance = new GetValue();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public GetValue()
        {
            adr_nr = "200018";
            getValue = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static GetValue Instance
        {
            get { return instance; }
        }

#region Variables

        string _adr_nr;

        /// <summary>
        /// Gets or sets the value of variable adr_nr.
        /// </summary>
        [TestVariable("b44c95d6-9620-4769-af51-8e250681f185")]
        public string adr_nr
        {
            get { return _adr_nr; }
            set { _adr_nr = value; }
        }

        string _getValue;

        /// <summary>
        /// Gets or sets the value of variable getValue.
        /// </summary>
        [TestVariable("c1a2b2de-3088-41df-a858-82fb8edcdf3c")]
        public string getValue
        {
            get { return _getValue; }
            set { _getValue = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmAdr.Text' at Center.", repo.FrmAdr.TextInfo, new RecordItemIndex(0));
            repo.FrmAdr.Text.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$adr_nr' with focus on 'FrmAdr.Text'.", repo.FrmAdr.TextInfo, new RecordItemIndex(1));
            repo.FrmAdr.Text.PressKeys(adr_nr);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmAdr.PbPerformSimpleSearch' at Center.", repo.FrmAdr.PbPerformSimpleSearchInfo, new RecordItemIndex(2));
            repo.FrmAdr.PbPerformSimpleSearch.Click();
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$adr_nr) on item 'FrmAdr.Nummer'.", repo.FrmAdr.NummerInfo, new RecordItemIndex(3));
            Validate.AttributeEqual(repo.FrmAdr.NummerInfo, "Text", adr_nr);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmAdr.Ansprechpersonen' at Center.", repo.FrmAdr.AnsprechpersonenInfo, new RecordItemIndex(4));
            repo.FrmAdr.Ansprechpersonen.Click();
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'FrmAdr.Row1Column0'.", repo.FrmAdr.Row1Column0Info, new RecordItemIndex(5));
            Validate.Exists(repo.FrmAdr.Row1Column0Info);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'FrmAdr.Row1Column01'.", repo.FrmAdr.Row1Column01Info, new RecordItemIndex(6));
            Validate.Exists(repo.FrmAdr.Row1Column01Info);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'Text' from item 'FrmAdr.ColTelCodeRow1' and assigning its value to variable 'getValue'.", repo.FrmAdr.ColTelCodeRow1Info, new RecordItemIndex(7));
            getValue = repo.FrmAdr.ColTelCodeRow1.Element.GetAttributeValueText("Text");
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
