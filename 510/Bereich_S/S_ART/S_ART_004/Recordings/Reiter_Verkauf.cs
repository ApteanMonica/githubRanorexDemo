///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace S_ART_004.Recordings
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Reiter_Verkauf recording.
    /// </summary>
    [TestModule("7d11fbc4-ab7d-4c17-8fe4-ddfd843f6333", ModuleType.Recording, 1)]
    public partial class Reiter_Verkauf : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::S_ART_004.S_ART_004Repository repository.
        /// </summary>
        public static global::S_ART_004.S_ART_004Repository repo = global::S_ART_004.S_ART_004Repository.Instance;

        static Reiter_Verkauf instance = new Reiter_Verkauf();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Reiter_Verkauf()
        {
            Kunde = "202003";
            Kundenname = "KUNDE_S_ART";
            Kundenartikelnummer = "78910";
            KundenBez = "QS Kundenartikel";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Reiter_Verkauf Instance
        {
            get { return instance; }
        }

#region Variables

        string _Kundenname;

        /// <summary>
        /// Gets or sets the value of variable Kundenname.
        /// </summary>
        [TestVariable("aaed9001-14cf-4cad-9777-0af14f20e1d4")]
        public string Kundenname
        {
            get { return _Kundenname; }
            set { _Kundenname = value; }
        }

        string _Kundenartikelnummer;

        /// <summary>
        /// Gets or sets the value of variable Kundenartikelnummer.
        /// </summary>
        [TestVariable("97ce3886-9ed2-44c2-a8a7-df3c3f697bec")]
        public string Kundenartikelnummer
        {
            get { return _Kundenartikelnummer; }
            set { _Kundenartikelnummer = value; }
        }

        string _KundenBez;

        /// <summary>
        /// Gets or sets the value of variable KundenBez.
        /// </summary>
        [TestVariable("48b260f5-6db6-45b6-b748-54fbfb94b63c")]
        public string KundenBez
        {
            get { return _KundenBez; }
            set { _KundenBez = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable Kunde.
        /// </summary>
        [TestVariable("106db226-da84-4099-afef-8eb146e1c07d")]
        public string Kunde
        {
            get { return repo.Kunde; }
            set { repo.Kunde = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmArt.PicTabsArt.TabPageVerkauf' at Center.", repo.FrmArt.PicTabsArt.TabPageVerkaufInfo, new RecordItemIndex(0));
            repo.FrmArt.PicTabsArt.TabPageVerkauf.Click();
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmArt.PicTabsArt.FlexGrid' at Center.", repo.FrmArt.PicTabsArt.FlexGridInfo, new RecordItemIndex(1));
            repo.FrmArt.PicTabsArt.FlexGrid.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Insert}' with focus on 'FrmArt.PicTabsArt.FlexGrid'.", repo.FrmArt.PicTabsArt.FlexGridInfo, new RecordItemIndex(2));
            repo.FrmArt.PicTabsArt.FlexGrid.PressKeys("{Insert}");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Kunde' with focus on 'FrmArt.PicTabsArt.Kundenartikel.Kundennummer'.", repo.FrmArt.PicTabsArt.Kundenartikel.KundennummerInfo, new RecordItemIndex(3));
            repo.FrmArt.PicTabsArt.Kundenartikel.Kundennummer.EnsureVisible();
            Keyboard.Press(Kunde);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Tab}' with focus on 'FrmArt.PicTabsArt.Kundenartikel.Kundennummer'.", repo.FrmArt.PicTabsArt.Kundenartikel.KundennummerInfo, new RecordItemIndex(4));
            repo.FrmArt.PicTabsArt.Kundenartikel.Kundennummer.PressKeys("{Tab}");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmArt.PicTabsArt.Kundenartikel.Kundenname' at Center.", repo.FrmArt.PicTabsArt.Kundenartikel.KundennameInfo, new RecordItemIndex(5));
            repo.FrmArt.PicTabsArt.Kundenartikel.Kundenname.Click();
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Kundenname) on item 'FrmArt.PicTabsArt.Kundenartikel.Kundenname'.", repo.FrmArt.PicTabsArt.Kundenartikel.KundennameInfo, new RecordItemIndex(6));
            Validate.AttributeEqual(repo.FrmArt.PicTabsArt.Kundenartikel.KundennameInfo, "Text", Kundenname);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmArt.PicTabsArt.Kundenartikel.Kundenartikelnummer' at Center.", repo.FrmArt.PicTabsArt.Kundenartikel.KundenartikelnummerInfo, new RecordItemIndex(7));
            repo.FrmArt.PicTabsArt.Kundenartikel.Kundenartikelnummer.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Kundenartikelnummer' with focus on 'FrmArt.PicTabsArt.Kundenartikel.Kundenartikelnummer'.", repo.FrmArt.PicTabsArt.Kundenartikel.KundenartikelnummerInfo, new RecordItemIndex(8));
            repo.FrmArt.PicTabsArt.Kundenartikel.Kundenartikelnummer.PressKeys(Kundenartikelnummer);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Tab}' with focus on 'FrmArt.PicTabsArt.Kundenartikel.Kundenartikelnummer'.", repo.FrmArt.PicTabsArt.Kundenartikel.KundenartikelnummerInfo, new RecordItemIndex(9));
            repo.FrmArt.PicTabsArt.Kundenartikel.Kundenartikelnummer.PressKeys("{Tab}");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Kundenartikelnummer) on item 'FrmArt.PicTabsArt.Kundenartikel.Kundenartikelnummer'.", repo.FrmArt.PicTabsArt.Kundenartikel.KundenartikelnummerInfo, new RecordItemIndex(10));
            Validate.AttributeEqual(repo.FrmArt.PicTabsArt.Kundenartikel.KundenartikelnummerInfo, "Text", Kundenartikelnummer);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmArt.PicTabsArt.Kundenartikel.KundenBez' at Center.", repo.FrmArt.PicTabsArt.Kundenartikel.KundenBezInfo, new RecordItemIndex(11));
            repo.FrmArt.PicTabsArt.Kundenartikel.KundenBez.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$KundenBez' with focus on 'FrmArt.PicTabsArt.Kundenartikel.KundenBez'.", repo.FrmArt.PicTabsArt.Kundenartikel.KundenBezInfo, new RecordItemIndex(12));
            repo.FrmArt.PicTabsArt.Kundenartikel.KundenBez.PressKeys(KundenBez);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Tab}' with focus on 'FrmArt.PicTabsArt.Kundenartikel.KundenBez'.", repo.FrmArt.PicTabsArt.Kundenartikel.KundenBezInfo, new RecordItemIndex(13));
            repo.FrmArt.PicTabsArt.Kundenartikel.KundenBez.PressKeys("{Tab}");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$KundenBez) on item 'FrmArt.PicTabsArt.Kundenartikel.KundenBez'.", repo.FrmArt.PicTabsArt.Kundenartikel.KundenBezInfo, new RecordItemIndex(14));
            Validate.AttributeEqual(repo.FrmArt.PicTabsArt.Kundenartikel.KundenBezInfo, "Text", KundenBez);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Down item 'FrmArt.PicTabsArt.Kundenartikel.SomeIndicator' at Center.", repo.FrmArt.PicTabsArt.Kundenartikel.SomeIndicatorInfo, new RecordItemIndex(15));
            repo.FrmArt.PicTabsArt.Kundenartikel.SomeIndicator.MoveTo();
            Mouse.ButtonDown(System.Windows.Forms.MouseButtons.Left);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Move item 'FrmArt.PicTabsArt.Kundenartikel.SomeIndicator' at CenterRight.", repo.FrmArt.PicTabsArt.Kundenartikel.SomeIndicatorInfo, new RecordItemIndex(16));
            repo.FrmArt.PicTabsArt.Kundenartikel.SomeIndicator.MoveTo(Location.CenterRight);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Up item 'FrmArt.PicTabsArt.Kundenartikel.SomeIndicator' at Center.", repo.FrmArt.PicTabsArt.Kundenartikel.SomeIndicatorInfo, new RecordItemIndex(17));
            repo.FrmArt.PicTabsArt.Kundenartikel.SomeIndicator.MoveTo();
            Mouse.ButtonUp(System.Windows.Forms.MouseButtons.Left);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmArt.PicTabsArt.Kundenartikel.Artikelvariante' at Center.", repo.FrmArt.PicTabsArt.Kundenartikel.ArtikelvarianteInfo, new RecordItemIndex(18));
            repo.FrmArt.PicTabsArt.Kundenartikel.Artikelvariante.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '*{Tab}' with focus on 'FrmArt.PicTabsArt.Kundenartikel.Artikelvariante'.", repo.FrmArt.PicTabsArt.Kundenartikel.ArtikelvarianteInfo, new RecordItemIndex(19));
            repo.FrmArt.PicTabsArt.Kundenartikel.Artikelvariante.PressKeys("*{Tab}");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='*') on item 'FrmArt.PicTabsArt.Kundenartikel.Artikelvariante'.", repo.FrmArt.PicTabsArt.Kundenartikel.ArtikelvarianteInfo, new RecordItemIndex(20));
            Validate.AttributeEqual(repo.FrmArt.PicTabsArt.Kundenartikel.ArtikelvarianteInfo, "Text", "*");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmArt.Speichern' at Center.", repo.FrmArt.SpeichernInfo, new RecordItemIndex(21));
            repo.FrmArt.Speichern.Click();
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
