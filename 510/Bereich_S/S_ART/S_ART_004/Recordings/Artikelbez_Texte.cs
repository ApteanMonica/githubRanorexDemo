///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace S_ART_004.Recordings
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Artikelbez_Texte recording.
    /// </summary>
    [TestModule("b79f8f96-0442-4772-ac2d-08c2f4358a9b", ModuleType.Recording, 1)]
    public partial class Artikelbez_Texte : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::S_ART_004.S_ART_004Repository repository.
        /// </summary>
        public static global::S_ART_004.S_ART_004Repository repo = global::S_ART_004.S_ART_004Repository.Instance;

        static Artikelbez_Texte instance = new Artikelbez_Texte();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Artikelbez_Texte()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Artikelbez_Texte Instance
        {
            get { return instance; }
        }

#region Variables

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmArt.PicTabsArt.Karteireiter_Texte' at Center.", repo.FrmArt.PicTabsArt.Karteireiter_TexteInfo, new RecordItemIndex(0));
            repo.FrmArt.PicTabsArt.Karteireiter_Texte.Click();
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmArt.PicTabsArt.Text' at UpperLeft.", repo.FrmArt.PicTabsArt.TextInfo, new RecordItemIndex(1));
            repo.FrmArt.PicTabsArt.Text.Click(Location.UpperLeft);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'Test Text1' with focus on 'FrmArt.PicTabsArt.Text'.", repo.FrmArt.PicTabsArt.TextInfo, new RecordItemIndex(2));
            repo.FrmArt.PicTabsArt.Text.EnsureVisible();
            Keyboard.Press("Test Text1");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmArt.Speichern' at Center.", repo.FrmArt.SpeichernInfo, new RecordItemIndex(3));
            repo.FrmArt.Speichern.Click();
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='Test Text1') on item 'FrmArt.PicTabsArt.Text'.", repo.FrmArt.PicTabsArt.TextInfo, new RecordItemIndex(4));
            Validate.AttributeEqual(repo.FrmArt.PicTabsArt.TextInfo, "Text", "Test Text1");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmArt.PicTabsArt.Karteireiter_Artikelbez' at Center.", repo.FrmArt.PicTabsArt.Karteireiter_ArtikelbezInfo, new RecordItemIndex(5));
            repo.FrmArt.PicTabsArt.Karteireiter_Artikelbez.Click();
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left DoubleClick item 'FrmArt.PicTabsArt.Bez_Artikelbez' at Center.", repo.FrmArt.PicTabsArt.Bez_ArtikelbezInfo, new RecordItemIndex(6));
            repo.FrmArt.PicTabsArt.Bez_Artikelbez.DoubleClick();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'QS-Test{Tab down}' with focus on 'FrmArt.PicTabsArt.Bez_Artikelbez'.", repo.FrmArt.PicTabsArt.Bez_ArtikelbezInfo, new RecordItemIndex(7));
            repo.FrmArt.PicTabsArt.Bez_Artikelbez.PressKeys("QS-Test{Tab down}");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='QS-Test') on item 'FrmArt.PicTabsArt.Bez_Artikelbez'.", repo.FrmArt.PicTabsArt.Bez_ArtikelbezInfo, new RecordItemIndex(8));
            Validate.AttributeEqual(repo.FrmArt.PicTabsArt.Bez_ArtikelbezInfo, "Text", "QS-Test");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmArt.Speichern' at Center.", repo.FrmArt.SpeichernInfo, new RecordItemIndex(9));
            repo.FrmArt.Speichern.Click();
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
