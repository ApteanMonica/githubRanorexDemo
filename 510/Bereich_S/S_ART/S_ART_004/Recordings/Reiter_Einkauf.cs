///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace S_ART_004.Recordings
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Reiter_Einkauf recording.
    /// </summary>
    [TestModule("569801b7-e05a-4709-bfc9-e0705f037838", ModuleType.Recording, 1)]
    public partial class Reiter_Einkauf : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::S_ART_004.S_ART_004Repository repository.
        /// </summary>
        public static global::S_ART_004.S_ART_004Repository repo = global::S_ART_004.S_ART_004Repository.Instance;

        static Reiter_Einkauf instance = new Reiter_Einkauf();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Reiter_Einkauf()
        {
            Lieferant = "303010";
            Name_Lieferant = "LIEFERANT_S_ART";
            Lieferantenartikelnummer = "123456";
            Bezeichnung_Lief = "QS Lieferant";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Reiter_Einkauf Instance
        {
            get { return instance; }
        }

#region Variables

        string _Lieferant;

        /// <summary>
        /// Gets or sets the value of variable Lieferant.
        /// </summary>
        [TestVariable("ea495f30-7b1f-4f97-b949-178a0bc2a81e")]
        public string Lieferant
        {
            get { return _Lieferant; }
            set { _Lieferant = value; }
        }

        string _Name_Lieferant;

        /// <summary>
        /// Gets or sets the value of variable Name_Lieferant.
        /// </summary>
        [TestVariable("5a911eef-9f0c-4349-b6f0-a0c7df25874b")]
        public string Name_Lieferant
        {
            get { return _Name_Lieferant; }
            set { _Name_Lieferant = value; }
        }

        string _Lieferantenartikelnummer;

        /// <summary>
        /// Gets or sets the value of variable Lieferantenartikelnummer.
        /// </summary>
        [TestVariable("2d14f638-747e-4f13-9f4b-5bf6b2c2da93")]
        public string Lieferantenartikelnummer
        {
            get { return _Lieferantenartikelnummer; }
            set { _Lieferantenartikelnummer = value; }
        }

        string _Bezeichnung_Lief;

        /// <summary>
        /// Gets or sets the value of variable Bezeichnung_Lief.
        /// </summary>
        [TestVariable("93e26a48-5a4b-4b03-9234-d7c5808f5c61")]
        public string Bezeichnung_Lief
        {
            get { return _Bezeichnung_Lief; }
            set { _Bezeichnung_Lief = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmArt.PicTabsArt.TabPageEinkauf' at Center.", repo.FrmArt.PicTabsArt.TabPageEinkaufInfo, new RecordItemIndex(0));
            repo.FrmArt.PicTabsArt.TabPageEinkauf.Click();
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmArt.PicTabsArt.Herkunftsland' at Center.", repo.FrmArt.PicTabsArt.HerkunftslandInfo, new RecordItemIndex(1));
            repo.FrmArt.PicTabsArt.Herkunftsland.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'AT' with focus on 'FrmArt.PicTabsArt.Herkunftsland'.", repo.FrmArt.PicTabsArt.HerkunftslandInfo, new RecordItemIndex(2));
            repo.FrmArt.PicTabsArt.Herkunftsland.PressKeys("AT");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='AT') on item 'FrmArt.PicTabsArt.Herkunftsland'.", repo.FrmArt.PicTabsArt.HerkunftslandInfo, new RecordItemIndex(3));
            Validate.AttributeEqual(repo.FrmArt.PicTabsArt.HerkunftslandInfo, "Text", "AT");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmArt.PicTabsArt.MindEkMenge' at Center.", repo.FrmArt.PicTabsArt.MindEkMengeInfo, new RecordItemIndex(4));
            repo.FrmArt.PicTabsArt.MindEkMenge.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '100' with focus on 'FrmArt.PicTabsArt.MindEkMenge'.", repo.FrmArt.PicTabsArt.MindEkMengeInfo, new RecordItemIndex(5));
            repo.FrmArt.PicTabsArt.MindEkMenge.PressKeys("100");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='100') on item 'FrmArt.PicTabsArt.MindEkMenge'.", repo.FrmArt.PicTabsArt.MindEkMengeInfo, new RecordItemIndex(6));
            Validate.AttributeEqual(repo.FrmArt.PicTabsArt.MindEkMengeInfo, "Text", "100");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '1{Tab}' with focus on 'FrmArt.TpEinkauf.DfArtKzbeschaffung'.", repo.FrmArt.TpEinkauf.DfArtKzbeschaffungInfo, new RecordItemIndex(7));
            repo.FrmArt.TpEinkauf.DfArtKzbeschaffung.PressKeys("1{Tab}");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='1') on item 'FrmArt.TpEinkauf.DfArtKzbeschaffung'.", repo.FrmArt.TpEinkauf.DfArtKzbeschaffungInfo, new RecordItemIndex(8));
            Validate.AttributeEqual(repo.FrmArt.TpEinkauf.DfArtKzbeschaffungInfo, "Text", "1");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmArt.TpEinkauf.FlexGrid' at Center.", repo.FrmArt.TpEinkauf.FlexGridInfo, new RecordItemIndex(9));
            repo.FrmArt.TpEinkauf.FlexGrid.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Insert down}' with focus on 'FrmArt.TpEinkauf.FlexGrid'.", repo.FrmArt.TpEinkauf.FlexGridInfo, new RecordItemIndex(10));
            repo.FrmArt.TpEinkauf.FlexGrid.EnsureVisible();
            Keyboard.Press("{Insert down}");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Lieferant' with focus on 'FrmArt.TpEinkauf.Lieferantennummer'.", repo.FrmArt.TpEinkauf.LieferantennummerInfo, new RecordItemIndex(11));
            repo.FrmArt.TpEinkauf.Lieferantennummer.PressKeys(Lieferant);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmArt.TpEinkauf.Lieferantenname' at Center.", repo.FrmArt.TpEinkauf.LieferantennameInfo, new RecordItemIndex(12));
            repo.FrmArt.TpEinkauf.Lieferantenname.Click();
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Name_Lieferant) on item 'FrmArt.TpEinkauf.Lieferantenname'.", repo.FrmArt.TpEinkauf.LieferantennameInfo, new RecordItemIndex(13));
            Validate.AttributeEqual(repo.FrmArt.TpEinkauf.LieferantennameInfo, "Text", Name_Lieferant);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmArt.TpEinkauf.Hauptlieferant_Checkbox' at Center.", repo.FrmArt.TpEinkauf.Hauptlieferant_CheckboxInfo, new RecordItemIndex(14));
            repo.FrmArt.TpEinkauf.Hauptlieferant_Checkbox.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Lieferantenartikelnummer' with focus on 'FrmArt.TpEinkauf.LiefArtikelnr'.", repo.FrmArt.TpEinkauf.LiefArtikelnrInfo, new RecordItemIndex(15));
            repo.FrmArt.TpEinkauf.LiefArtikelnr.PressKeys(Lieferantenartikelnummer);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Bezeichnung_Lief' with focus on 'FrmArt.TpEinkauf.Bezeichnung_Lieferant_'.", repo.FrmArt.TpEinkauf.Bezeichnung_Lieferant_Info, new RecordItemIndex(16));
            repo.FrmArt.TpEinkauf.Bezeichnung_Lieferant_.PressKeys(Bezeichnung_Lief);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmArt.Speichern' at Center.", repo.FrmArt.SpeichernInfo, new RecordItemIndex(17));
            repo.FrmArt.Speichern.Click();
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Lieferantenartikelnummer) on item 'FrmArt.TpEinkauf.LiefArtikelnr'.", repo.FrmArt.TpEinkauf.LiefArtikelnrInfo, new RecordItemIndex(18));
            Validate.AttributeEqual(repo.FrmArt.TpEinkauf.LiefArtikelnrInfo, "Text", Lieferantenartikelnummer);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
