///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace S_ART_002.Recordings
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Reiter_Allg1 recording.
    /// </summary>
    [TestModule("9bcaf888-4d69-495d-a1ab-36e725559c24", ModuleType.Recording, 1)]
    public partial class Reiter_Allg1 : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::S_ART_002.S_ART_002Repository repository.
        /// </summary>
        public static global::S_ART_002.S_ART_002Repository repo = global::S_ART_002.S_ART_002Repository.Instance;

        static Reiter_Allg1 instance = new Reiter_Allg1();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Reiter_Allg1()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Reiter_Allg1 Instance
        {
            get { return instance; }
        }

#region Variables

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmArt.TpAllgemein.Typ' at Center.", repo.FrmArt.TpAllgemein.TypInfo, new RecordItemIndex(0));
            repo.FrmArt.TpAllgemein.Typ.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '400{Tab}' with focus on 'FrmArt.TpAllgemein.Typ'.", repo.FrmArt.TpAllgemein.TypInfo, new RecordItemIndex(1));
            repo.FrmArt.TpAllgemein.Typ.PressKeys("400{Tab}");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='400') on item 'FrmArt.TpAllgemein.Typ'.", repo.FrmArt.TpAllgemein.TypInfo, new RecordItemIndex(2));
            Validate.AttributeEqual(repo.FrmArt.TpAllgemein.TypInfo, "Text", "400");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='STK') on item 'FrmArt.TpAllgemein.Basiseinheit'.", repo.FrmArt.TpAllgemein.BasiseinheitInfo, new RecordItemIndex(3));
            Validate.AttributeEqual(repo.FrmArt.TpAllgemein.BasiseinheitInfo, "Text", "STK");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmArt.TpAllgemein.Lagereinh2' at CenterLeft.", repo.FrmArt.TpAllgemein.Lagereinh2Info, new RecordItemIndex(4));
            repo.FrmArt.TpAllgemein.Lagereinh2.Click(Location.CenterLeft);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'PKG' with focus on 'FrmArt.TpAllgemein.Lagereinh2'.", repo.FrmArt.TpAllgemein.Lagereinh2Info, new RecordItemIndex(5));
            repo.FrmArt.TpAllgemein.Lagereinh2.PressKeys("PKG");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='PKG') on item 'FrmArt.TpAllgemein.Lagereinh2'.", repo.FrmArt.TpAllgemein.Lagereinh2Info, new RecordItemIndex(6));
            Validate.AttributeEqual(repo.FrmArt.TpAllgemein.Lagereinh2Info, "Text", "PKG");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmArt.TpAllgemein.Umrechnungsfaktor' at Center.", repo.FrmArt.TpAllgemein.UmrechnungsfaktorInfo, new RecordItemIndex(7));
            repo.FrmArt.TpAllgemein.Umrechnungsfaktor.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '100{Tab}' with focus on 'FrmArt.TpAllgemein.Umrechnungsfaktor'.", repo.FrmArt.TpAllgemein.UmrechnungsfaktorInfo, new RecordItemIndex(8));
            repo.FrmArt.TpAllgemein.Umrechnungsfaktor.PressKeys("100{Tab}");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='100') on item 'FrmArt.TpAllgemein.Umrechnungsfaktor'.", repo.FrmArt.TpAllgemein.UmrechnungsfaktorInfo, new RecordItemIndex(9));
            Validate.AttributeEqual(repo.FrmArt.TpAllgemein.UmrechnungsfaktorInfo, "Text", "100");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmArt.TpAllgemein.VKEinheit' at CenterLeft.", repo.FrmArt.TpAllgemein.VKEinheitInfo, new RecordItemIndex(10));
            repo.FrmArt.TpAllgemein.VKEinheit.Click(Location.CenterLeft);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='STK') on item 'FrmArt.TpAllgemein.VKEinheit'.", repo.FrmArt.TpAllgemein.VKEinheitInfo, new RecordItemIndex(11));
            Validate.AttributeEqual(repo.FrmArt.TpAllgemein.VKEinheitInfo, "Text", "STK");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmArt.TpAllgemein.Preiseinheit' at CenterLeft.", repo.FrmArt.TpAllgemein.PreiseinheitInfo, new RecordItemIndex(12));
            repo.FrmArt.TpAllgemein.Preiseinheit.Click(Location.CenterLeft);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='STK') on item 'FrmArt.TpAllgemein.Preiseinheit'.", repo.FrmArt.TpAllgemein.PreiseinheitInfo, new RecordItemIndex(13));
            Validate.AttributeEqual(repo.FrmArt.TpAllgemein.PreiseinheitInfo, "Text", "STK");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmArt.TpAllgemein.Rundungseinheit' at CenterLeft.", repo.FrmArt.TpAllgemein.RundungseinheitInfo, new RecordItemIndex(14));
            repo.FrmArt.TpAllgemein.Rundungseinheit.Click(Location.CenterLeft);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '1{Tab}' with focus on 'FrmArt.TpAllgemein.Rundungseinheit'.", repo.FrmArt.TpAllgemein.RundungseinheitInfo, new RecordItemIndex(15));
            repo.FrmArt.TpAllgemein.Rundungseinheit.PressKeys("1{Tab}");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='1') on item 'FrmArt.TpAllgemein.Rundungseinheit'.", repo.FrmArt.TpAllgemein.RundungseinheitInfo, new RecordItemIndex(16));
            Validate.AttributeEqual(repo.FrmArt.TpAllgemein.RundungseinheitInfo, "Text", "1");
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
