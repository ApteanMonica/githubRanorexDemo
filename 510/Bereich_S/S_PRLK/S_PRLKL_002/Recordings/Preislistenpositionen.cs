///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace S_PRLKL_002.Recordings
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Preislistenpositionen recording.
    /// </summary>
    [TestModule("78d1576b-b298-40c7-91c4-3deed081279f", ModuleType.Recording, 1)]
    public partial class Preislistenpositionen : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::S_PRLKL_002.S_PRLKL_002Repository repository.
        /// </summary>
        public static global::S_PRLKL_002.S_PRLKL_002Repository repo = global::S_PRLKL_002.S_PRLKL_002Repository.Instance;

        static Preislistenpositionen instance = new Preislistenpositionen();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Preislistenpositionen()
        {
            Lieferant = "";
            Von_Datum = "";
            Artikel = "";
            Preis = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Preislistenpositionen Instance
        {
            get { return instance; }
        }

#region Variables

        string _Lieferant;

        /// <summary>
        /// Gets or sets the value of variable Lieferant.
        /// </summary>
        [TestVariable("bc08e482-1cd8-4571-afac-a4476093b407")]
        public string Lieferant
        {
            get { return _Lieferant; }
            set { _Lieferant = value; }
        }

        string _Von_Datum;

        /// <summary>
        /// Gets or sets the value of variable Von_Datum.
        /// </summary>
        [TestVariable("361db285-3449-41e3-bd58-b7bf6c82857e")]
        public string Von_Datum
        {
            get { return _Von_Datum; }
            set { _Von_Datum = value; }
        }

        string _Artikel;

        /// <summary>
        /// Gets or sets the value of variable Artikel.
        /// </summary>
        [TestVariable("42db9460-73c8-491e-af65-6137b8d06f4c")]
        public string Artikel
        {
            get { return _Artikel; }
            set { _Artikel = value; }
        }

        string _Preis;

        /// <summary>
        /// Gets or sets the value of variable Preis.
        /// </summary>
        [TestVariable("71aa55b9-272d-4146-849f-ab09ab4fbbfa")]
        public string Preis
        {
            get { return _Preis; }
            set { _Preis = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmPrlk.PbMDIPreise' at Center.", repo.FrmPrlk.PbMDIPreiseInfo, new RecordItemIndex(0));
            repo.FrmPrlk.PbMDIPreise.Click();
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Lieferant) on item 'TblPrlp.Nummer'.", repo.TblPrlp.NummerInfo, new RecordItemIndex(1));
            Validate.AttributeEqual(repo.TblPrlp.NummerInfo, "Text", Lieferant);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Von_Datum) on item 'TblPrlp.DatumVon'.", repo.TblPrlp.DatumVonInfo, new RecordItemIndex(2));
            Validate.AttributeEqual(repo.TblPrlp.DatumVonInfo, "Text", Von_Datum);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'TblPrlp.PbCommonSave' at Center.", repo.TblPrlp.PbCommonSaveInfo, new RecordItemIndex(3));
            repo.TblPrlp.PbCommonSave.Click();
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'TblPrlp.FlexGrid' at Center.", repo.TblPrlp.FlexGridInfo, new RecordItemIndex(4));
            repo.TblPrlp.FlexGrid.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Insert}' with focus on 'TblPrlp.FlexGrid'.", repo.TblPrlp.FlexGridInfo, new RecordItemIndex(5));
            repo.TblPrlp.FlexGrid.PressKeys("{Insert}");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'TblPrlp.ColArtNrRow1' at Center.", repo.TblPrlp.ColArtNrRow1Info, new RecordItemIndex(6));
            repo.TblPrlp.ColArtNrRow1.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Artikel' with focus on 'TblPrlp.ColArtNrRow1'.", repo.TblPrlp.ColArtNrRow1Info, new RecordItemIndex(7));
            repo.TblPrlp.ColArtNrRow1.PressKeys(Artikel);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Tab' Press.", new RecordItemIndex(8));
            Keyboard.Press(System.Windows.Forms.Keys.Tab, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Artikel) on item 'TblPrlp.ColArtNrRow1'.", repo.TblPrlp.ColArtNrRow1Info, new RecordItemIndex(9));
            Validate.AttributeEqual(repo.TblPrlp.ColArtNrRow1Info, "Text", Artikel);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'TblPrlp.ColPrlpPreisRow1' at Center.", repo.TblPrlp.ColPrlpPreisRow1Info, new RecordItemIndex(10));
            repo.TblPrlp.ColPrlpPreisRow1.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Preis' with focus on 'TblPrlp.ColPrlpPreisRow1'.", repo.TblPrlp.ColPrlpPreisRow1Info, new RecordItemIndex(11));
            repo.TblPrlp.ColPrlpPreisRow1.PressKeys(Preis);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Tab' Press.", new RecordItemIndex(12));
            Keyboard.Press(System.Windows.Forms.Keys.Tab, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeRegex (Text~$Preis) on item 'TblPrlp.ColPrlpPreisRow1'.", repo.TblPrlp.ColPrlpPreisRow1Info, new RecordItemIndex(13));
            Validate.AttributeRegex(repo.TblPrlp.ColPrlpPreisRow1Info, "Text", new Regex(Preis));
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
