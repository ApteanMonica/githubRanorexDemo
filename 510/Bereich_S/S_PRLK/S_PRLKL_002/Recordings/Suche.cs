///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace S_PRLKL_002.Recordings
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Suche recording.
    /// </summary>
    [TestModule("d44a1860-a399-4444-9e35-001049861009", ModuleType.Recording, 1)]
    public partial class Suche : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::S_PRLKL_002.S_PRLKL_002Repository repository.
        /// </summary>
        public static global::S_PRLKL_002.S_PRLKL_002Repository repo = global::S_PRLKL_002.S_PRLKL_002Repository.Instance;

        static Suche instance = new Suche();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Suche()
        {
            Lieferant = "300003";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Suche Instance
        {
            get { return instance; }
        }

#region Variables

        string _Lieferant;

        /// <summary>
        /// Gets or sets the value of variable Lieferant.
        /// </summary>
        [TestVariable("a2e1f66b-f086-4fb3-ad01-5d57122db924")]
        public string Lieferant
        {
            get { return _Lieferant; }
            set { _Lieferant = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmPrlk.FrmSearchPage.Text' at Center.", repo.FrmPrlk.FrmSearchPage.TextInfo, new RecordItemIndex(0));
            repo.FrmPrlk.FrmSearchPage.Text.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Lieferant' with focus on 'FrmPrlk.FrmSearchPage.Text'.", repo.FrmPrlk.FrmSearchPage.TextInfo, new RecordItemIndex(1));
            repo.FrmPrlk.FrmSearchPage.Text.PressKeys(Lieferant);
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute AccessibleValue to '$Lieferant' on item 'FrmPrlk.FrmSearchPage.Text'.", repo.FrmPrlk.FrmSearchPage.TextInfo, new RecordItemIndex(2));
            repo.FrmPrlk.FrmSearchPage.Text.Element.SetAttributeValue("AccessibleValue", Lieferant);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Lieferant) on item 'FrmPrlk.FrmSearchPage.CellTmpColS1Row1'.", repo.FrmPrlk.FrmSearchPage.CellTmpColS1Row1Info, new RecordItemIndex(3));
            Validate.AttributeEqual(repo.FrmPrlk.FrmSearchPage.CellTmpColS1Row1Info, "Text", Lieferant);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left DoubleClick item 'FrmPrlk.FrmSearchPage.Row1Column0' at Center.", repo.FrmPrlk.FrmSearchPage.Row1Column0Info, new RecordItemIndex(4));
            repo.FrmPrlk.FrmSearchPage.Row1Column0.DoubleClick();
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Lieferant) on item 'FrmPrlk.Nummer'.", repo.FrmPrlk.NummerInfo, new RecordItemIndex(5));
            Validate.AttributeEqual(repo.FrmPrlk.NummerInfo, "Text", Lieferant);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
