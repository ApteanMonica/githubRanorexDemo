///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace S_NKRN_Schnelltest.Recordings
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The StartAUT_NKRS recording.
    /// </summary>
    [TestModule("68956905-83e2-4745-a51e-b81043fe3077", ModuleType.Recording, 1)]
    public partial class StartAUT_NKRS : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::S_NKRN_Schnelltest.S_NKRN_SchnelltestRepository repository.
        /// </summary>
        public static global::S_NKRN_Schnelltest.S_NKRN_SchnelltestRepository repo = global::S_NKRN_Schnelltest.S_NKRN_SchnelltestRepository.Instance;

        static StartAUT_NKRS instance = new StartAUT_NKRS();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public StartAUT_NKRS()
        {
            Startfile = "C:\\Testdaten\\Allgemein\\Start.bat";
            Programm_NKRS = "S_NKRN Aufrufart=NKRS";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static StartAUT_NKRS Instance
        {
            get { return instance; }
        }

#region Variables

        string _Startfile;

        /// <summary>
        /// Gets or sets the value of variable Startfile.
        /// </summary>
        [TestVariable("03c039c3-326a-4156-be90-c94096376264")]
        public string Startfile
        {
            get { return _Startfile; }
            set { _Startfile = value; }
        }

        string _Programm_NKRS;

        /// <summary>
        /// Gets or sets the value of variable Programm_NKRS.
        /// </summary>
        [TestVariable("6d3a676a-a32d-4a12-883c-6f18a1d51794")]
        public string Programm_NKRS
        {
            get { return _Programm_NKRS; }
            set { _Programm_NKRS = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Application", "Run application with file name from variable $Startfile with arguments from variable $Programm_NKRS in normal mode.", new RecordItemIndex(0));
            Host.Local.RunApplication(Startfile, Programm_NKRS, "", false);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 2m to exist. Associated repository item: 'TblNkrs.TitleBar100Serien'", repo.TblNkrs.TitleBar100SerienInfo, new ActionTimeout(120000), new RecordItemIndex(1));
            repo.TblNkrs.TitleBar100SerienInfo.WaitForExists(120000);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (Text>'Serien') on item 'TblNkrs.TitleBar100Serien'.", repo.TblNkrs.TitleBar100SerienInfo, new RecordItemIndex(2));
            Validate.AttributeContains(repo.TblNkrs.TitleBar100SerienInfo, "Text", "Serien");
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
