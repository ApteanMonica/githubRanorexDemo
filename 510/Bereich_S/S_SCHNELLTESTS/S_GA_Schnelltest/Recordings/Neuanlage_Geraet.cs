///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace S_GA_Schnelltest.Recordings
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Neuanlage_Geraet recording.
    /// </summary>
    [TestModule("b16ff50c-718b-4568-8324-42bb9f2c960a", ModuleType.Recording, 1)]
    public partial class Neuanlage_Geraet : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::S_GA_Schnelltest.S_GA_SchnelltestRepository repository.
        /// </summary>
        public static global::S_GA_Schnelltest.S_GA_SchnelltestRepository repo = global::S_GA_Schnelltest.S_GA_SchnelltestRepository.Instance;

        static Neuanlage_Geraet instance = new Neuanlage_Geraet();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Neuanlage_Geraet()
        {
            GERAETE_NR_NEU = "G_NEU_001";
            GERAETE_NR_NEU_BEZEICHNUNG = "Test_Neuanlage ";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Neuanlage_Geraet Instance
        {
            get { return instance; }
        }

#region Variables

        string _GERAETE_NR_NEU_BEZEICHNUNG;

        /// <summary>
        /// Gets or sets the value of variable GERAETE_NR_NEU_BEZEICHNUNG.
        /// </summary>
        [TestVariable("92e6a024-ebb2-4384-88e4-b0d49ddc037e")]
        public string GERAETE_NR_NEU_BEZEICHNUNG
        {
            get { return _GERAETE_NR_NEU_BEZEICHNUNG; }
            set { _GERAETE_NR_NEU_BEZEICHNUNG = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable GERAETE_NR_NEU.
        /// </summary>
        [TestVariable("f70a4cd4-9ca1-4c65-8c78-aee168b20cbe")]
        public string GERAETE_NR_NEU
        {
            get { return repo.GERAETE_NR_NEU; }
            set { repo.GERAETE_NR_NEU = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FormGeraet.PbNew' at Center.", repo.FormGeraet.PbNewInfo, new RecordItemIndex(0));
            repo.FormGeraet.PbNew.Click();
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 2m to exist. Associated repository item: 'FormGeraet.TitleBar100Geraeteverwaltung'", repo.FormGeraet.TitleBar100GeraeteverwaltungInfo, new ActionTimeout(120000), new RecordItemIndex(1));
            repo.FormGeraet.TitleBar100GeraeteverwaltungInfo.WaitForExists(120000);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$GERAETE_NR_NEU' with focus on 'FormGeraet.ClientArea.DfGaNr'.", repo.FormGeraet.ClientArea.DfGaNrInfo, new RecordItemIndex(2));
            repo.FormGeraet.ClientArea.DfGaNr.PressKeys(GERAETE_NR_NEU);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Tab' Press.", new RecordItemIndex(3));
            Keyboard.Press(System.Windows.Forms.Keys.Tab, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$GERAETE_NR_NEU_BEZEICHNUNG' with focus on 'FormGeraet.ClientArea.DfGaBez'.", repo.FormGeraet.ClientArea.DfGaBezInfo, new RecordItemIndex(4));
            repo.FormGeraet.ClientArea.DfGaBez.PressKeys(GERAETE_NR_NEU_BEZEICHNUNG);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Tab' Press.", new RecordItemIndex(5));
            Keyboard.Press(System.Windows.Forms.Keys.Tab, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '*' with focus on 'FormGeraet.ClientArea.DfGaaCd'.", repo.FormGeraet.ClientArea.DfGaaCdInfo, new RecordItemIndex(6));
            repo.FormGeraet.ClientArea.DfGaaCd.PressKeys("*");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Tab' Press.", new RecordItemIndex(7));
            Keyboard.Press(System.Windows.Forms.Keys.Tab, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FormGeraet.RibbonBar.PbCommonSave' at Center.", repo.FormGeraet.RibbonBar.PbCommonSaveInfo, new RecordItemIndex(8));
            repo.FormGeraet.RibbonBar.PbCommonSave.Click();
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$GERAETE_NR_NEU) on item 'FormGeraet.ClientArea.DfGaNr'.", repo.FormGeraet.ClientArea.DfGaNrInfo, new RecordItemIndex(9));
            Validate.AttributeEqual(repo.FormGeraet.ClientArea.DfGaNrInfo, "Text", GERAETE_NR_NEU);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$GERAETE_NR_NEU_BEZEICHNUNG) on item 'FormGeraet.ClientArea.DfGaBez'.", repo.FormGeraet.ClientArea.DfGaBezInfo, new RecordItemIndex(10));
            Validate.AttributeEqual(repo.FormGeraet.ClientArea.DfGaBezInfo, "Text", GERAETE_NR_NEU_BEZEICHNUNG);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='*') on item 'FormGeraet.ClientArea.DfGaaCd'.", repo.FormGeraet.ClientArea.DfGaaCdInfo, new RecordItemIndex(11));
            Validate.AttributeEqual(repo.FormGeraet.ClientArea.DfGaaCdInfo, "Text", "*");
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
