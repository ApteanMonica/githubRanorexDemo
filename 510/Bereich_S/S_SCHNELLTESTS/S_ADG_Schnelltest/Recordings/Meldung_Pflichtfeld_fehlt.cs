///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace S_ADG_Schnelltest.Recordings
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Meldung_Pflichtfeld_fehlt recording.
    /// </summary>
    [TestModule("0bc7041f-f961-4365-bf92-0581ef411de5", ModuleType.Recording, 1)]
    public partial class Meldung_Pflichtfeld_fehlt : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::S_ADG_Schnelltest.S_ADG_SchnelltestRepository repository.
        /// </summary>
        public static global::S_ADG_Schnelltest.S_ADG_SchnelltestRepository repo = global::S_ADG_Schnelltest.S_ADG_SchnelltestRepository.Instance;

        static Meldung_Pflichtfeld_fehlt instance = new Meldung_Pflichtfeld_fehlt();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Meldung_Pflichtfeld_fehlt()
        {
            GRUPPENART_NEU = "XX";
            GRUPPENART_BEZEICHNUNG = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Meldung_Pflichtfeld_fehlt Instance
        {
            get { return instance; }
        }

#region Variables

        string _GRUPPENART_BEZEICHNUNG;

        /// <summary>
        /// Gets or sets the value of variable GRUPPENART_BEZEICHNUNG.
        /// </summary>
        [TestVariable("a4533522-d47d-4d73-8523-4bf636d180ce")]
        public string GRUPPENART_BEZEICHNUNG
        {
            get { return _GRUPPENART_BEZEICHNUNG; }
            set { _GRUPPENART_BEZEICHNUNG = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable GRUPPENART_NEU.
        /// </summary>
        [TestVariable("9f376c37-3875-438f-9864-2ba76e7ebc31")]
        public string GRUPPENART_NEU
        {
            get { return repo.GRUPPENART_NEU; }
            set { repo.GRUPPENART_NEU = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Wait", "Waiting 2m to exist. Associated repository item: 'DlgMessageBox.LabelMeldungstext'", repo.DlgMessageBox.LabelMeldungstextInfo, new ActionTimeout(120000), new RecordItemIndex(0));
            repo.DlgMessageBox.LabelMeldungstextInfo.WaitForExists(120000);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='Folgende Fehler traten bei der Überprüfung auf:\r\n- Eingabepflichtige Spalten wurden nicht ausgefüllt\r\n') on item 'DlgMessageBox.LabelMeldungstext'.", repo.DlgMessageBox.LabelMeldungstextInfo, new RecordItemIndex(1));
            Validate.AttributeEqual(repo.DlgMessageBox.LabelMeldungstextInfo, "Text", "Folgende Fehler traten bei der Überprüfung auf:\r\n- Eingabepflichtige Spalten wurden nicht ausgefüllt\r\n");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'DlgMessageBox.Button0' at Center.", repo.DlgMessageBox.Button0Info, new RecordItemIndex(2));
            repo.DlgMessageBox.Button0.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Tab' Press.", new RecordItemIndex(3));
            Keyboard.Press(System.Windows.Forms.Keys.Tab, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '1{Tab}'.", new RecordItemIndex(4));
            Keyboard.Press("1{Tab}");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'TblAdga.RibbonBar.PbDataAccessSave' at Center.", repo.TblAdga.RibbonBar.PbDataAccessSaveInfo, new RecordItemIndex(5));
            repo.TblAdga.RibbonBar.PbDataAccessSave.Click();
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'TblAdga.RibbonBar.PbDataAccessLoad' at Center.", repo.TblAdga.RibbonBar.PbDataAccessLoadInfo, new RecordItemIndex(6));
            repo.TblAdga.RibbonBar.PbDataAccessLoad.Click();
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 2m to exist. Associated repository item: 'TblAdga.FlexGrid.Row0Column0'", repo.TblAdga.FlexGrid.Row0Column0Info, new ActionTimeout(120000), new RecordItemIndex(7));
            repo.TblAdga.FlexGrid.Row0Column0Info.WaitForExists(120000);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$GRUPPENART_NEU) on item 'TblAdga.FlexGrid.Row_mit_Variable_Gruppenart_NEU.ColAdgaCd'.", repo.TblAdga.FlexGrid.Row_mit_Variable_Gruppenart_NEU.ColAdgaCdInfo, new RecordItemIndex(8));
            Validate.AttributeEqual(repo.TblAdga.FlexGrid.Row_mit_Variable_Gruppenart_NEU.ColAdgaCdInfo, "Text", GRUPPENART_NEU);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='K') on item 'TblAdga.FlexGrid.Row_mit_Variable_Gruppenart_NEU.ColAdgaKL'.", repo.TblAdga.FlexGrid.Row_mit_Variable_Gruppenart_NEU.ColAdgaKLInfo, new RecordItemIndex(9));
            Validate.AttributeEqual(repo.TblAdga.FlexGrid.Row_mit_Variable_Gruppenart_NEU.ColAdgaKLInfo, "Text", "K");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$GRUPPENART_BEZEICHNUNG) on item 'TblAdga.FlexGrid.Row_mit_Variable_Gruppenart_NEU.ColAdgaBez'.", repo.TblAdga.FlexGrid.Row_mit_Variable_Gruppenart_NEU.ColAdgaBezInfo, new RecordItemIndex(10));
            Validate.AttributeEqual(repo.TblAdga.FlexGrid.Row_mit_Variable_Gruppenart_NEU.ColAdgaBezInfo, "Text", GRUPPENART_BEZEICHNUNG);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='yourValue') on item 'TblAdga.FlexGrid.Row_mit_Variable_Gruppenart_NEU.ColAdgaKzzuordnung'.", repo.TblAdga.FlexGrid.Row_mit_Variable_Gruppenart_NEU.ColAdgaKzzuordnungInfo, new RecordItemIndex(11));
            Validate.AttributeEqual(repo.TblAdga.FlexGrid.Row_mit_Variable_Gruppenart_NEU.ColAdgaKzzuordnungInfo, "Text", "yourValue");
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
