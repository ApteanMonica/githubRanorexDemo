///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace S_ADG_Schnelltest.Recordings
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Loeschen_Adressart_Neu recording.
    /// </summary>
    [TestModule("eb6ce8ea-6b4f-4a73-87c6-0eedae3943a7", ModuleType.Recording, 1)]
    public partial class Loeschen_Adressart_Neu : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::S_ADG_Schnelltest.S_ADG_SchnelltestRepository repository.
        /// </summary>
        public static global::S_ADG_Schnelltest.S_ADG_SchnelltestRepository repo = global::S_ADG_Schnelltest.S_ADG_SchnelltestRepository.Instance;

        static Loeschen_Adressart_Neu instance = new Loeschen_Adressart_Neu();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Loeschen_Adressart_Neu()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Loeschen_Adressart_Neu Instance
        {
            get { return instance; }
        }

#region Variables

        /// <summary>
        /// Gets or sets the value of variable ADRSSART_NEU.
        /// </summary>
        [TestVariable("37368c07-b567-4cbf-8a6c-ef4c8c594015")]
        public string ADRSSART_NEU
        {
            get { return repo.ADRSSART_NEU; }
            set { repo.ADRSSART_NEU = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'TblAda.FlexGrid.Row_mit_Variable_Adressart_NEU' at Center.", repo.TblAda.FlexGrid.Row_mit_Variable_Adressart_NEU.SelfInfo, new RecordItemIndex(0));
            repo.TblAda.FlexGrid.Row_mit_Variable_Adressart_NEU.Self.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Delete' Press.", new RecordItemIndex(1));
            Keyboard.Press(System.Windows.Forms.Keys.Delete, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'TblAda.RibbonBar.PbDataAccessSave' at Center.", repo.TblAda.RibbonBar.PbDataAccessSaveInfo, new RecordItemIndex(2));
            repo.TblAda.RibbonBar.PbDataAccessSave.Click();
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'TblAda.RibbonBar.PbDataAccessLoad' at Center.", repo.TblAda.RibbonBar.PbDataAccessLoadInfo, new RecordItemIndex(3));
            repo.TblAda.RibbonBar.PbDataAccessLoad.Click();
            
            Report.Log(ReportLevel.Info, "Validation", "Validating NotExists on item 'TblAda.FlexGrid.Row_mit_Variable_Adressart_NEU'.", repo.TblAda.FlexGrid.Row_mit_Variable_Adressart_NEU.SelfInfo, new RecordItemIndex(4));
            Validate.NotExists(repo.TblAda.FlexGrid.Row_mit_Variable_Adressart_NEU.SelfInfo);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
