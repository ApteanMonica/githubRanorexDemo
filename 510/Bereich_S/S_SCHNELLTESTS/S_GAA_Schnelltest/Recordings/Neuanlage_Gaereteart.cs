///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace S_GAA_Schnelltest.Recordings
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Neuanlage_Gaereteart recording.
    /// </summary>
    [TestModule("68df9ef0-a33b-4b89-9d76-d96c328f86aa", ModuleType.Recording, 1)]
    public partial class Neuanlage_Gaereteart : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::S_GAA_Schnelltest.S_GAA_SchnelltestRepository repository.
        /// </summary>
        public static global::S_GAA_Schnelltest.S_GAA_SchnelltestRepository repo = global::S_GAA_Schnelltest.S_GAA_SchnelltestRepository.Instance;

        static Neuanlage_Gaereteart instance = new Neuanlage_Gaereteart();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Neuanlage_Gaereteart()
        {
            GAERETEART_NEU = "ART_NEU";
            GAERETEART_NEU_BEZEICHNUNG = "TEXT_ART_NEU";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Neuanlage_Gaereteart Instance
        {
            get { return instance; }
        }

#region Variables

        string _GAERETEART_NEU_BEZEICHNUNG;

        /// <summary>
        /// Gets or sets the value of variable GAERETEART_NEU_BEZEICHNUNG.
        /// </summary>
        [TestVariable("17c71d3a-fb75-4183-aa59-9fc0bfe65d8c")]
        public string GAERETEART_NEU_BEZEICHNUNG
        {
            get { return _GAERETEART_NEU_BEZEICHNUNG; }
            set { _GAERETEART_NEU_BEZEICHNUNG = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable GAERETEART_NEU.
        /// </summary>
        [TestVariable("b2d7fb3d-1d38-448d-83f0-0d2d08645b7a")]
        public string GAERETEART_NEU
        {
            get { return repo.GAERETEART_NEU; }
            set { repo.GAERETEART_NEU = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmSGAA.PbNew' at Center.", repo.FrmSGAA.PbNewInfo, new RecordItemIndex(0));
            repo.FrmSGAA.PbNew.Click();
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 2m to exist. Associated repository item: 'FrmSGAA.TitleBar100GeraeteartenVerwalten'", repo.FrmSGAA.TitleBar100GeraeteartenVerwaltenInfo, new ActionTimeout(120000), new RecordItemIndex(1));
            repo.FrmSGAA.TitleBar100GeraeteartenVerwaltenInfo.WaitForExists(120000);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$GAERETEART_NEU' with focus on 'FrmSGAA.ClientArea.DfGAACd'.", repo.FrmSGAA.ClientArea.DfGAACdInfo, new RecordItemIndex(2));
            repo.FrmSGAA.ClientArea.DfGAACd.PressKeys(GAERETEART_NEU);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Tab' Press.", new RecordItemIndex(3));
            Keyboard.Press(System.Windows.Forms.Keys.Tab, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$GAERETEART_NEU_BEZEICHNUNG' with focus on 'FrmSGAA.ClientArea.DfGAABez'.", repo.FrmSGAA.ClientArea.DfGAABezInfo, new RecordItemIndex(4));
            repo.FrmSGAA.ClientArea.DfGAABez.PressKeys(GAERETEART_NEU_BEZEICHNUNG);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Tab' Press.", new RecordItemIndex(5));
            Keyboard.Press(System.Windows.Forms.Keys.Tab, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '0{Tab}' with focus on 'FrmSGAA.ClientArea.DfKz02'.", repo.FrmSGAA.ClientArea.DfKz02Info, new RecordItemIndex(6));
            repo.FrmSGAA.ClientArea.DfKz02.PressKeys("0{Tab}");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmSGAA.RibbonBar.PbCommonSave' at Center.", repo.FrmSGAA.RibbonBar.PbCommonSaveInfo, new RecordItemIndex(7));
            repo.FrmSGAA.RibbonBar.PbCommonSave.Click();
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$GAERETEART_NEU) on item 'FrmSGAA.ClientArea.DfGAACd'.", repo.FrmSGAA.ClientArea.DfGAACdInfo, new RecordItemIndex(8));
            Validate.AttributeEqual(repo.FrmSGAA.ClientArea.DfGAACdInfo, "Text", GAERETEART_NEU);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$GAERETEART_NEU_BEZEICHNUNG) on item 'FrmSGAA.ClientArea.DfGAABez'.", repo.FrmSGAA.ClientArea.DfGAABezInfo, new RecordItemIndex(9));
            Validate.AttributeEqual(repo.FrmSGAA.ClientArea.DfGAABezInfo, "Text", GAERETEART_NEU_BEZEICHNUNG);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='0') on item 'FrmSGAA.ClientArea.DfKz02'.", repo.FrmSGAA.ClientArea.DfKz02Info, new RecordItemIndex(10));
            Validate.AttributeEqual(repo.FrmSGAA.ClientArea.DfKz02Info, "Text", "0");
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
