///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace S_LAND_Schnelltest.Recordings
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Start_IBAN recording.
    /// </summary>
    [TestModule("10359a7f-e0b5-483c-9465-264ece901f8a", ModuleType.Recording, 1)]
    public partial class Start_IBAN : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::S_LAND_Schnelltest.S_LAND_SchnelltestRepository repository.
        /// </summary>
        public static global::S_LAND_Schnelltest.S_LAND_SchnelltestRepository repo = global::S_LAND_Schnelltest.S_LAND_SchnelltestRepository.Instance;

        static Start_IBAN instance = new Start_IBAN();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Start_IBAN()
        {
            Startfile = "C:\\Testdaten\\Allgemein\\Start.bat";
            Programm_BLZ = "S_LAND Aufrufart=BLZ";
            Programm_IBAN = "S_LAND Aufrufart=IBAN";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Start_IBAN Instance
        {
            get { return instance; }
        }

#region Variables

        string _Startfile;

        /// <summary>
        /// Gets or sets the value of variable Startfile.
        /// </summary>
        [TestVariable("b2d442cc-2bf5-40c0-a6a7-e69f9b6ec8f8")]
        public string Startfile
        {
            get { return _Startfile; }
            set { _Startfile = value; }
        }

        string _Programm_BLZ;

        /// <summary>
        /// Gets or sets the value of variable Programm_BLZ.
        /// </summary>
        [TestVariable("f38e74f3-8a4f-4b0a-aeaa-5b1c7108216f")]
        public string Programm_BLZ
        {
            get { return _Programm_BLZ; }
            set { _Programm_BLZ = value; }
        }

        string _Programm_IBAN;

        /// <summary>
        /// Gets or sets the value of variable Programm_IBAN.
        /// </summary>
        [TestVariable("568571c6-6983-4466-b5c9-5470cb2aaf2e")]
        public string Programm_IBAN
        {
            get { return _Programm_IBAN; }
            set { _Programm_IBAN = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Application", "Run application with file name from variable $Startfile with arguments from variable $Programm_IBAN in normal mode.", new RecordItemIndex(0));
            Host.Local.RunApplication(Startfile, Programm_IBAN, "", false);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 2m to exist. Associated repository item: 'TblKonvertierung.TitleBar100KonvertierenDerBankverb'", repo.TblKonvertierung.TitleBar100KonvertierenDerBankverbInfo, new ActionTimeout(120000), new RecordItemIndex(1));
            repo.TblKonvertierung.TitleBar100KonvertierenDerBankverbInfo.WaitForExists(120000);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (Text>'Konvertieren der Bankverbindung') on item 'TblKonvertierung.TitleBar100KonvertierenDerBankverb'.", repo.TblKonvertierung.TitleBar100KonvertierenDerBankverbInfo, new RecordItemIndex(2));
            Validate.AttributeContains(repo.TblKonvertierung.TitleBar100KonvertierenDerBankverbInfo, "Text", "Konvertieren der Bankverbindung");
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
