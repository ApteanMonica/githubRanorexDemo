///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace S_LAND_Schnelltest.Recordings
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Start_BLZ recording.
    /// </summary>
    [TestModule("db7582ed-1b78-4a5a-9d07-b88a64bdc989", ModuleType.Recording, 1)]
    public partial class Start_BLZ : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::S_LAND_Schnelltest.S_LAND_SchnelltestRepository repository.
        /// </summary>
        public static global::S_LAND_Schnelltest.S_LAND_SchnelltestRepository repo = global::S_LAND_Schnelltest.S_LAND_SchnelltestRepository.Instance;

        static Start_BLZ instance = new Start_BLZ();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Start_BLZ()
        {
            Startfile = "C:\\Testdaten\\Allgemein\\Start.bat";
            Programm_PLZ = "S_LAND Aufrufart=PLZ";
            Programm_BLZ = "S_LAND Aufrufart=BLZ";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Start_BLZ Instance
        {
            get { return instance; }
        }

#region Variables

        string _Startfile;

        /// <summary>
        /// Gets or sets the value of variable Startfile.
        /// </summary>
        [TestVariable("acb9b936-651e-4885-8cec-af5ff6d005c0")]
        public string Startfile
        {
            get { return _Startfile; }
            set { _Startfile = value; }
        }

        string _Programm_PLZ;

        /// <summary>
        /// Gets or sets the value of variable Programm_PLZ.
        /// </summary>
        [TestVariable("2baa9a3b-f757-48a9-9356-5bdc40810f51")]
        public string Programm_PLZ
        {
            get { return _Programm_PLZ; }
            set { _Programm_PLZ = value; }
        }

        string _Programm_BLZ;

        /// <summary>
        /// Gets or sets the value of variable Programm_BLZ.
        /// </summary>
        [TestVariable("669ba2e1-9391-4b28-8300-49e47ecf22a1")]
        public string Programm_BLZ
        {
            get { return _Programm_BLZ; }
            set { _Programm_BLZ = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Application", "Run application with file name from variable $Startfile with arguments from variable $Programm_BLZ in normal mode.", new RecordItemIndex(0));
            Host.Local.RunApplication(Startfile, Programm_BLZ, "", false);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 2m to exist. Associated repository item: 'TblBankleitzahl.TitleBar100BankleitzahlVerwalten'", repo.TblBankleitzahl.TitleBar100BankleitzahlVerwaltenInfo, new ActionTimeout(120000), new RecordItemIndex(1));
            repo.TblBankleitzahl.TitleBar100BankleitzahlVerwaltenInfo.WaitForExists(120000);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (Text>'Postleitzahl') on item 'TblBankleitzahl.TitleBar100BankleitzahlVerwalten'.", repo.TblBankleitzahl.TitleBar100BankleitzahlVerwaltenInfo, new RecordItemIndex(2));
            Validate.AttributeContains(repo.TblBankleitzahl.TitleBar100BankleitzahlVerwaltenInfo, "Text", "Postleitzahl");
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
