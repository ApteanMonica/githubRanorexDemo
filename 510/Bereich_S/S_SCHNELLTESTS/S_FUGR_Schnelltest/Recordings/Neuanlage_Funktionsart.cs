///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace S_FUGR_Schnelltest.Recordings
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Neuanlage_Funktionsart recording.
    /// </summary>
    [TestModule("d4fd4833-54bb-40e6-940f-61e2dda170a9", ModuleType.Recording, 1)]
    public partial class Neuanlage_Funktionsart : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::S_FUGR_Schnelltest.S_FUGR_SchnelltestRepository repository.
        /// </summary>
        public static global::S_FUGR_Schnelltest.S_FUGR_SchnelltestRepository repo = global::S_FUGR_Schnelltest.S_FUGR_SchnelltestRepository.Instance;

        static Neuanlage_Funktionsart instance = new Neuanlage_Funktionsart();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Neuanlage_Funktionsart()
        {
            FUNKTIONSART_NEU = "XX";
            BEZEICHNUNG_FUNKTIONSART_NEU = "Testart_BAR";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Neuanlage_Funktionsart Instance
        {
            get { return instance; }
        }

#region Variables

        /// <summary>
        /// Gets or sets the value of variable FUNKTIONSART_NEU.
        /// </summary>
        [TestVariable("446574ec-166c-49ae-a1ea-7ae857ba01f8")]
        public string FUNKTIONSART_NEU
        {
            get { return repo.FUNKTIONSART_NEU; }
            set { repo.FUNKTIONSART_NEU = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable BEZEICHNUNG_FUNKTIONSART_NEU.
        /// </summary>
        [TestVariable("8048fd6f-ecc8-441f-ac14-afa448914651")]
        public string BEZEICHNUNG_FUNKTIONSART_NEU
        {
            get { return repo.BEZEICHNUNG_FUNKTIONSART_NEU; }
            set { repo.BEZEICHNUNG_FUNKTIONSART_NEU = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'TblSFuga.RibbonBar.PbDataAccessNew' at Center.", repo.TblSFuga.RibbonBar.PbDataAccessNewInfo, new RecordItemIndex(0));
            repo.TblSFuga.RibbonBar.PbDataAccessNew.Click();
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'TblSFuga.FlexGrid' at Center.", repo.TblSFuga.FlexGrid.SelfInfo, new RecordItemIndex(1));
            repo.TblSFuga.FlexGrid.Self.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Insert}' with focus on 'TblSFuga.FlexGrid'.", repo.TblSFuga.FlexGrid.SelfInfo, new RecordItemIndex(2));
            repo.TblSFuga.FlexGrid.Self.PressKeys("{Insert}");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$FUNKTIONSART_NEU'.", new RecordItemIndex(3));
            Keyboard.Press(FUNKTIONSART_NEU);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Tab' Press.", new RecordItemIndex(4));
            Keyboard.Press(System.Windows.Forms.Keys.Tab, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$BEZEICHNUNG_FUNKTIONSART_NEU'.", new RecordItemIndex(5));
            Keyboard.Press(BEZEICHNUNG_FUNKTIONSART_NEU);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'TblSFuga.RibbonBar.PbDataAccessSave' at Center.", repo.TblSFuga.RibbonBar.PbDataAccessSaveInfo, new RecordItemIndex(6));
            repo.TblSFuga.RibbonBar.PbDataAccessSave.Click();
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'TblSFuga.RibbonBar.PbDataAccessLoad' at Center.", repo.TblSFuga.RibbonBar.PbDataAccessLoadInfo, new RecordItemIndex(7));
            repo.TblSFuga.RibbonBar.PbDataAccessLoad.Click();
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 2m to exist. Associated repository item: 'TblSFuga.FlexGrid.Row_mit_Variable_Funktionsart_Neu'", repo.TblSFuga.FlexGrid.Row_mit_Variable_Funktionsart_Neu.SelfInfo, new ActionTimeout(120000), new RecordItemIndex(8));
            repo.TblSFuga.FlexGrid.Row_mit_Variable_Funktionsart_Neu.SelfInfo.WaitForExists(120000);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$FUNKTIONSART_NEU) on item 'TblSFuga.FlexGrid.Row_mit_Variable_Funktionsart_Neu.ColFugaCd'.", repo.TblSFuga.FlexGrid.Row_mit_Variable_Funktionsart_Neu.ColFugaCdInfo, new RecordItemIndex(9));
            Validate.AttributeEqual(repo.TblSFuga.FlexGrid.Row_mit_Variable_Funktionsart_Neu.ColFugaCdInfo, "Text", FUNKTIONSART_NEU);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$BEZEICHNUNG_FUNKTIONSART_NEU) on item 'TblSFuga.FlexGrid.Row_mit_Variable_Funktionsart_Neu.ColFugaBez'.", repo.TblSFuga.FlexGrid.Row_mit_Variable_Funktionsart_Neu.ColFugaBezInfo, new RecordItemIndex(10));
            Validate.AttributeEqual(repo.TblSFuga.FlexGrid.Row_mit_Variable_Funktionsart_Neu.ColFugaBezInfo, "Text", BEZEICHNUNG_FUNKTIONSART_NEU);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
