///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace S_MEH_Schnelltest.Recordings
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Neuanlage_Mengeneinheit recording.
    /// </summary>
    [TestModule("7ca564d2-d447-45cf-8d13-191f0265f99f", ModuleType.Recording, 1)]
    public partial class Neuanlage_Mengeneinheit : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::S_MEH_Schnelltest.S_MEH_SchnelltestRepository repository.
        /// </summary>
        public static global::S_MEH_Schnelltest.S_MEH_SchnelltestRepository repo = global::S_MEH_Schnelltest.S_MEH_SchnelltestRepository.Instance;

        static Neuanlage_Mengeneinheit instance = new Neuanlage_Mengeneinheit();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Neuanlage_Mengeneinheit()
        {
            Mengeneinheit_CD_Neu = "XX";
            Mengeneinheit_Bezeichnung_CD_Neu = "Mengeneinheit_Neu";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Neuanlage_Mengeneinheit Instance
        {
            get { return instance; }
        }

#region Variables

        string _Mengeneinheit_Bezeichnung_CD_Neu;

        /// <summary>
        /// Gets or sets the value of variable Mengeneinheit_Bezeichnung_CD_Neu.
        /// </summary>
        [TestVariable("3af477c1-dd47-445c-be3e-04b3be79690f")]
        public string Mengeneinheit_Bezeichnung_CD_Neu
        {
            get { return _Mengeneinheit_Bezeichnung_CD_Neu; }
            set { _Mengeneinheit_Bezeichnung_CD_Neu = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable Mengeneinheit_CD_Neu.
        /// </summary>
        [TestVariable("07803e4b-1612-4f0d-bc74-62fe792de1b6")]
        public string Mengeneinheit_CD_Neu
        {
            get { return repo.Mengeneinheit_CD_Neu; }
            set { repo.Mengeneinheit_CD_Neu = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'TblMeh.RibbonBar.PbDataAccessNew' at Center.", repo.TblMeh.RibbonBar.PbDataAccessNewInfo, new RecordItemIndex(0));
            repo.TblMeh.RibbonBar.PbDataAccessNew.Click();
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Right Click item 'TblMeh.FlexGrid' at Center.", repo.TblMeh.FlexGrid.SelfInfo, new RecordItemIndex(1));
            repo.TblMeh.FlexGrid.Self.Click(System.Windows.Forms.MouseButtons.Right);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Down}{Return}'.", new RecordItemIndex(2));
            Keyboard.Press("{Down}{Return}");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Mengeneinheit_CD_Neu'.", new RecordItemIndex(3));
            Keyboard.Press(Mengeneinheit_CD_Neu);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Tab' Press.", new RecordItemIndex(4));
            Keyboard.Press(System.Windows.Forms.Keys.Tab, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Mengeneinheit_Bezeichnung_CD_Neu'.", new RecordItemIndex(5));
            Keyboard.Press(Mengeneinheit_Bezeichnung_CD_Neu);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Tab' Press.", new RecordItemIndex(6));
            Keyboard.Press(System.Windows.Forms.Keys.Tab, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'TblMeh.RibbonBar.PbDataAccessSave' at Center.", repo.TblMeh.RibbonBar.PbDataAccessSaveInfo, new RecordItemIndex(7));
            repo.TblMeh.RibbonBar.PbDataAccessSave.Click();
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'TblMeh.RibbonBar.PbDataAccessLoad' at Center.", repo.TblMeh.RibbonBar.PbDataAccessLoadInfo, new RecordItemIndex(8));
            repo.TblMeh.RibbonBar.PbDataAccessLoad.Click();
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 2m to exist. Associated repository item: 'TblMeh.TitleBar100VerwaltungMengeneinhei'", repo.TblMeh.TitleBar100VerwaltungMengeneinheiInfo, new ActionTimeout(120000), new RecordItemIndex(9));
            repo.TblMeh.TitleBar100VerwaltungMengeneinheiInfo.WaitForExists(120000);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Mengeneinheit_CD_Neu) on item 'TblMeh.FlexGrid.Row_mit_Variable_Mengeneinheit_CD_Neu.ColMehCd'.", repo.TblMeh.FlexGrid.Row_mit_Variable_Mengeneinheit_CD_Neu.ColMehCdInfo, new RecordItemIndex(10));
            Validate.AttributeEqual(repo.TblMeh.FlexGrid.Row_mit_Variable_Mengeneinheit_CD_Neu.ColMehCdInfo, "Text", Mengeneinheit_CD_Neu);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Mengeneinheit_Bezeichnung_CD_Neu) on item 'TblMeh.FlexGrid.Row_mit_Variable_Mengeneinheit_CD_Neu.ColMehBez'.", repo.TblMeh.FlexGrid.Row_mit_Variable_Mengeneinheit_CD_Neu.ColMehBezInfo, new RecordItemIndex(11));
            Validate.AttributeEqual(repo.TblMeh.FlexGrid.Row_mit_Variable_Mengeneinheit_CD_Neu.ColMehBezInfo, "Text", Mengeneinheit_Bezeichnung_CD_Neu);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
