///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace S_MEH_Schnelltest.Recordings
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Bearbeiten_Mengeneinheit_CD_Neu recording.
    /// </summary>
    [TestModule("56abe584-6b69-45dd-94c7-d951478cfb2e", ModuleType.Recording, 1)]
    public partial class Bearbeiten_Mengeneinheit_CD_Neu : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::S_MEH_Schnelltest.S_MEH_SchnelltestRepository repository.
        /// </summary>
        public static global::S_MEH_Schnelltest.S_MEH_SchnelltestRepository repo = global::S_MEH_Schnelltest.S_MEH_SchnelltestRepository.Instance;

        static Bearbeiten_Mengeneinheit_CD_Neu instance = new Bearbeiten_Mengeneinheit_CD_Neu();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Bearbeiten_Mengeneinheit_CD_Neu()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Bearbeiten_Mengeneinheit_CD_Neu Instance
        {
            get { return instance; }
        }

#region Variables

        /// <summary>
        /// Gets or sets the value of variable Mengeneinheit_CD_Neu.
        /// </summary>
        [TestVariable("7c504ea6-c758-4215-8ca4-331ce4746b1d")]
        public string Mengeneinheit_CD_Neu
        {
            get { return repo.Mengeneinheit_CD_Neu; }
            set { repo.Mengeneinheit_CD_Neu = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'TblMeh.FlexGrid.Row_mit_Variable_Mengeneinheit_CD_Neu.ColMehZ_Checkbox_Zeit_EH' at Center.", repo.TblMeh.FlexGrid.Row_mit_Variable_Mengeneinheit_CD_Neu.ColMehZ_Checkbox_Zeit_EHInfo, new RecordItemIndex(0));
            repo.TblMeh.FlexGrid.Row_mit_Variable_Mengeneinheit_CD_Neu.ColMehZ_Checkbox_Zeit_EH.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '60{Tab}' with focus on 'TblMeh.FlexGrid.Row_mit_Variable_Mengeneinheit_CD_Neu.ColMehFaktor'.", repo.TblMeh.FlexGrid.Row_mit_Variable_Mengeneinheit_CD_Neu.ColMehFaktorInfo, new RecordItemIndex(1));
            repo.TblMeh.FlexGrid.Row_mit_Variable_Mengeneinheit_CD_Neu.ColMehFaktor.PressKeys("60{Tab}");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'TblMeh.RibbonBar.PbDataAccessSave' at Center.", repo.TblMeh.RibbonBar.PbDataAccessSaveInfo, new RecordItemIndex(2));
            repo.TblMeh.RibbonBar.PbDataAccessSave.Click();
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'TblMeh.RibbonBar.PbDataAccessLoad' at Center.", repo.TblMeh.RibbonBar.PbDataAccessLoadInfo, new RecordItemIndex(3));
            repo.TblMeh.RibbonBar.PbDataAccessLoad.Click();
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 2m to exist. Associated repository item: 'TblMeh.TitleBar100VerwaltungMengeneinhei'", repo.TblMeh.TitleBar100VerwaltungMengeneinheiInfo, new ActionTimeout(120000), new RecordItemIndex(4));
            repo.TblMeh.TitleBar100VerwaltungMengeneinheiInfo.WaitForExists(120000);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (AccessibleValue='True') on item 'TblMeh.FlexGrid.Row_mit_Variable_Mengeneinheit_CD_Neu.ColMehZ_Checkbox_Zeit_EH'.", repo.TblMeh.FlexGrid.Row_mit_Variable_Mengeneinheit_CD_Neu.ColMehZ_Checkbox_Zeit_EHInfo, new RecordItemIndex(5));
            Validate.AttributeEqual(repo.TblMeh.FlexGrid.Row_mit_Variable_Mengeneinheit_CD_Neu.ColMehZ_Checkbox_Zeit_EHInfo, "AccessibleValue", "True");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='60') on item 'TblMeh.FlexGrid.Row_mit_Variable_Mengeneinheit_CD_Neu.ColMehFaktor'.", repo.TblMeh.FlexGrid.Row_mit_Variable_Mengeneinheit_CD_Neu.ColMehFaktorInfo, new RecordItemIndex(6));
            Validate.AttributeEqual(repo.TblMeh.FlexGrid.Row_mit_Variable_Mengeneinheit_CD_Neu.ColMehFaktorInfo, "Text", "60");
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
