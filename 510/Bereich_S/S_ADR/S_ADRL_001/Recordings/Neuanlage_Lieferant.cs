///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace S_ADRL_001.Recordings
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Neuanlage_Lieferant recording.
    /// </summary>
    [TestModule("1cd0bd9b-243c-4604-99b8-ad356e27f5d8", ModuleType.Recording, 1)]
    public partial class Neuanlage_Lieferant : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::S_ADRL_001.S_ADRL_001Repository repository.
        /// </summary>
        public static global::S_ADRL_001.S_ADRL_001Repository repo = global::S_ADRL_001.S_ADRL_001Repository.Instance;

        static Neuanlage_Lieferant instance = new Neuanlage_Lieferant();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Neuanlage_Lieferant()
        {
            Kurzname = "Teekanne";
            Firma1 = "Tee GmbH & Co.KG ";
            Strasse = "Dorfstraße 67";
            PLZ = "5020";
            Ort = "Salzburg";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Neuanlage_Lieferant Instance
        {
            get { return instance; }
        }

#region Variables

        string _Kurzname;

        /// <summary>
        /// Gets or sets the value of variable Kurzname.
        /// </summary>
        [TestVariable("ade0c089-0ea1-416d-9e12-1b585168370a")]
        public string Kurzname
        {
            get { return _Kurzname; }
            set { _Kurzname = value; }
        }

        string _Firma1;

        /// <summary>
        /// Gets or sets the value of variable Firma1.
        /// </summary>
        [TestVariable("f11c327a-2764-45da-a9eb-1870d5aa00e6")]
        public string Firma1
        {
            get { return _Firma1; }
            set { _Firma1 = value; }
        }

        string _Strasse;

        /// <summary>
        /// Gets or sets the value of variable Strasse.
        /// </summary>
        [TestVariable("ee0b52b1-3c6d-488f-a7cc-df2eae0696db")]
        public string Strasse
        {
            get { return _Strasse; }
            set { _Strasse = value; }
        }

        string _PLZ;

        /// <summary>
        /// Gets or sets the value of variable PLZ.
        /// </summary>
        [TestVariable("5093461f-5a4e-41aa-8d45-5269f2ba32bc")]
        public string PLZ
        {
            get { return _PLZ; }
            set { _PLZ = value; }
        }

        string _Ort;

        /// <summary>
        /// Gets or sets the value of variable Ort.
        /// </summary>
        [TestVariable("15d84518-f5f1-4962-a586-6be2173ecac9")]
        public string Ort
        {
            get { return _Ort; }
            set { _Ort = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmAdr.Button_Neu' at Center.", repo.FrmAdr.Button_NeuInfo, new RecordItemIndex(0));
            repo.FrmAdr.Button_Neu.Click();
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmAdr.Kurzname' at Center.", repo.FrmAdr.KurznameInfo, new RecordItemIndex(1));
            repo.FrmAdr.Kurzname.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Kurzname' with focus on 'FrmAdr.Kurzname'.", repo.FrmAdr.KurznameInfo, new RecordItemIndex(2));
            repo.FrmAdr.Kurzname.PressKeys(Kurzname);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Tab}' with focus on 'FrmAdr.Kurzname'.", repo.FrmAdr.KurznameInfo, new RecordItemIndex(3));
            repo.FrmAdr.Kurzname.PressKeys("{Tab}");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Firma1' with focus on 'FrmAdr.Firma1'.", repo.FrmAdr.Firma1Info, new RecordItemIndex(4));
            repo.FrmAdr.Firma1.PressKeys(Firma1);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Firma1) on item 'FrmAdr.Firma1'.", repo.FrmAdr.Firma1Info, new RecordItemIndex(5));
            Validate.AttributeEqual(repo.FrmAdr.Firma1Info, "Text", Firma1);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmAdr.Strasse' at Center.", repo.FrmAdr.StrasseInfo, new RecordItemIndex(6));
            repo.FrmAdr.Strasse.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Strasse' with focus on 'FrmAdr.Strasse'.", repo.FrmAdr.StrasseInfo, new RecordItemIndex(7));
            repo.FrmAdr.Strasse.PressKeys(Strasse);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Strasse) on item 'FrmAdr.Strasse'.", repo.FrmAdr.StrasseInfo, new RecordItemIndex(8));
            Validate.AttributeEqual(repo.FrmAdr.StrasseInfo, "Text", Strasse);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmAdr.PLZ' at Center.", repo.FrmAdr.PLZInfo, new RecordItemIndex(9));
            repo.FrmAdr.PLZ.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$PLZ' with focus on 'FrmAdr.PLZ'.", repo.FrmAdr.PLZInfo, new RecordItemIndex(10));
            repo.FrmAdr.PLZ.PressKeys(PLZ);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$PLZ) on item 'FrmAdr.PLZ'.", repo.FrmAdr.PLZInfo, new RecordItemIndex(11));
            Validate.AttributeEqual(repo.FrmAdr.PLZInfo, "Text", PLZ);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Tab}' with focus on 'FrmAdr.PLZ'.", repo.FrmAdr.PLZInfo, new RecordItemIndex(12));
            repo.FrmAdr.PLZ.PressKeys("{Tab}");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Ort) on item 'FrmAdr.Ort'.", repo.FrmAdr.OrtInfo, new RecordItemIndex(13));
            Validate.AttributeEqual(repo.FrmAdr.OrtInfo, "Text", Ort);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmAdr.Speicher_Button' at Center.", repo.FrmAdr.Speicher_ButtonInfo, new RecordItemIndex(14));
            repo.FrmAdr.Speicher_Button.Click();
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='Bitte Lieferantennummer eingeben !') on item 'DlgMessageBox.LabelMeldungstext'.", repo.DlgMessageBox.LabelMeldungstextInfo, new RecordItemIndex(15));
            Validate.AttributeEqual(repo.DlgMessageBox.LabelMeldungstextInfo, "Text", "Bitte Lieferantennummer eingeben !");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'DlgMessageBox.Bestaetigung_Fehlermeldung' at Center.", repo.DlgMessageBox.Bestaetigung_FehlermeldungInfo, new RecordItemIndex(16));
            repo.DlgMessageBox.Bestaetigung_Fehlermeldung.Click();
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmAdr.Nummer_Button' at Center.", repo.FrmAdr.Nummer_ButtonInfo, new RecordItemIndex(17));
            repo.FrmAdr.Nummer_Button.Click();
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmAdr.Speicher_Button' at Center.", repo.FrmAdr.Speicher_ButtonInfo, new RecordItemIndex(18));
            repo.FrmAdr.Speicher_Button.Click();
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeRegex (Text~'\\d{6}') on item 'FrmAdr.DfAdrNr'.", repo.FrmAdr.DfAdrNrInfo, new RecordItemIndex(19));
            Validate.AttributeRegex(repo.FrmAdr.DfAdrNrInfo, "Text", new Regex("\\d{6}"));
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
