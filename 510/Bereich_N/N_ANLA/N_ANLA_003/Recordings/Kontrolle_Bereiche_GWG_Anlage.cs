///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace N_ANLA_003.Recordings
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Kontrolle_Bereiche_GWG_Anlage recording.
    /// </summary>
    [TestModule("0fbc7708-cc70-4117-9ab3-57195069136c", ModuleType.Recording, 1)]
    public partial class Kontrolle_Bereiche_GWG_Anlage : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::N_ANLA_003.N_ANLA_003Repository repository.
        /// </summary>
        public static global::N_ANLA_003.N_ANLA_003Repository repo = global::N_ANLA_003.N_ANLA_003Repository.Instance;

        static Kontrolle_Bereiche_GWG_Anlage instance = new Kontrolle_Bereiche_GWG_Anlage();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Kontrolle_Bereiche_GWG_Anlage()
        {
            Pos_Anlage_003_02 = "1";
            Kostenstelle_Anlage_003_02 = "20";
            Menge_Anlage_003_02 = "1,00";
            Prozent_Anlage_003_02 = "100,00000000";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Kontrolle_Bereiche_GWG_Anlage Instance
        {
            get { return instance; }
        }

#region Variables

        string _Pos_Anlage_003_02;

        /// <summary>
        /// Gets or sets the value of variable Pos_Anlage_003_02.
        /// </summary>
        [TestVariable("10a74294-a0e0-435c-8988-b4f53a703e66")]
        public string Pos_Anlage_003_02
        {
            get { return _Pos_Anlage_003_02; }
            set { _Pos_Anlage_003_02 = value; }
        }

        string _Kostenstelle_Anlage_003_02;

        /// <summary>
        /// Gets or sets the value of variable Kostenstelle_Anlage_003_02.
        /// </summary>
        [TestVariable("18a75853-1e86-4daa-9648-ee1b20be99e6")]
        public string Kostenstelle_Anlage_003_02
        {
            get { return _Kostenstelle_Anlage_003_02; }
            set { _Kostenstelle_Anlage_003_02 = value; }
        }

        string _Menge_Anlage_003_02;

        /// <summary>
        /// Gets or sets the value of variable Menge_Anlage_003_02.
        /// </summary>
        [TestVariable("0fc1e7dc-0a0f-418b-8fc0-00b5a49e7f62")]
        public string Menge_Anlage_003_02
        {
            get { return _Menge_Anlage_003_02; }
            set { _Menge_Anlage_003_02 = value; }
        }

        string _Prozent_Anlage_003_02;

        /// <summary>
        /// Gets or sets the value of variable Prozent_Anlage_003_02.
        /// </summary>
        [TestVariable("55b3853e-9226-41dc-a037-6a9336f174a1")]
        public string Prozent_Anlage_003_02
        {
            get { return _Prozent_Anlage_003_02; }
            set { _Prozent_Anlage_003_02 = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Wait", "Waiting 2m to exist. Associated repository item: 'FrmAnla.TitleBar100AVZAnlagen'", repo.FrmAnla.TitleBar100AVZAnlagenInfo, new ActionTimeout(120000), new RecordItemIndex(0));
            repo.FrmAnla.TitleBar100AVZAnlagenInfo.WaitForExists(120000);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (Text>'[100]  AVZ - Anlagen') on item 'FrmAnla.TitleBar100AVZAnlagen'.", repo.FrmAnla.TitleBar100AVZAnlagenInfo, new RecordItemIndex(1));
            Validate.AttributeContains(repo.FrmAnla.TitleBar100AVZAnlagenInfo, "Text", "[100]  AVZ - Anlagen");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmAnla.PbCommonNew' at Center.", repo.FrmAnla.PbCommonNewInfo, new RecordItemIndex(2));
            repo.FrmAnla.PbCommonNew.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '003_02{Tab}' with focus on 'FrmAnla.ClientArea.Anlagennr_Maske_N_ANLA'.", repo.FrmAnla.ClientArea.Anlagennr_Maske_N_ANLAInfo, new RecordItemIndex(3));
            repo.FrmAnla.ClientArea.Anlagennr_Maske_N_ANLA.PressKeys("003_02{Tab}");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmAnla.ClientArea.Bereiche' at Center.", repo.FrmAnla.ClientArea.BereicheInfo, new RecordItemIndex(4));
            repo.FrmAnla.ClientArea.Bereiche.Click();
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Pos_Anlage_003_02) on item 'FrmAnla.Registerkarte_Bereiche.ColAnbePosRow1'.", repo.FrmAnla.Registerkarte_Bereiche.ColAnbePosRow1Info, new RecordItemIndex(5));
            Validate.AttributeEqual(repo.FrmAnla.Registerkarte_Bereiche.ColAnbePosRow1Info, "Text", Pos_Anlage_003_02);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Kostenstelle_Anlage_003_02) on item 'FrmAnla.Registerkarte_Bereiche.ColBektNr1Row1'.", repo.FrmAnla.Registerkarte_Bereiche.ColBektNr1Row1Info, new RecordItemIndex(6));
            Validate.AttributeEqual(repo.FrmAnla.Registerkarte_Bereiche.ColBektNr1Row1Info, "Text", Kostenstelle_Anlage_003_02);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Menge_Anlage_003_02) on item 'FrmAnla.Registerkarte_Bereiche.ColAnbeMengeRow1'.", repo.FrmAnla.Registerkarte_Bereiche.ColAnbeMengeRow1Info, new RecordItemIndex(7));
            Validate.AttributeEqual(repo.FrmAnla.Registerkarte_Bereiche.ColAnbeMengeRow1Info, "Text", Menge_Anlage_003_02);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Prozent_Anlage_003_02) on item 'FrmAnla.Registerkarte_Bereiche.ColAnbeProzRow1'.", repo.FrmAnla.Registerkarte_Bereiche.ColAnbeProzRow1Info, new RecordItemIndex(8));
            Validate.AttributeEqual(repo.FrmAnla.Registerkarte_Bereiche.ColAnbeProzRow1Info, "Text", Prozent_Anlage_003_02);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
