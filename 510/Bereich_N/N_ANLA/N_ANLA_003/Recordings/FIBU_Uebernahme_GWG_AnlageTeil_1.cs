///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace N_ANLA_003.Recordings
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The FIBU_Uebernahme_GWG_AnlageTeil_1 recording.
    /// </summary>
    [TestModule("7f36b721-ff44-45a6-8181-7861ea27f474", ModuleType.Recording, 1)]
    public partial class FIBU_Uebernahme_GWG_AnlageTeil_1 : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::N_ANLA_003.N_ANLA_003Repository repository.
        /// </summary>
        public static global::N_ANLA_003.N_ANLA_003Repository repo = global::N_ANLA_003.N_ANLA_003Repository.Instance;

        static FIBU_Uebernahme_GWG_AnlageTeil_1 instance = new FIBU_Uebernahme_GWG_AnlageTeil_1();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public FIBU_Uebernahme_GWG_AnlageTeil_1()
        {
            GJ = "2022";
            Bezeichnung_GWG_Anlage = "Anlage_003_02";
            Anlagennummer_GWG_Anlage = "N_ANLA_003_02{Tab}";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static FIBU_Uebernahme_GWG_AnlageTeil_1 Instance
        {
            get { return instance; }
        }

#region Variables

        string _GJ;

        /// <summary>
        /// Gets or sets the value of variable GJ.
        /// </summary>
        [TestVariable("0f6fdc09-75d5-45f0-8eef-f36bfbb0e6de")]
        public string GJ
        {
            get { return _GJ; }
            set { _GJ = value; }
        }

        string _Bezeichnung_GWG_Anlage;

        /// <summary>
        /// Gets or sets the value of variable Bezeichnung_GWG_Anlage.
        /// </summary>
        [TestVariable("349fd7d1-e3d4-4a5c-8a1a-14c7cdd82e86")]
        public string Bezeichnung_GWG_Anlage
        {
            get { return _Bezeichnung_GWG_Anlage; }
            set { _Bezeichnung_GWG_Anlage = value; }
        }

        string _Anlagennummer_GWG_Anlage;

        /// <summary>
        /// Gets or sets the value of variable Anlagennummer_GWG_Anlage.
        /// </summary>
        [TestVariable("8aca698e-8acf-4946-b7d8-cc511ebea119")]
        public string Anlagennummer_GWG_Anlage
        {
            get { return _Anlagennummer_GWG_Anlage; }
            set { _Anlagennummer_GWG_Anlage = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Wait", "Waiting 2m to exist. Associated repository item: 'DlgZugang.TitleBar100AVZBuchungenZugang'", repo.DlgZugang.TitleBar100AVZBuchungenZugangInfo, new ActionTimeout(120000), new RecordItemIndex(0));
            repo.DlgZugang.TitleBar100AVZBuchungenZugangInfo.WaitForExists(120000);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (Text>'[100]  AVZ - Buchungen: Zugang') on item 'DlgZugang.TitleBar100AVZBuchungenZugang'.", repo.DlgZugang.TitleBar100AVZBuchungenZugangInfo, new RecordItemIndex(1));
            Validate.AttributeContains(repo.DlgZugang.TitleBar100AVZBuchungenZugangInfo, "Text", "[100]  AVZ - Buchungen: Zugang");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Form100AVZBuchungenZugang.PbNeu' at Center.", repo.Form100AVZBuchungenZugang.PbNeuInfo, new RecordItemIndex(2));
            repo.Form100AVZBuchungenZugang.PbNeu.Click();
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'DlgZugang.CbNkr' at Center.", repo.DlgZugang.CbNkrInfo, new RecordItemIndex(3));
            repo.DlgZugang.CbNkr.Click();
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Checked='False') on item 'DlgZugang.CbNkr'.", repo.DlgZugang.CbNkrInfo, new RecordItemIndex(4));
            Validate.AttributeEqual(repo.DlgZugang.CbNkrInfo, "Checked", "False");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$GJ) on item 'DlgZugang.DfGjhrBez'.", repo.DlgZugang.DfGjhrBezInfo, new RecordItemIndex(5));
            Validate.AttributeEqual(repo.DlgZugang.DfGjhrBezInfo, "Text", GJ);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Anlagennummer_GWG_Anlage' with focus on 'DlgZugang.DfAnlaNr'.", repo.DlgZugang.DfAnlaNrInfo, new RecordItemIndex(6));
            repo.DlgZugang.DfAnlaNr.PressKeys(Anlagennummer_GWG_Anlage);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Tab' Press with focus on 'DlgZugang.DfAnlaNr'.", repo.DlgZugang.DfAnlaNrInfo, new RecordItemIndex(7));
            Keyboard.PrepareFocus(repo.DlgZugang.DfAnlaNr);
            Keyboard.Press(System.Windows.Forms.Keys.Tab, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Anlagennummer_GWG_Anlage) on item 'DlgZugang.DfAnlaNr'.", repo.DlgZugang.DfAnlaNrInfo, new RecordItemIndex(8));
            Validate.AttributeEqual(repo.DlgZugang.DfAnlaNrInfo, "Text", Anlagennummer_GWG_Anlage);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Bezeichnung_GWG_Anlage' with focus on 'DlgZugang.DfAnlaBez'.", repo.DlgZugang.DfAnlaBezInfo, new RecordItemIndex(9));
            repo.DlgZugang.DfAnlaBez.PressKeys(Bezeichnung_GWG_Anlage);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Tab' Press with focus on 'DlgZugang.DfAnlaBez'.", repo.DlgZugang.DfAnlaBezInfo, new RecordItemIndex(10));
            Keyboard.PrepareFocus(repo.DlgZugang.DfAnlaBez);
            Keyboard.Press(System.Windows.Forms.Keys.Tab, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Bezeichnung_GWG_Anlage) on item 'DlgZugang.DfAnlaBez'.", repo.DlgZugang.DfAnlaBezInfo, new RecordItemIndex(11));
            Validate.AttributeEqual(repo.DlgZugang.DfAnlaBezInfo, "Text", Bezeichnung_GWG_Anlage);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
