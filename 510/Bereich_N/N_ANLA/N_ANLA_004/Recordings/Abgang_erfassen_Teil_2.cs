///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace N_ANLA_004.Recordings
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Abgang_erfassen_Teil_2 recording.
    /// </summary>
    [TestModule("7c8878d0-8b94-4aa7-abbb-422ab4b3956f", ModuleType.Recording, 1)]
    public partial class Abgang_erfassen_Teil_2 : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::N_ANLA_004.N_ANLA_004Repository repository.
        /// </summary>
        public static global::N_ANLA_004.N_ANLA_004Repository repo = global::N_ANLA_004.N_ANLA_004Repository.Instance;

        static Abgang_erfassen_Teil_2 instance = new Abgang_erfassen_Teil_2();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Abgang_erfassen_Teil_2()
        {
            GJ = "2023";
            Anlagennr = "N_ANLA_004_01";
            Buchungsdatum = "28.02.2023";
            Beleg = "Abgang_N_ANLA_004_01";
            Sachbearbeiter = "BAR";
            Abgangserloes = "150";
            Abgabegrund = "A";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Abgang_erfassen_Teil_2 Instance
        {
            get { return instance; }
        }

#region Variables

        string _GJ;

        /// <summary>
        /// Gets or sets the value of variable GJ.
        /// </summary>
        [TestVariable("a0ff0a0e-dc02-45d2-94b9-b81b6b5a0555")]
        public string GJ
        {
            get { return _GJ; }
            set { _GJ = value; }
        }

        string _Anlagennr;

        /// <summary>
        /// Gets or sets the value of variable Anlagennr.
        /// </summary>
        [TestVariable("46f5ddf5-c3cd-43f7-94f1-826928b7f7a3")]
        public string Anlagennr
        {
            get { return _Anlagennr; }
            set { _Anlagennr = value; }
        }

        string _Buchungsdatum;

        /// <summary>
        /// Gets or sets the value of variable Buchungsdatum.
        /// </summary>
        [TestVariable("f6b656f6-e20d-4cd3-9cd0-8aec19829e9e")]
        public string Buchungsdatum
        {
            get { return _Buchungsdatum; }
            set { _Buchungsdatum = value; }
        }

        string _Beleg;

        /// <summary>
        /// Gets or sets the value of variable Beleg.
        /// </summary>
        [TestVariable("b78d7320-9f03-4dba-8550-677ca9f0a8c5")]
        public string Beleg
        {
            get { return _Beleg; }
            set { _Beleg = value; }
        }

        string _Sachbearbeiter;

        /// <summary>
        /// Gets or sets the value of variable Sachbearbeiter.
        /// </summary>
        [TestVariable("1b1401c6-1622-4474-9491-9c666353cd98")]
        public string Sachbearbeiter
        {
            get { return _Sachbearbeiter; }
            set { _Sachbearbeiter = value; }
        }

        string _Abgangserloes;

        /// <summary>
        /// Gets or sets the value of variable Abgangserloes.
        /// </summary>
        [TestVariable("6e214de1-e500-4d59-9224-649935e67ea8")]
        public string Abgangserloes
        {
            get { return _Abgangserloes; }
            set { _Abgangserloes = value; }
        }

        string _Abgabegrund;

        /// <summary>
        /// Gets or sets the value of variable Abgabegrund.
        /// </summary>
        [TestVariable("f929911a-69d0-4106-b702-5167d962bfa2")]
        public string Abgabegrund
        {
            get { return _Abgabegrund; }
            set { _Abgabegrund = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmAnla.PbNew' at Center.", repo.FrmAnla.PbNewInfo, new RecordItemIndex(0));
            repo.FrmAnla.PbNew.Click();
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 2m to exist. Associated repository item: 'FrmAnla.TitleBar100AVZAnlagen'", repo.FrmAnla.TitleBar100AVZAnlagenInfo, new ActionTimeout(120000), new RecordItemIndex(1));
            repo.FrmAnla.TitleBar100AVZAnlagenInfo.WaitForExists(120000);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmAnla.PbBuchenBuchen' at Center.", repo.FrmAnla.PbBuchenBuchenInfo, new RecordItemIndex(2));
            repo.FrmAnla.PbBuchenBuchen.Click();
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'NANLA.Abgang' at Center.", repo.NANLA.AbgangInfo, new RecordItemIndex(3));
            repo.NANLA.Abgang.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Down' Press.", new RecordItemIndex(4));
            Keyboard.Press(System.Windows.Forms.Keys.Down, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Down' Press.", new RecordItemIndex(5));
            Keyboard.Press(System.Windows.Forms.Keys.Down, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Enter' Press.", new RecordItemIndex(6));
            Keyboard.Press(System.Windows.Forms.Keys.Return, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 2m to exist. Associated repository item: 'DlgBuchen.TitleBar100AVZAbgangBuchen'", repo.DlgBuchen.TitleBar100AVZAbgangBuchenInfo, new ActionTimeout(120000), new RecordItemIndex(7));
            repo.DlgBuchen.TitleBar100AVZAbgangBuchenInfo.WaitForExists(120000);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (Text>'[100]  AVZ - Abgang buchen') on item 'DlgBuchen.TitleBar100AVZAbgangBuchen'.", repo.DlgBuchen.TitleBar100AVZAbgangBuchenInfo, new RecordItemIndex(8));
            Validate.AttributeContains(repo.DlgBuchen.TitleBar100AVZAbgangBuchenInfo, "Text", "[100]  AVZ - Abgang buchen");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left DoubleClick item 'DlgBuchen.ClientArea_Maske_Abgang_buchen.Geschaeftsjahr' at Center.", repo.DlgBuchen.ClientArea_Maske_Abgang_buchen.GeschaeftsjahrInfo, new RecordItemIndex(9));
            repo.DlgBuchen.ClientArea_Maske_Abgang_buchen.Geschaeftsjahr.DoubleClick();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Anlagennr' with focus on 'DlgBuchen.ClientArea_Maske_Abgang_buchen.Text_Anlagennr'.", repo.DlgBuchen.ClientArea_Maske_Abgang_buchen.Text_AnlagennrInfo, new RecordItemIndex(10));
            repo.DlgBuchen.ClientArea_Maske_Abgang_buchen.Text_Anlagennr.PressKeys(Anlagennr);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Tab' Press.", new RecordItemIndex(11));
            Keyboard.Press(System.Windows.Forms.Keys.Tab, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '0{Tab}' with focus on 'DlgBuchen.ClientArea_Maske_Abgang_buchen.Text_Anlagenpos'.", repo.DlgBuchen.ClientArea_Maske_Abgang_buchen.Text_AnlagenposInfo, new RecordItemIndex(12));
            repo.DlgBuchen.ClientArea_Maske_Abgang_buchen.Text_Anlagenpos.PressKeys("0{Tab}");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Buchungsdatum' with focus on 'DlgBuchen.ClientArea_Maske_Abgang_buchen.Buchungsdatum'.", repo.DlgBuchen.ClientArea_Maske_Abgang_buchen.BuchungsdatumInfo, new RecordItemIndex(13));
            repo.DlgBuchen.ClientArea_Maske_Abgang_buchen.Buchungsdatum.PressKeys(Buchungsdatum);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Tab' Press.", new RecordItemIndex(14));
            Keyboard.Press(System.Windows.Forms.Keys.Tab, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Beleg' with focus on 'DlgBuchen.ClientArea_Maske_Abgang_buchen.Text_Belegnummer'.", repo.DlgBuchen.ClientArea_Maske_Abgang_buchen.Text_BelegnummerInfo, new RecordItemIndex(15));
            repo.DlgBuchen.ClientArea_Maske_Abgang_buchen.Text_Belegnummer.PressKeys(Beleg);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Tab' Press.", new RecordItemIndex(16));
            Keyboard.Press(System.Windows.Forms.Keys.Tab, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Buchungsdatum' with focus on 'DlgBuchen.ClientArea_Maske_Abgang_buchen.Text_Belegdatum'.", repo.DlgBuchen.ClientArea_Maske_Abgang_buchen.Text_BelegdatumInfo, new RecordItemIndex(17));
            repo.DlgBuchen.ClientArea_Maske_Abgang_buchen.Text_Belegdatum.PressKeys(Buchungsdatum);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Tab' Press.", new RecordItemIndex(18));
            Keyboard.Press(System.Windows.Forms.Keys.Tab, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Sachbearbeiter' with focus on 'DlgBuchen.ClientArea_Maske_Abgang_buchen.Text_Sachbearbeiter'.", repo.DlgBuchen.ClientArea_Maske_Abgang_buchen.Text_SachbearbeiterInfo, new RecordItemIndex(19));
            repo.DlgBuchen.ClientArea_Maske_Abgang_buchen.Text_Sachbearbeiter.PressKeys(Sachbearbeiter);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Tab' Press.", new RecordItemIndex(20));
            Keyboard.Press(System.Windows.Forms.Keys.Tab, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Abgangserloes' with focus on 'DlgBuchen.ClientArea_Maske_Abgang_buchen.Abgangserloes'.", repo.DlgBuchen.ClientArea_Maske_Abgang_buchen.AbgangserloesInfo, new RecordItemIndex(21));
            repo.DlgBuchen.ClientArea_Maske_Abgang_buchen.Abgangserloes.PressKeys(Abgangserloes);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Tab' Press.", new RecordItemIndex(22));
            Keyboard.Press(System.Windows.Forms.Keys.Tab, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Abgabegrund' with focus on 'DlgBuchen.ClientArea_Maske_Abgang_buchen.Abgangsgrund'.", repo.DlgBuchen.ClientArea_Maske_Abgang_buchen.AbgangsgrundInfo, new RecordItemIndex(23));
            repo.DlgBuchen.ClientArea_Maske_Abgang_buchen.Abgangsgrund.PressKeys(Abgabegrund);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Tab' Press.", new RecordItemIndex(24));
            Keyboard.Press(System.Windows.Forms.Keys.Tab, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
