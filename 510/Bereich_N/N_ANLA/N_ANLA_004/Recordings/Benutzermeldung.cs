///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace N_ANLA_004.Recordings
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Benutzermeldung recording.
    /// </summary>
    [TestModule("24b958ec-ac6e-4ad1-a30b-bc1fc3a27f50", ModuleType.Recording, 1)]
    public partial class Benutzermeldung : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::N_ANLA_004.N_ANLA_004Repository repository.
        /// </summary>
        public static global::N_ANLA_004.N_ANLA_004Repository repo = global::N_ANLA_004.N_ANLA_004Repository.Instance;

        static Benutzermeldung instance = new Benutzermeldung();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Benutzermeldung()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Benutzermeldung Instance
        {
            get { return instance; }
        }

#region Variables

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Wait", "Waiting 3m to exist. Associated repository item: 'FrmAnfi.TitleBar100AVZFirmenstamm'", repo.FrmAnfi.TitleBar100AVZFirmenstammInfo, new ActionTimeout(180000), new RecordItemIndex(0));
            repo.FrmAnfi.TitleBar100AVZFirmenstammInfo.WaitForExists(180000);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='Es können keine Änderungen im AVZ-Firmenstamm gespeichert werden,  \r\nsolange sich folgende Benutzer noch im Programm 'AVZ-Anlagen' befinden:\r\n\r\n \r\nRS \trs2 \r\n\r\n\r\n\r\nSollen die Benutzer jetzt abgemeldet werden? \r\n\r\n\r\nBeachten Sie bitte, falls die Benutzer tatsächlich noch \r\nim AVZ tätig sind, dass Änderungen, welche hier durchgeführt werden, \r\nerst nach Neustart der Programme (AVZ-Anlagen, AVZ-Auswertungen) wirksam sind. \r\n(Dies gilt insbesonders für jegliche Art von Berechnungen)\r\n') on item 'DlgMessageBox.LabelMeldungstext'.", repo.DlgMessageBox.LabelMeldungstextInfo, new RecordItemIndex(1));
            Validate.AttributeEqual(repo.DlgMessageBox.LabelMeldungstextInfo, "Text", "Es können keine Änderungen im AVZ-Firmenstamm gespeichert werden,  \r\nsolange sich folgende Benutzer noch im Programm 'AVZ-Anlagen' befinden:\r\n\r\n \r\nRS \trs2 \r\n\r\n\r\n\r\nSollen die Benutzer jetzt abgemeldet werden? \r\n\r\n\r\nBeachten Sie bitte, falls die Benutzer tatsächlich noch \r\nim AVZ tätig sind, dass Änderungen, welche hier durchgeführt werden, \r\nerst nach Neustart der Programme (AVZ-Anlagen, AVZ-Auswertungen) wirksam sind. \r\n(Dies gilt insbesonders für jegliche Art von Berechnungen)\r\n");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'DlgMessageBox.Button0' at Center.", repo.DlgMessageBox.Button0Info, new RecordItemIndex(2));
            repo.DlgMessageBox.Button0.Click();
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 3s.", new RecordItemIndex(3));
            Delay.Duration(3000, false);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='Benutzer abgemeldet !') on item 'DlgMessageBox.LabelMeldungstext'.", repo.DlgMessageBox.LabelMeldungstextInfo, new RecordItemIndex(4));
            Validate.AttributeEqual(repo.DlgMessageBox.LabelMeldungstextInfo, "Text", "Benutzer abgemeldet !");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'DlgMessageBox.Button0' at Center.", repo.DlgMessageBox.Button0Info, new RecordItemIndex(5));
            repo.DlgMessageBox.Button0.Click();
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
