///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace N_ANLA_004.Recordings
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The GJ_aendern recording.
    /// </summary>
    [TestModule("1092bdb3-be27-4d8f-a67a-6ccab4e118ed", ModuleType.Recording, 1)]
    public partial class GJ_aendern : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::N_ANLA_004.N_ANLA_004Repository repository.
        /// </summary>
        public static global::N_ANLA_004.N_ANLA_004Repository repo = global::N_ANLA_004.N_ANLA_004Repository.Instance;

        static GJ_aendern instance = new GJ_aendern();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public GJ_aendern()
        {
            GJ = "2023";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static GJ_aendern Instance
        {
            get { return instance; }
        }

#region Variables

        string _GJ;

        /// <summary>
        /// Gets or sets the value of variable GJ.
        /// </summary>
        [TestVariable("4459e8aa-4be2-4f26-835a-f0dcb5ca5e19")]
        public string GJ
        {
            get { return _GJ; }
            set { _GJ = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Wait", "Waiting 2m to exist. Associated repository item: 'FrmAnfi.TitleBar100AVZFirmenstamm'", repo.FrmAnfi.TitleBar100AVZFirmenstammInfo, new ActionTimeout(120000), new RecordItemIndex(0));
            repo.FrmAnfi.TitleBar100AVZFirmenstammInfo.WaitForExists(120000);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (Text>'[100]  AVZ-Firmenstamm') on item 'FrmAnfi.TitleBar100AVZFirmenstamm'.", repo.FrmAnfi.TitleBar100AVZFirmenstammInfo, new RecordItemIndex(1));
            Validate.AttributeContains(repo.FrmAnfi.TitleBar100AVZFirmenstammInfo, "Text", "[100]  AVZ-Firmenstamm");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmAnfi.ClientArea.PbGjhrAktuell' at Center.", repo.FrmAnfi.ClientArea.PbGjhrAktuellInfo, new RecordItemIndex(2));
            repo.FrmAnfi.ClientArea.PbGjhrAktuell.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$GJ' with focus on 'FrmAnfi.ClientArea.DfGjhrBez'.", repo.FrmAnfi.ClientArea.DfGjhrBezInfo, new RecordItemIndex(3));
            repo.FrmAnfi.ClientArea.DfGjhrBez.PressKeys(GJ);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Tab' Press with focus on 'FrmAnfi.ClientArea.DfGjhrBez'.", repo.FrmAnfi.ClientArea.DfGjhrBezInfo, new RecordItemIndex(4));
            Keyboard.PrepareFocus(repo.FrmAnfi.ClientArea.DfGjhrBez);
            Keyboard.Press(System.Windows.Forms.Keys.Tab, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$GJ) on item 'FrmAnfi.ClientArea.DfGjhrBez'.", repo.FrmAnfi.ClientArea.DfGjhrBezInfo, new RecordItemIndex(5));
            Validate.AttributeEqual(repo.FrmAnfi.ClientArea.DfGjhrBezInfo, "Text", GJ);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmAnfi.PbDataAccessSave' at Center.", repo.FrmAnfi.PbDataAccessSaveInfo, new RecordItemIndex(6));
            repo.FrmAnfi.PbDataAccessSave.Click();
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
