///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace N_ANLA_001.Recordings
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Kontrolle_Aenderung_Anlagekonto recording.
    /// </summary>
    [TestModule("5bddf812-f887-490c-a6a7-09292f09c81f", ModuleType.Recording, 1)]
    public partial class Kontrolle_Aenderung_Anlagekonto : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::N_ANLA_001.N_ANLA_001Repository repository.
        /// </summary>
        public static global::N_ANLA_001.N_ANLA_001Repository repo = global::N_ANLA_001.N_ANLA_001Repository.Instance;

        static Kontrolle_Aenderung_Anlagekonto instance = new Kontrolle_Aenderung_Anlagekonto();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Kontrolle_Aenderung_Anlagekonto()
        {
            Anlage_B = "N_ANLA_001_02";
            Nutzungsdauer_Anlage_B = "60,00";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Kontrolle_Aenderung_Anlagekonto Instance
        {
            get { return instance; }
        }

#region Variables

        string _Nutzungsdauer_Anlage_B;

        /// <summary>
        /// Gets or sets the value of variable Nutzungsdauer_Anlage_B.
        /// </summary>
        [TestVariable("1481977f-000f-4f4a-af84-f0c7089cdbc4")]
        public string Nutzungsdauer_Anlage_B
        {
            get { return _Nutzungsdauer_Anlage_B; }
            set { _Nutzungsdauer_Anlage_B = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable Anlage_B.
        /// </summary>
        [TestVariable("2efc3a1e-749a-4b17-a298-368ecaf5bb3b")]
        public string Anlage_B
        {
            get { return repo.Anlage_B; }
            set { repo.Anlage_B = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Alt+F4' Press with focus on 'DlgBuchungen.Schliessen'.", repo.DlgBuchungen.SchliessenInfo, new RecordItemIndex(0));
            Keyboard.PrepareFocus(repo.DlgBuchungen.Schliessen);
            Keyboard.Press(System.Windows.Forms.Keys.F4 | System.Windows.Forms.Keys.Alt, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 2m to exist. Associated repository item: 'FrmAnla.TitleBar100AVZAnlagen'", repo.FrmAnla.TitleBar100AVZAnlagenInfo, new ActionTimeout(120000), new RecordItemIndex(1));
            repo.FrmAnla.TitleBar100AVZAnlagenInfo.WaitForExists(120000);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmAnla.PbCommonNew' at Center.", repo.FrmAnla.PbCommonNewInfo, new RecordItemIndex(2));
            repo.FrmAnla.PbCommonNew.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Anlage_B' with focus on 'FrmAnla.DfAnlaNr'.", repo.FrmAnla.DfAnlaNrInfo, new RecordItemIndex(3));
            repo.FrmAnla.DfAnlaNr.PressKeys(Anlage_B);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Tab' Press with focus on 'FrmAnla.DfAnlaNr'.", repo.FrmAnla.DfAnlaNrInfo, new RecordItemIndex(4));
            Keyboard.PrepareFocus(repo.FrmAnla.DfAnlaNr);
            Keyboard.Press(System.Windows.Forms.Keys.Tab, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmAnla.Details' at Center.", repo.FrmAnla.DetailsInfo, new RecordItemIndex(5));
            repo.FrmAnla.Details.Click();
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='0660') on item 'FrmAnla.DfKtoNr'.", repo.FrmAnla.DfKtoNrInfo, new RecordItemIndex(6));
            Validate.AttributeEqual(repo.FrmAnla.DfKtoNrInfo, "Text", "0660");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmAnla.Steuer' at Center.", repo.FrmAnla.SteuerInfo, new RecordItemIndex(7));
            repo.FrmAnla.Steuer.Click();
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Nutzungsdauer_Anlage_B) on item 'FrmAnla.DfAnwe1Ndaktuell'.", repo.FrmAnla.DfAnwe1NdaktuellInfo, new RecordItemIndex(8));
            Validate.AttributeEqual(repo.FrmAnla.DfAnwe1NdaktuellInfo, "Text", Nutzungsdauer_Anlage_B);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Checked='False') on item 'FrmAnla.CbAnlaKzgwg'.", repo.FrmAnla.CbAnlaKzgwgInfo, new RecordItemIndex(9));
            Validate.AttributeEqual(repo.FrmAnla.CbAnlaKzgwgInfo, "Checked", "False");
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
