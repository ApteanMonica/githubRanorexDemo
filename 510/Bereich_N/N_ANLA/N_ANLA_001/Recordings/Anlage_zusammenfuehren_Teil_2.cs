///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace N_ANLA_001.Recordings
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Anlage_zusammenfuehren_Teil_2 recording.
    /// </summary>
    [TestModule("b9fdd20a-1b35-4d90-aff6-672d90fcea2c", ModuleType.Recording, 1)]
    public partial class Anlage_zusammenfuehren_Teil_2 : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::N_ANLA_001.N_ANLA_001Repository repository.
        /// </summary>
        public static global::N_ANLA_001.N_ANLA_001Repository repo = global::N_ANLA_001.N_ANLA_001Repository.Instance;

        static Anlage_zusammenfuehren_Teil_2 instance = new Anlage_zusammenfuehren_Teil_2();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Anlage_zusammenfuehren_Teil_2()
        {
            Anlage_A = "N_ANLA_001_01";
            Anlage_B = "N_ANLA_001_02";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Anlage_zusammenfuehren_Teil_2 Instance
        {
            get { return instance; }
        }

#region Variables

        string _Anlage_A;

        /// <summary>
        /// Gets or sets the value of variable Anlage_A.
        /// </summary>
        [TestVariable("8b4ccf89-9e98-495b-8186-f535d73b6e56")]
        public string Anlage_A
        {
            get { return _Anlage_A; }
            set { _Anlage_A = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable Anlage_B.
        /// </summary>
        [TestVariable("a21f5dc7-0298-4804-99f2-d1b657ac6059")]
        public string Anlage_B
        {
            get { return repo.Anlage_B; }
            set { repo.Anlage_B = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Wait", "Waiting 2m to exist. Associated repository item: 'FrmZuauf.TitleBar100AVZAnlagenZusammenfuehr'", repo.FrmZuauf.TitleBar100AVZAnlagenZusammenfuehrInfo, new ActionTimeout(120000), new RecordItemIndex(0));
            repo.FrmZuauf.TitleBar100AVZAnlagenZusammenfuehrInfo.WaitForExists(120000);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (Text>'AVZ-Anlagen zusammenführen') on item 'FrmZuauf.TitleBar100AVZAnlagenZusammenfuehr'.", repo.FrmZuauf.TitleBar100AVZAnlagenZusammenfuehrInfo, new RecordItemIndex(1));
            Validate.AttributeContains(repo.FrmZuauf.TitleBar100AVZAnlagenZusammenfuehrInfo, "Text", "AVZ-Anlagen zusammenführen");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left DoubleClick item 'FrmZuauf.DfGjhrBez' at Center.", repo.FrmZuauf.DfGjhrBezInfo, new RecordItemIndex(2));
            repo.FrmZuauf.DfGjhrBez.DoubleClick();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '2022{Tab}' with focus on 'FrmZuauf.DfGjhrBez'.", repo.FrmZuauf.DfGjhrBezInfo, new RecordItemIndex(3));
            repo.FrmZuauf.DfGjhrBez.PressKeys("2022{Tab}");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '31.12.2022{Tab}' with focus on 'FrmZuauf.DfAnbuDtbuchung'.", repo.FrmZuauf.DfAnbuDtbuchungInfo, new RecordItemIndex(4));
            repo.FrmZuauf.DfAnbuDtbuchung.PressKeys("31.12.2022{Tab}");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='31122022') on item 'FrmZuauf.DfAnbuDtbuchung'.", repo.FrmZuauf.DfAnbuDtbuchungInfo, new RecordItemIndex(5));
            Validate.AttributeEqual(repo.FrmZuauf.DfAnbuDtbuchungInfo, "Text", "31122022");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Anlage_A' with focus on 'FrmZuauf.ColAnlaNrRow1'.", repo.FrmZuauf.ColAnlaNrRow1Info, new RecordItemIndex(6));
            repo.FrmZuauf.ColAnlaNrRow1.PressKeys(Anlage_A);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Tab' Press.", new RecordItemIndex(7));
            Keyboard.Press(System.Windows.Forms.Keys.Tab, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'TabPageTp1' at Center.", repo.TabPageTp1Info, new RecordItemIndex(8));
            repo.TabPageTp1.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Insert' Press.", new RecordItemIndex(9));
            Keyboard.Press(System.Windows.Forms.Keys.Insert, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 1s.", new RecordItemIndex(10));
            Delay.Duration(1000, false);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Anlage_B' with focus on 'FrmZuauf.ColAnlaNrRow2'.", repo.FrmZuauf.ColAnlaNrRow2Info, new RecordItemIndex(11));
            repo.FrmZuauf.ColAnlaNrRow2.PressKeys(Anlage_B);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 1s.", new RecordItemIndex(12));
            Delay.Duration(1000, false);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Tab' Press.", new RecordItemIndex(13));
            Keyboard.Press(System.Windows.Forms.Keys.Tab, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 1s.", new RecordItemIndex(14));
            Delay.Duration(1000, false);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
