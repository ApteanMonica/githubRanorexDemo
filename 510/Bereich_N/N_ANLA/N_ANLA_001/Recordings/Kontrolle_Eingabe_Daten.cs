///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace N_ANLA_001.Recordings
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Kontrolle_Eingabe_Daten recording.
    /// </summary>
    [TestModule("41dc000a-b5b8-4cea-93f6-58dca09cf05a", ModuleType.Recording, 1)]
    public partial class Kontrolle_Eingabe_Daten : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::N_ANLA_001.N_ANLA_001Repository repository.
        /// </summary>
        public static global::N_ANLA_001.N_ANLA_001Repository repo = global::N_ANLA_001.N_ANLA_001Repository.Instance;

        static Kontrolle_Eingabe_Daten instance = new Kontrolle_Eingabe_Daten();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Kontrolle_Eingabe_Daten()
        {
            Anlage_A = "N_ANLA_001_01";
            Anlage_B = "N_ANLA_001_02";
            Anlage_C = "N_ANLA_001_03";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Kontrolle_Eingabe_Daten Instance
        {
            get { return instance; }
        }

#region Variables

        string _Anlage_A;

        /// <summary>
        /// Gets or sets the value of variable Anlage_A.
        /// </summary>
        [TestVariable("40f6d32a-abf5-4fbf-aec7-a5f82ed2b5e2")]
        public string Anlage_A
        {
            get { return _Anlage_A; }
            set { _Anlage_A = value; }
        }

        string _Anlage_C;

        /// <summary>
        /// Gets or sets the value of variable Anlage_C.
        /// </summary>
        [TestVariable("ccca0f5e-7782-4d8f-bc1d-f601d2cadaf4")]
        public string Anlage_C
        {
            get { return _Anlage_C; }
            set { _Anlage_C = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable Anlage_B.
        /// </summary>
        [TestVariable("c6f290ae-237a-4ff4-8eb0-28e87e4c138c")]
        public string Anlage_B
        {
            get { return repo.Anlage_B; }
            set { repo.Anlage_B = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='31122022') on item 'FrmZuauf.DfAnbuDtbuchung'.", repo.FrmZuauf.DfAnbuDtbuchungInfo, new RecordItemIndex(0));
            Validate.AttributeEqual(repo.FrmZuauf.DfAnbuDtbuchungInfo, "Text", "31122022");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Anlage_A) on item 'FrmZuauf.ColAnlaNrRow1'.", repo.FrmZuauf.ColAnlaNrRow1Info, new RecordItemIndex(1));
            Validate.AttributeEqual(repo.FrmZuauf.ColAnlaNrRow1Info, "Text", Anlage_A);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Anlage_B) on item 'FrmZuauf.ColAnlaNrRow2'.", repo.FrmZuauf.ColAnlaNrRow2Info, new RecordItemIndex(2));
            Validate.AttributeEqual(repo.FrmZuauf.ColAnlaNrRow2Info, "Text", Anlage_B);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Anlage_C) on item 'FrmZuauf.ColAnlaNrRow3'.", repo.FrmZuauf.ColAnlaNrRow3Info, new RecordItemIndex(3));
            Validate.AttributeEqual(repo.FrmZuauf.ColAnlaNrRow3Info, "Text", Anlage_C);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='3.900,00') on item 'FrmZuauf.ColAnweAhkbetragRow1'.", repo.FrmZuauf.ColAnweAhkbetragRow1Info, new RecordItemIndex(4));
            Validate.AttributeEqual(repo.FrmZuauf.ColAnweAhkbetragRow1Info, "Text", "3.900,00");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmZuauf.PbDataAccessSave' at Center.", repo.FrmZuauf.PbDataAccessSaveInfo, new RecordItemIndex(5));
            repo.FrmZuauf.PbDataAccessSave.Click();
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
