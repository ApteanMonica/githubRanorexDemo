///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace N_ANLA_001.Recordings_n_listen
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Ueberpruefung_Anlagenspiegel recording.
    /// </summary>
    [TestModule("85d7fec8-a9e5-4d23-9d79-04081fad0151", ModuleType.Recording, 1)]
    public partial class Ueberpruefung_Anlagenspiegel : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::N_ANLA_001.N_ANLA_001Repository repository.
        /// </summary>
        public static global::N_ANLA_001.N_ANLA_001Repository repo = global::N_ANLA_001.N_ANLA_001Repository.Instance;

        static Ueberpruefung_Anlagenspiegel instance = new Ueberpruefung_Anlagenspiegel();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Ueberpruefung_Anlagenspiegel()
        {
            GF_Jahr_Anlagenspiegel = "2022";
            Konto_Anlagenspiegel = "0660";
            AHK_Betrag_Anlagenspiegel = "3900";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Ueberpruefung_Anlagenspiegel Instance
        {
            get { return instance; }
        }

#region Variables

        string _GF_Jahr_Anlagenspiegel;

        /// <summary>
        /// Gets or sets the value of variable GF_Jahr_Anlagenspiegel.
        /// </summary>
        [TestVariable("ecc020df-786b-47fc-9436-66b413f1bd6d")]
        public string GF_Jahr_Anlagenspiegel
        {
            get { return _GF_Jahr_Anlagenspiegel; }
            set { _GF_Jahr_Anlagenspiegel = value; }
        }

        string _Konto_Anlagenspiegel;

        /// <summary>
        /// Gets or sets the value of variable Konto_Anlagenspiegel.
        /// </summary>
        [TestVariable("e9d1e213-f8c8-40c9-b944-d47aad6853fa")]
        public string Konto_Anlagenspiegel
        {
            get { return _Konto_Anlagenspiegel; }
            set { _Konto_Anlagenspiegel = value; }
        }

        string _AHK_Betrag_Anlagenspiegel;

        /// <summary>
        /// Gets or sets the value of variable AHK_Betrag_Anlagenspiegel.
        /// </summary>
        [TestVariable("1da1abe5-e741-43b3-8f68-14ef2536bdab")]
        public string AHK_Betrag_Anlagenspiegel
        {
            get { return _AHK_Betrag_Anlagenspiegel; }
            set { _AHK_Betrag_Anlagenspiegel = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='2022') on item 'FrmSpiegel.DfGjhrBez'.", repo.FrmSpiegel.DfGjhrBezInfo, new RecordItemIndex(0));
            Validate.AttributeEqual(repo.FrmSpiegel.DfGjhrBezInfo, "Text", "2022");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'N_ANLA_001_01{Tab}' with focus on 'FrmSpiegel.DfAnlaNrVon'.", repo.FrmSpiegel.DfAnlaNrVonInfo, new RecordItemIndex(1));
            repo.FrmSpiegel.DfAnlaNrVon.PressKeys("N_ANLA_001_01{Tab}");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'N_ANLA_001_03{Tab}' with focus on 'FrmSpiegel.DfAnlaNrBis'.", repo.FrmSpiegel.DfAnlaNrBisInfo, new RecordItemIndex(2));
            repo.FrmSpiegel.DfAnlaNrBis.PressKeys("N_ANLA_001_03{Tab}");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmSpiegel.PbDataAccessDruck' at Center.", repo.FrmSpiegel.PbDataAccessDruckInfo, new RecordItemIndex(3));
            repo.FrmSpiegel.PbDataAccessDruck.Click();
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'DlgDrucken.PbExport' at Center.", repo.DlgDrucken.PbExportInfo, new RecordItemIndex(4));
            repo.DlgDrucken.PbExport.Click();
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'PbExportItems.Tabelle' at Center.", repo.PbExportItems.TabelleInfo, new RecordItemIndex(5));
            repo.PbExportItems.Tabelle.Click();
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 2m to exist. Associated repository item: 'TblDrucken.TitleBar100AVZAuswertungenKonten'", repo.TblDrucken.TitleBar100AVZAuswertungenKontenInfo, new ActionTimeout(120000), new RecordItemIndex(6));
            repo.TblDrucken.TitleBar100AVZAuswertungenKontenInfo.WaitForExists(120000);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (Text>'AVZ-Auswertungen Konten') on item 'TblDrucken.TitleBar100AVZAuswertungenKonten'.", repo.TblDrucken.TitleBar100AVZAuswertungenKontenInfo, new RecordItemIndex(7));
            Validate.AttributeContains(repo.TblDrucken.TitleBar100AVZAuswertungenKontenInfo, "Text", "AVZ-Auswertungen Konten");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'TblDrucken.Maximieren' at Center.", repo.TblDrucken.MaximierenInfo, new RecordItemIndex(8));
            repo.TblDrucken.Maximieren.Click();
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$GF_Jahr_Anlagenspiegel) on item 'TblDrucken.CColumnRow1'.", repo.TblDrucken.CColumnRow1Info, new RecordItemIndex(9));
            Validate.AttributeEqual(repo.TblDrucken.CColumnRow1Info, "Text", GF_Jahr_Anlagenspiegel);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Konto_Anlagenspiegel) on item 'TblDrucken.CColumnRow11'.", repo.TblDrucken.CColumnRow11Info, new RecordItemIndex(10));
            Validate.AttributeEqual(repo.TblDrucken.CColumnRow11Info, "Text", Konto_Anlagenspiegel);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$AHK_Betrag_Anlagenspiegel) on item 'TblDrucken.CColumnRow12'.", repo.TblDrucken.CColumnRow12Info, new RecordItemIndex(11));
            Validate.AttributeEqual(repo.TblDrucken.CColumnRow12Info, "Text", AHK_Betrag_Anlagenspiegel);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating NotExists on item 'TblDrucken.Row2Column0'.", repo.TblDrucken.Row2Column0Info, new RecordItemIndex(12));
            Validate.NotExists(repo.TblDrucken.Row2Column0Info);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Alt+F4' Press.", new RecordItemIndex(13));
            Keyboard.Press(System.Windows.Forms.Keys.F4 | System.Windows.Forms.Keys.Alt, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
