///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace N_ANLA_002.Recordings
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Umbuchung recording.
    /// </summary>
    [TestModule("b7d16a4c-389a-4ce6-91d8-e954ce934b2e", ModuleType.Recording, 1)]
    public partial class Umbuchung : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::N_ANLA_002.N_ANLA_002Repository repository.
        /// </summary>
        public static global::N_ANLA_002.N_ANLA_002Repository repo = global::N_ANLA_002.N_ANLA_002Repository.Instance;

        static Umbuchung instance = new Umbuchung();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Umbuchung()
        {
            GJ = "2022";
            Anlage_G = "N_ANLA_002_07";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Umbuchung Instance
        {
            get { return instance; }
        }

#region Variables

        string _GJ;

        /// <summary>
        /// Gets or sets the value of variable GJ.
        /// </summary>
        [TestVariable("25ae6d05-806a-4ebb-8edc-162378ea224b")]
        public string GJ
        {
            get { return _GJ; }
            set { _GJ = value; }
        }

        string _Anlage_G;

        /// <summary>
        /// Gets or sets the value of variable Anlage_G.
        /// </summary>
        [TestVariable("4e360f5c-f006-488f-80d7-931d1dbc2b9a")]
        public string Anlage_G
        {
            get { return _Anlage_G; }
            set { _Anlage_G = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Wait", "Waiting 2m to exist. Associated repository item: 'DlgBuchen.TitleBar100AVZUmbuchungKontonum'", repo.DlgBuchen.TitleBar100AVZUmbuchungKontonumInfo, new ActionTimeout(120000), new RecordItemIndex(0));
            repo.DlgBuchen.TitleBar100AVZUmbuchungKontonumInfo.WaitForExists(120000);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (Text>'AVZ - Umbuchung (Kontonummern ändern)') on item 'DlgBuchen.TitleBar100AVZUmbuchungKontonum'.", repo.DlgBuchen.TitleBar100AVZUmbuchungKontonumInfo, new RecordItemIndex(1));
            Validate.AttributeContains(repo.DlgBuchen.TitleBar100AVZUmbuchungKontonumInfo, "Text", "AVZ - Umbuchung (Kontonummern ändern)");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$GJ) on item 'DlgBuchen.DfGjhrBez'.", repo.DlgBuchen.DfGjhrBezInfo, new RecordItemIndex(2));
            Validate.AttributeEqual(repo.DlgBuchen.DfGjhrBezInfo, "Text", GJ);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Anlage_G) on item 'DlgBuchen.DfAnlaNr'.", repo.DlgBuchen.DfAnlaNrInfo, new RecordItemIndex(3));
            Validate.AttributeEqual(repo.DlgBuchen.DfAnlaNrInfo, "Text", Anlage_G);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='Anlage G') on item 'DlgBuchen.DfAnlaBez'.", repo.DlgBuchen.DfAnlaBezInfo, new RecordItemIndex(4));
            Validate.AttributeEqual(repo.DlgBuchen.DfAnlaBezInfo, "Text", "Anlage G");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='0660') on item 'DlgBuchen.DfAnlaKtoNrAlt'.", repo.DlgBuchen.DfAnlaKtoNrAltInfo, new RecordItemIndex(5));
            Validate.AttributeEqual(repo.DlgBuchen.DfAnlaKtoNrAltInfo, "Text", "0660");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left DoubleClick item 'DlgBuchen.TextNeu' at Center.", repo.DlgBuchen.TextNeuInfo, new RecordItemIndex(6));
            repo.DlgBuchen.TextNeu.DoubleClick();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '0620{Tab}' with focus on 'DlgBuchen.TextNeu'.", repo.DlgBuchen.TextNeuInfo, new RecordItemIndex(7));
            repo.DlgBuchen.TextNeu.PressKeys("0620{Tab}");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='0620') on item 'DlgBuchen.TextNeu'.", repo.DlgBuchen.TextNeuInfo, new RecordItemIndex(8));
            Validate.AttributeEqual(repo.DlgBuchen.TextNeuInfo, "Text", "0620");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='0660') on item 'DlgBuchen.DfAnlaKtoNrAfaAlt'.", repo.DlgBuchen.DfAnlaKtoNrAfaAltInfo, new RecordItemIndex(9));
            Validate.AttributeEqual(repo.DlgBuchen.DfAnlaKtoNrAfaAltInfo, "Text", "0660");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='0620') on item 'DlgBuchen.DfAnlaKtoNrAfaNeu'.", repo.DlgBuchen.DfAnlaKtoNrAfaNeuInfo, new RecordItemIndex(10));
            Validate.AttributeEqual(repo.DlgBuchen.DfAnlaKtoNrAfaNeuInfo, "Text", "0620");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '31.12.2022{Tab}' with focus on 'DlgBuchen.DfAnbuDtbuchung'.", repo.DlgBuchen.DfAnbuDtbuchungInfo, new RecordItemIndex(11));
            repo.DlgBuchen.DfAnbuDtbuchung.PressKeys("31.12.2022{Tab}");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='31122022') on item 'DlgBuchen.DfAnbuDtbuchung'.", repo.DlgBuchen.DfAnbuDtbuchungInfo, new RecordItemIndex(12));
            Validate.AttributeEqual(repo.DlgBuchen.DfAnbuDtbuchungInfo, "Text", "31122022");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'DlgBuchen.PbSpeichern' at Center.", repo.DlgBuchen.PbSpeichernInfo, new RecordItemIndex(13));
            repo.DlgBuchen.PbSpeichern.Click();
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
