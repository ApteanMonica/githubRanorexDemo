///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace N_STAMM_Schnelltest.Recordings_N_STAMM_ANFI
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Start_N_STAMM_ANFI recording.
    /// </summary>
    [TestModule("104b2f0d-5ed5-4611-98bb-da0f8b6b08d0", ModuleType.Recording, 1)]
    public partial class Start_N_STAMM_ANFI : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::N_STAMM_Schnelltest.N_STAMM_SchnelltestRepository repository.
        /// </summary>
        public static global::N_STAMM_Schnelltest.N_STAMM_SchnelltestRepository repo = global::N_STAMM_Schnelltest.N_STAMM_SchnelltestRepository.Instance;

        static Start_N_STAMM_ANFI instance = new Start_N_STAMM_ANFI();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Start_N_STAMM_ANFI()
        {
            Startfile = "C:\\Testdaten\\Allgemein\\Start.bat";
            Programm_N_STAMM_ANFI = "N_STAMM AUFRUFART ANFI";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Start_N_STAMM_ANFI Instance
        {
            get { return instance; }
        }

#region Variables

        string _Startfile;

        /// <summary>
        /// Gets or sets the value of variable Startfile.
        /// </summary>
        [TestVariable("64038e3e-680a-4c6a-9988-6e964f60bf31")]
        public string Startfile
        {
            get { return _Startfile; }
            set { _Startfile = value; }
        }

        string _Programm_N_STAMM_ANFI;

        /// <summary>
        /// Gets or sets the value of variable Programm_N_STAMM_ANFI.
        /// </summary>
        [TestVariable("b7a2c021-9b89-4363-ac74-678b86d8b9f9")]
        public string Programm_N_STAMM_ANFI
        {
            get { return _Programm_N_STAMM_ANFI; }
            set { _Programm_N_STAMM_ANFI = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Application", "Run application with file name from variable $Startfile with arguments from variable $Programm_N_STAMM_ANFI in normal mode.", new RecordItemIndex(0));
            Host.Local.RunApplication(Startfile, Programm_N_STAMM_ANFI, "", false);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 2m to exist. Associated repository item: 'FrmAnfi.TitleBar100AVZFirmenstamm'", repo.FrmAnfi.TitleBar100AVZFirmenstammInfo, new ActionTimeout(120000), new RecordItemIndex(1));
            repo.FrmAnfi.TitleBar100AVZFirmenstammInfo.WaitForExists(120000);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (Text>'AVZ-Firmenstamm') on item 'FrmAnfi.TitleBar100AVZFirmenstamm'.", repo.FrmAnfi.TitleBar100AVZFirmenstammInfo, new RecordItemIndex(2));
            Validate.AttributeContains(repo.FrmAnfi.TitleBar100AVZFirmenstammInfo, "Text", "AVZ-Firmenstamm");
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
