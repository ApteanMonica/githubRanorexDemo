///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace N_LISTEN_BULI_001.Recordings
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The AfA_berechnen recording.
    /// </summary>
    [TestModule("de8bcdd4-a249-4004-92ce-4f0d7063ab60", ModuleType.Recording, 1)]
    public partial class AfA_berechnen : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::N_LISTEN_BULI_001.N_LISTEN_BULI_001Repository repository.
        /// </summary>
        public static global::N_LISTEN_BULI_001.N_LISTEN_BULI_001Repository repo = global::N_LISTEN_BULI_001.N_LISTEN_BULI_001Repository.Instance;

        static AfA_berechnen instance = new AfA_berechnen();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public AfA_berechnen()
        {
            Beginn_GJ = "01.01.2022";
            Ende_GJ = "31.12.2022";
            Anlagennr_001 = "N_LISTEN_001_01";
            Anlagennr_002 = "N_LISTEN_001_02";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static AfA_berechnen Instance
        {
            get { return instance; }
        }

#region Variables

        string _Beginn_GJ;

        /// <summary>
        /// Gets or sets the value of variable Beginn_GJ.
        /// </summary>
        [TestVariable("af31b04c-1e77-4902-ad02-2e6741885bbc")]
        public string Beginn_GJ
        {
            get { return _Beginn_GJ; }
            set { _Beginn_GJ = value; }
        }

        string _Ende_GJ;

        /// <summary>
        /// Gets or sets the value of variable Ende_GJ.
        /// </summary>
        [TestVariable("92888088-ecdf-4f35-92a1-4a5f244fa1df")]
        public string Ende_GJ
        {
            get { return _Ende_GJ; }
            set { _Ende_GJ = value; }
        }

        string _Anlagennr_001;

        /// <summary>
        /// Gets or sets the value of variable Anlagennr_001.
        /// </summary>
        [TestVariable("71d79893-24e3-43a5-a1ca-900d5ba9d2bc")]
        public string Anlagennr_001
        {
            get { return _Anlagennr_001; }
            set { _Anlagennr_001 = value; }
        }

        string _Anlagennr_002;

        /// <summary>
        /// Gets or sets the value of variable Anlagennr_002.
        /// </summary>
        [TestVariable("f0b117a0-e4c1-48f3-801d-8c1fbf76594a")]
        public string Anlagennr_002
        {
            get { return _Anlagennr_002; }
            set { _Anlagennr_002 = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Enter' Press.", new RecordItemIndex(0));
            Keyboard.Press(System.Windows.Forms.Keys.Return, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='2022') on item 'FrmBuchungsliste.Geschaeftsjahr'.", repo.FrmBuchungsliste.GeschaeftsjahrInfo, new RecordItemIndex(1));
            Validate.AttributeEqual(repo.FrmBuchungsliste.GeschaeftsjahrInfo, "Text", "2022");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmBuchungsliste.CbBereich' at Center.", repo.FrmBuchungsliste.CbBereichInfo, new RecordItemIndex(2));
            repo.FrmBuchungsliste.CbBereich.Click();
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Checked='True') on item 'FrmBuchungsliste.CbBereich'.", repo.FrmBuchungsliste.CbBereichInfo, new RecordItemIndex(3));
            Validate.AttributeEqual(repo.FrmBuchungsliste.CbBereichInfo, "Checked", "True");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmBuchungsliste.RbMonat' at Center.", repo.FrmBuchungsliste.RbMonatInfo, new RecordItemIndex(4));
            repo.FrmBuchungsliste.RbMonat.Click();
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Checked='True') on item 'FrmBuchungsliste.RbMonat'.", repo.FrmBuchungsliste.RbMonatInfo, new RecordItemIndex(5));
            Validate.AttributeEqual(repo.FrmBuchungsliste.RbMonatInfo, "Checked", "True");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='1') on item 'FrmBuchungsliste.CmbVariante'.", repo.FrmBuchungsliste.CmbVarianteInfo, new RecordItemIndex(6));
            Validate.AttributeEqual(repo.FrmBuchungsliste.CmbVarianteInfo, "Text", "1");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Beginn_GJ' with focus on 'FrmBuchungsliste.TextVon'.", repo.FrmBuchungsliste.TextVonInfo, new RecordItemIndex(7));
            repo.FrmBuchungsliste.TextVon.PressKeys(Beginn_GJ);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Beginn_GJ) on item 'FrmBuchungsliste.TextVon'.", repo.FrmBuchungsliste.TextVonInfo, new RecordItemIndex(8));
            Validate.AttributeEqual(repo.FrmBuchungsliste.TextVonInfo, "Text", Beginn_GJ);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Tab' Press.", new RecordItemIndex(9));
            Keyboard.Press(System.Windows.Forms.Keys.Tab, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Ende_GJ' with focus on 'FrmBuchungsliste.TextBis'.", repo.FrmBuchungsliste.TextBisInfo, new RecordItemIndex(10));
            repo.FrmBuchungsliste.TextBis.PressKeys(Ende_GJ);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Ende_GJ) on item 'FrmBuchungsliste.TextBis'.", repo.FrmBuchungsliste.TextBisInfo, new RecordItemIndex(11));
            Validate.AttributeEqual(repo.FrmBuchungsliste.TextBisInfo, "Text", Ende_GJ);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Anlagennr_001' with focus on 'FrmBuchungsliste.AnlageNrVon'.", repo.FrmBuchungsliste.AnlageNrVonInfo, new RecordItemIndex(12));
            repo.FrmBuchungsliste.AnlageNrVon.PressKeys(Anlagennr_001);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Anlagennr_001) on item 'FrmBuchungsliste.AnlageNrVon'.", repo.FrmBuchungsliste.AnlageNrVonInfo, new RecordItemIndex(13));
            Validate.AttributeEqual(repo.FrmBuchungsliste.AnlageNrVonInfo, "Text", Anlagennr_001);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Anlagennr_002' with focus on 'FrmBuchungsliste.DfAnlaNrBis'.", repo.FrmBuchungsliste.DfAnlaNrBisInfo, new RecordItemIndex(14));
            repo.FrmBuchungsliste.DfAnlaNrBis.PressKeys(Anlagennr_002);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Anlagennr_002) on item 'FrmBuchungsliste.DfAnlaNrBis'.", repo.FrmBuchungsliste.DfAnlaNrBisInfo, new RecordItemIndex(15));
            Validate.AttributeEqual(repo.FrmBuchungsliste.DfAnlaNrBisInfo, "Text", Anlagennr_002);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmBuchungsliste.PbOptionenTabelle' at Center.", repo.FrmBuchungsliste.PbOptionenTabelleInfo, new RecordItemIndex(16));
            repo.FrmBuchungsliste.PbOptionenTabelle.Click();
            
            // Wait for erhöht auf 3 Minuten
            //Report.Log(ReportLevel.Info, "Wait", "Wait for erhöht auf 3 Minuten\r\nWaiting 3m to exist. Associated repository item: 'FrmBuchungsliste.FlexGrid.ColTypRow1'", repo.FrmBuchungsliste.FlexGrid.ColTypRow1Info, new ActionTimeout(180000), new RecordItemIndex(17));
            //repo.FrmBuchungsliste.FlexGrid.ColTypRow1Info.WaitForExists(180000);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
