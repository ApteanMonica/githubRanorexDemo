///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace E_BAK_001.Recordings
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The BAK_pruefen_und_weiterleiten recording.
    /// </summary>
    [TestModule("69383c5a-ce46-400f-9321-95429e293d6d", ModuleType.Recording, 1)]
    public partial class BAK_pruefen_und_weiterleiten : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::E_BAK_001.E_BAK_001Repository repository.
        /// </summary>
        public static global::E_BAK_001.E_BAK_001Repository repo = global::E_BAK_001.E_BAK_001Repository.Instance;

        static BAK_pruefen_und_weiterleiten instance = new BAK_pruefen_und_weiterleiten();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public BAK_pruefen_und_weiterleiten()
        {
            Status = "W";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static BAK_pruefen_und_weiterleiten Instance
        {
            get { return instance; }
        }

#region Variables

        string _Status;

        /// <summary>
        /// Gets or sets the value of variable Status.
        /// </summary>
        [TestVariable("836f0955-74c7-4986-b9cb-4a7d52207026")]
        public string Status
        {
            get { return _Status; }
            set { _Status = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left DoubleClick item 'MdiBak.Row1Column0' at Center.", repo.MdiBak.Row1Column0Info, new RecordItemIndex(0));
            repo.MdiBak.Row1Column0.DoubleClick();
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='1') on item 'MdiBak.TpPos.DfBapNr'.", repo.MdiBak.TpPos.DfBapNrInfo, new RecordItemIndex(1));
            Validate.AttributeEqual(repo.MdiBak.TpPos.DfBapNrInfo, "Text", "1");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='0') on item 'MdiBak.TpPos.DfBapKzart'.", repo.MdiBak.TpPos.DfBapKzartInfo, new RecordItemIndex(2));
            Validate.AttributeEqual(repo.MdiBak.TpPos.DfBapKzartInfo, "Text", "0");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'MdiBak.TpPos.LabelLieferantenvorschlag'.", repo.MdiBak.TpPos.LabelLieferantenvorschlagInfo, new RecordItemIndex(3));
            Validate.Exists(repo.MdiBak.TpPos.LabelLieferantenvorschlagInfo);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left DoubleClick item 'MdiBak.Row2Column0' at Center.", repo.MdiBak.Row2Column0Info, new RecordItemIndex(4));
            repo.MdiBak.Row2Column0.DoubleClick();
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating NotExists on item 'MdiBak.TpPos.LabelLieferantenvorschlag'.", repo.MdiBak.TpPos.LabelLieferantenvorschlagInfo, new RecordItemIndex(5));
            //Validate.NotExists(repo.MdiBak.TpPos.LabelLieferantenvorschlagInfo);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'MdiBak.TpPos.DfBapNr' at Center.", repo.MdiBak.TpPos.DfBapNrInfo, new RecordItemIndex(6));
            repo.MdiBak.TpPos.DfBapNr.Click();
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='2') on item 'MdiBak.TpPos.DfBapNr'.", repo.MdiBak.TpPos.DfBapNrInfo, new RecordItemIndex(7));
            Validate.AttributeEqual(repo.MdiBak.TpPos.DfBapNrInfo, "Text", "2");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='1') on item 'MdiBak.TpPos.DfBapKzart'.", repo.MdiBak.TpPos.DfBapKzartInfo, new RecordItemIndex(8));
            Validate.AttributeEqual(repo.MdiBak.TpPos.DfBapKzartInfo, "Text", "1");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'MdiBak.PbCommonWeiterleiten' at Center.", repo.MdiBak.PbCommonWeiterleitenInfo, new RecordItemIndex(9));
            repo.MdiBak.PbCommonWeiterleiten.Click();
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (Text>'Anforderung wurde erfolgreich weitergeleitet') on item 'DlgMessageBox.LabelMeldungstext'.", repo.DlgMessageBox.LabelMeldungstextInfo, new RecordItemIndex(10));
            Validate.AttributeContains(repo.DlgMessageBox.LabelMeldungstextInfo, "Text", "Anforderung wurde erfolgreich weitergeleitet");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'DlgMessageBox.Button0' at Center.", repo.DlgMessageBox.Button0Info, new RecordItemIndex(11));
            repo.DlgMessageBox.Button0.Click();
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'MdiBak.PbPerformSimpleSearch' at Center.", repo.MdiBak.PbPerformSimpleSearchInfo, new RecordItemIndex(12));
            repo.MdiBak.PbPerformSimpleSearch.Click();
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left DoubleClick item 'MdiBak.Row1Column01' at Center.", repo.MdiBak.Row1Column01Info, new RecordItemIndex(13));
            repo.MdiBak.Row1Column01.DoubleClick();
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'MdiBak.FrmBAK.DfBakStatus' at Center.", repo.MdiBak.FrmBAK.DfBakStatusInfo, new RecordItemIndex(14));
            repo.MdiBak.FrmBAK.DfBakStatus.Click();
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Status) on item 'MdiBak.FrmBAK.DfBakStatus'.", repo.MdiBak.FrmBAK.DfBakStatusInfo, new RecordItemIndex(15));
            Validate.AttributeEqual(repo.MdiBak.FrmBAK.DfBakStatusInfo, "Text", Status);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'MdiBak.TabPagePositionen' at Center.", repo.MdiBak.TabPagePositionenInfo, new RecordItemIndex(16));
            repo.MdiBak.TabPagePositionen.Click();
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Status) on item 'MdiBak.ColBapStatusRow1'.", repo.MdiBak.ColBapStatusRow1Info, new RecordItemIndex(17));
            Validate.AttributeEqual(repo.MdiBak.ColBapStatusRow1Info, "Text", Status);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='A') on item 'MdiBak.ColBapStatusRow2'.", repo.MdiBak.ColBapStatusRow2Info, new RecordItemIndex(18));
            Validate.AttributeEqual(repo.MdiBak.ColBapStatusRow2Info, "Text", "A");
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
