///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace E_BAK_001.Recordings
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Bedarfsanforderung_erfassen recording.
    /// </summary>
    [TestModule("bc8c92c4-910a-486e-9740-1544ce4eb93f", ModuleType.Recording, 1)]
    public partial class Bedarfsanforderung_erfassen : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::E_BAK_001.E_BAK_001Repository repository.
        /// </summary>
        public static global::E_BAK_001.E_BAK_001Repository repo = global::E_BAK_001.E_BAK_001Repository.Instance;

        static Bedarfsanforderung_erfassen instance = new Bedarfsanforderung_erfassen();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Bedarfsanforderung_erfassen()
        {
            Kunde = "200010";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Bedarfsanforderung_erfassen Instance
        {
            get { return instance; }
        }

#region Variables

        string _Kunde;

        /// <summary>
        /// Gets or sets the value of variable Kunde.
        /// </summary>
        [TestVariable("e829ecaf-08b1-494b-bf65-aa58bd3b644b")]
        public string Kunde
        {
            get { return _Kunde; }
            set { _Kunde = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'MdiBak.PbNew' at Center.", repo.MdiBak.PbNewInfo, new RecordItemIndex(0));
            repo.MdiBak.PbNew.Click();
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'MdiBak.FrmBAK.Bedarfsart' at Center.", repo.MdiBak.FrmBAK.BedarfsartInfo, new RecordItemIndex(1));
            repo.MdiBak.FrmBAK.Bedarfsart.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'N' with focus on 'MdiBak.FrmBAK.Bedarfsart'.", repo.MdiBak.FrmBAK.BedarfsartInfo, new RecordItemIndex(2));
            repo.MdiBak.FrmBAK.Bedarfsart.EnsureVisible();
            Keyboard.Press("N");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'MdiBak.FrmBAK.Kunde' at Center.", repo.MdiBak.FrmBAK.KundeInfo, new RecordItemIndex(3));
            repo.MdiBak.FrmBAK.Kunde.Click();
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Kunde) on item 'MdiBak.FrmBAK.Kunde'.", repo.MdiBak.FrmBAK.KundeInfo, new RecordItemIndex(4));
            Validate.AttributeEqual(repo.MdiBak.FrmBAK.KundeInfo, "Text", Kunde);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Kunde) on item 'MdiBak.FrmBAK.Ware'.", repo.MdiBak.FrmBAK.WareInfo, new RecordItemIndex(5));
            Validate.AttributeEqual(repo.MdiBak.FrmBAK.WareInfo, "Text", Kunde);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'MdiBak.TabPagePositionen' at Center.", repo.MdiBak.TabPagePositionenInfo, new RecordItemIndex(6));
            repo.MdiBak.TabPagePositionen.Click();
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 5s.", new RecordItemIndex(7));
            Delay.Duration(5000, false);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='Wollen Sie eine neue Anforderung anlegen?') on item 'DlgMessageBox.LabelMeldungstext'.", repo.DlgMessageBox.LabelMeldungstextInfo, new RecordItemIndex(8));
            Validate.AttributeEqual(repo.DlgMessageBox.LabelMeldungstextInfo, "Text", "Wollen Sie eine neue Anforderung anlegen?");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'DlgMessageBox.Button0' at Center.", repo.DlgMessageBox.Button0Info, new RecordItemIndex(9));
            repo.DlgMessageBox.Button0.Click();
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 5s.", new RecordItemIndex(10));
            Delay.Duration(5000, false);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
