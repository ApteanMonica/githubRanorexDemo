///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace E_BSK_001.Recordings
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Positionen recording.
    /// </summary>
    [TestModule("b600cd0d-3a49-4343-a059-16ca5980fbdb", ModuleType.Recording, 1)]
    public partial class Positionen : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::E_BSK_001.E_BSK_001Repository repository.
        /// </summary>
        public static global::E_BSK_001.E_BSK_001Repository repo = global::E_BSK_001.E_BSK_001Repository.Instance;

        static Positionen instance = new Positionen();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Positionen()
        {
            Artikel = "";
            Pos1_Menge = "";
            Pos1_Preis = "";
            Pos2_Menge = "";
            Pos2_Preis = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Positionen Instance
        {
            get { return instance; }
        }

#region Variables

        string _Artikel;

        /// <summary>
        /// Gets or sets the value of variable Artikel.
        /// </summary>
        [TestVariable("7387bb09-f797-488f-9e3b-c3323cbbe442")]
        public string Artikel
        {
            get { return _Artikel; }
            set { _Artikel = value; }
        }

        string _Pos1_Menge;

        /// <summary>
        /// Gets or sets the value of variable Pos1_Menge.
        /// </summary>
        [TestVariable("d23136a2-58e0-4ed9-8bdd-e6c53f502d5f")]
        public string Pos1_Menge
        {
            get { return _Pos1_Menge; }
            set { _Pos1_Menge = value; }
        }

        string _Pos1_Preis;

        /// <summary>
        /// Gets or sets the value of variable Pos1_Preis.
        /// </summary>
        [TestVariable("76ec09ab-a2fe-4807-870a-a3fa1402b544")]
        public string Pos1_Preis
        {
            get { return _Pos1_Preis; }
            set { _Pos1_Preis = value; }
        }

        string _Pos2_Menge;

        /// <summary>
        /// Gets or sets the value of variable Pos2_Menge.
        /// </summary>
        [TestVariable("42dcc950-e46f-44da-97df-66f934a10b76")]
        public string Pos2_Menge
        {
            get { return _Pos2_Menge; }
            set { _Pos2_Menge = value; }
        }

        string _Pos2_Preis;

        /// <summary>
        /// Gets or sets the value of variable Pos2_Preis.
        /// </summary>
        [TestVariable("e4d3378f-f593-439c-820e-c2528735ee48")]
        public string Pos2_Preis
        {
            get { return _Pos2_Preis; }
            set { _Pos2_Preis = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Set value", "Setting attribute AccessibleValue to '$Artikel' on item 'MdiBestellung.TpPos.Artikel'.", repo.MdiBestellung.TpPos.ArtikelInfo, new RecordItemIndex(0));
            repo.MdiBestellung.TpPos.Artikel.Element.SetAttributeValue("AccessibleValue", Artikel);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Tab' Press with focus on 'MdiBestellung.TpPos.Artikel'.", repo.MdiBestellung.TpPos.ArtikelInfo, new RecordItemIndex(1));
            Keyboard.PrepareFocus(repo.MdiBestellung.TpPos.Artikel);
            Keyboard.Press(System.Windows.Forms.Keys.Tab, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute AccessibleValue to '$Pos1_Menge' on item 'MdiBestellung.TpPos.Menge'.", repo.MdiBestellung.TpPos.MengeInfo, new RecordItemIndex(2));
            repo.MdiBestellung.TpPos.Menge.Element.SetAttributeValue("AccessibleValue", Pos1_Menge);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Tab' Press with focus on 'MdiBestellung.TpPos.Menge'.", repo.MdiBestellung.TpPos.MengeInfo, new RecordItemIndex(3));
            Keyboard.PrepareFocus(repo.MdiBestellung.TpPos.Menge);
            Keyboard.Press(System.Windows.Forms.Keys.Tab, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='STK') on item 'MdiBestellung.TpPos.Text'.", repo.MdiBestellung.TpPos.TextInfo, new RecordItemIndex(4));
            Validate.AttributeEqual(repo.MdiBestellung.TpPos.TextInfo, "Text", "STK");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (AccessibleValue=$Pos1_Preis) on item 'MdiBestellung.TpPos.Preis'.", repo.MdiBestellung.TpPos.PreisInfo, new RecordItemIndex(5));
            Validate.AttributeEqual(repo.MdiBestellung.TpPos.PreisInfo, "AccessibleValue", Pos1_Preis);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'MdiBestellung.PbDataAccessSave' at Center.", repo.MdiBestellung.PbDataAccessSaveInfo, new RecordItemIndex(6));
            repo.MdiBestellung.PbDataAccessSave.Click();
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute AccessibleValue to '$Artikel' on item 'MdiBestellung.TpPos.Artikel'.", repo.MdiBestellung.TpPos.ArtikelInfo, new RecordItemIndex(7));
            repo.MdiBestellung.TpPos.Artikel.Element.SetAttributeValue("AccessibleValue", Artikel);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Tab' Press.", new RecordItemIndex(8));
            Keyboard.Press(System.Windows.Forms.Keys.Tab, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute AccessibleValue to '$Pos2_Menge' on item 'MdiBestellung.TpPos.Menge'.", repo.MdiBestellung.TpPos.MengeInfo, new RecordItemIndex(9));
            repo.MdiBestellung.TpPos.Menge.Element.SetAttributeValue("AccessibleValue", Pos2_Menge);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Tab' Press.", new RecordItemIndex(10));
            Keyboard.Press(System.Windows.Forms.Keys.Tab, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (AccessibleValue=$Pos2_Preis) on item 'MdiBestellung.TpPos.Preis'.", repo.MdiBestellung.TpPos.PreisInfo, new RecordItemIndex(11));
            Validate.AttributeEqual(repo.MdiBestellung.TpPos.PreisInfo, "AccessibleValue", Pos2_Preis);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'MdiBestellung.PbDataAccessSave' at Center.", repo.MdiBestellung.PbDataAccessSaveInfo, new RecordItemIndex(12));
            repo.MdiBestellung.PbDataAccessSave.Click();
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'MdiBestellung.PbPositionBeenden' at 57;13.", repo.MdiBestellung.PbPositionBeendenInfo, new RecordItemIndex(13));
            repo.MdiBestellung.PbPositionBeenden.Click("57;13");
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
