///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace E_BSK_001.Recordings
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Kopfdaten recording.
    /// </summary>
    [TestModule("bb081377-7960-498b-afa1-d92d5b424364", ModuleType.Recording, 1)]
    public partial class Kopfdaten : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::E_BSK_001.E_BSK_001Repository repository.
        /// </summary>
        public static global::E_BSK_001.E_BSK_001Repository repo = global::E_BSK_001.E_BSK_001Repository.Instance;

        static Kopfdaten instance = new Kopfdaten();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Kopfdaten()
        {
            Lieferant = "";
            Bestellart = "N";
            Lager = "100";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Kopfdaten Instance
        {
            get { return instance; }
        }

#region Variables

        string _Lieferant;

        /// <summary>
        /// Gets or sets the value of variable Lieferant.
        /// </summary>
        [TestVariable("4e11aae4-2354-4110-a5bf-0e175d8cab13")]
        public string Lieferant
        {
            get { return _Lieferant; }
            set { _Lieferant = value; }
        }

        string _Bestellart;

        /// <summary>
        /// Gets or sets the value of variable Bestellart.
        /// </summary>
        [TestVariable("6b9fe704-6e48-428a-b581-4118b07898f9")]
        public string Bestellart
        {
            get { return _Bestellart; }
            set { _Bestellart = value; }
        }

        string _Lager;

        /// <summary>
        /// Gets or sets the value of variable Lager.
        /// </summary>
        [TestVariable("7777dfed-52cc-4d76-9f1f-9a851cb276e0")]
        public string Lager
        {
            get { return _Lager; }
            set { _Lager = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'MdiBestellung.PbNew' at Center.", repo.MdiBestellung.PbNewInfo, new RecordItemIndex(0));
            repo.MdiBestellung.PbNew.Click();
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute AccessibleValue to '$Lieferant' on item 'MdiBestellung.FrmBsk.Lieferant'.", repo.MdiBestellung.FrmBsk.LieferantInfo, new RecordItemIndex(1));
            repo.MdiBestellung.FrmBsk.Lieferant.Element.SetAttributeValue("AccessibleValue", Lieferant);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Tab' Press with focus on 'MdiBestellung.FrmBsk.Lieferant'.", repo.MdiBestellung.FrmBsk.LieferantInfo, new RecordItemIndex(2));
            Keyboard.PrepareFocus(repo.MdiBestellung.FrmBsk.Lieferant);
            Keyboard.Press(System.Windows.Forms.Keys.Tab, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            // BAR: wait for eingebaut da sich neues Fenster hier öffnet.
            Report.Log(ReportLevel.Info, "Wait", "BAR: wait for eingebaut da sich neues Fenster hier öffnet.\r\nWaiting 3m to exist. Associated repository item: 'DlgBsk.TitleBar100AuswahlBestellung'", repo.DlgBsk.TitleBar100AuswahlBestellungInfo, new ActionTimeout(180000), new RecordItemIndex(3));
            repo.DlgBsk.TitleBar100AuswahlBestellungInfo.WaitForExists(180000);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (Text>'Auswahl Bestellung') on item 'DlgBsk.TitleBar100AuswahlBestellung'.", repo.DlgBsk.TitleBar100AuswahlBestellungInfo, new RecordItemIndex(4));
            Validate.AttributeContains(repo.DlgBsk.TitleBar100AuswahlBestellungInfo, "Text", "Auswahl Bestellung");
            
            // XXX
            Report.Log(ReportLevel.Info, "Mouse", "XXX\r\nMouse Left Click item 'DlgBsk.PbNeuVerwalten' at Center.", repo.DlgBsk.PbNeuVerwaltenInfo, new RecordItemIndex(5));
            repo.DlgBsk.PbNeuVerwalten.Click();
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Bestellart) on item 'MdiBestellung.FrmBsk.Bestellart'.", repo.MdiBestellung.FrmBsk.BestellartInfo, new RecordItemIndex(6));
            Validate.AttributeEqual(repo.MdiBestellung.FrmBsk.BestellartInfo, "Text", Bestellart);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Lager) on item 'MdiBestellung.FrmBsk.Lager'.", repo.MdiBestellung.FrmBsk.LagerInfo, new RecordItemIndex(7));
            Validate.AttributeEqual(repo.MdiBestellung.FrmBsk.LagerInfo, "Text", Lager);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'MdiBestellung.TabPagePositionen' at Center.", repo.MdiBestellung.TabPagePositionenInfo, new RecordItemIndex(8));
            repo.MdiBestellung.TabPagePositionen.Click();
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
