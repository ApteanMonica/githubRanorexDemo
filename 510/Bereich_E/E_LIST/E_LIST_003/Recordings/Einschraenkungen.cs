///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace E_LIST_003.Recordings
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Einschraenkungen recording.
    /// </summary>
    [TestModule("6d8b207d-df3f-49f9-8c57-daf5cf9ad806", ModuleType.Recording, 1)]
    public partial class Einschraenkungen : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::E_LIST_003.E_LIST_003Repository repository.
        /// </summary>
        public static global::E_LIST_003.E_LIST_003Repository repo = global::E_LIST_003.E_LIST_003Repository.Instance;

        static Einschraenkungen instance = new Einschraenkungen();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Einschraenkungen()
        {
            Datum_von = "";
            Datum_bis = "";
            Rechnung = "";
            Lieferant = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Einschraenkungen Instance
        {
            get { return instance; }
        }

#region Variables

        string _Datum_von;

        /// <summary>
        /// Gets or sets the value of variable Datum_von.
        /// </summary>
        [TestVariable("7ba12d1b-28b5-4eb0-93ae-f174897274c3")]
        public string Datum_von
        {
            get { return _Datum_von; }
            set { _Datum_von = value; }
        }

        string _Datum_bis;

        /// <summary>
        /// Gets or sets the value of variable Datum_bis.
        /// </summary>
        [TestVariable("239cdcbe-14d5-4604-8ce5-89dc772a68d9")]
        public string Datum_bis
        {
            get { return _Datum_bis; }
            set { _Datum_bis = value; }
        }

        string _Rechnung;

        /// <summary>
        /// Gets or sets the value of variable Rechnung.
        /// </summary>
        [TestVariable("960962dd-7e01-480c-b71a-24c37dfab4b9")]
        public string Rechnung
        {
            get { return _Rechnung; }
            set { _Rechnung = value; }
        }

        string _Lieferant;

        /// <summary>
        /// Gets or sets the value of variable Lieferant.
        /// </summary>
        [TestVariable("7977f926-04bc-42f9-886c-1a021ac15ba9")]
        public string Lieferant
        {
            get { return _Lieferant; }
            set { _Lieferant = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Set value", "Setting attribute AccessibleValue to '$Datum_von' on item 'TblRechList.Datum_von'.", repo.TblRechList.Datum_vonInfo, new RecordItemIndex(0));
            repo.TblRechList.Datum_von.Element.SetAttributeValue("AccessibleValue", Datum_von);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute AccessibleValue to '$Datum_bis' on item 'TblRechList.Datum_bis'.", repo.TblRechList.Datum_bisInfo, new RecordItemIndex(1));
            repo.TblRechList.Datum_bis.Element.SetAttributeValue("AccessibleValue", Datum_bis);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute AccessibleValue to '$Lieferant' on item 'TblRechList.Lieferant'.", repo.TblRechList.LieferantInfo, new RecordItemIndex(2));
            repo.TblRechList.Lieferant.Element.SetAttributeValue("AccessibleValue", Lieferant);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'TblRechList.GroupBox11.CbUeber' at Center.", repo.TblRechList.GroupBox11.CbUeberInfo, new RecordItemIndex(3));
            repo.TblRechList.GroupBox11.CbUeber.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'TblRechList.GroupBox11.CbStorniert' at Center.", repo.TblRechList.GroupBox11.CbStorniertInfo, new RecordItemIndex(4));
            repo.TblRechList.GroupBox11.CbStorniert.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'TblRechList.GroupBox11.CbRichtig' at Center.", repo.TblRechList.GroupBox11.CbRichtigInfo, new RecordItemIndex(5));
            repo.TblRechList.GroupBox11.CbRichtig.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'TblRechList.PbDataAccessLoad' at Center.", repo.TblRechList.PbDataAccessLoadInfo, new RecordItemIndex(6));
            repo.TblRechList.PbDataAccessLoad.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Rechnung) on item 'TblRechList.ColRechNrRow1'.", repo.TblRechList.ColRechNrRow1Info, new RecordItemIndex(7));
            Validate.AttributeEqual(repo.TblRechList.ColRechNrRow1Info, "Text", Rechnung);
            Delay.Milliseconds(100);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
