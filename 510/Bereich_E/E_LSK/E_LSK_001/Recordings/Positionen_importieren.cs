///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace E_LSK_001.Recordings
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Positionen_importieren recording.
    /// </summary>
    [TestModule("017124bd-eda2-4220-b9f0-063b17b729a3", ModuleType.Recording, 1)]
    public partial class Positionen_importieren : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::E_LSK_001.E_LSK_001Repository repository.
        /// </summary>
        public static global::E_LSK_001.E_LSK_001Repository repo = global::E_LSK_001.E_LSK_001Repository.Instance;

        static Positionen_importieren instance = new Positionen_importieren();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Positionen_importieren()
        {
            Bestellnr_Lieferscheinnr = "";
            Artikel = "";
            Menge = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Positionen_importieren Instance
        {
            get { return instance; }
        }

#region Variables

        string _Bestellnr_Lieferscheinnr;

        /// <summary>
        /// Gets or sets the value of variable Bestellnr_Lieferscheinnr.
        /// </summary>
        [TestVariable("40c03aaf-bb79-42d0-864b-177781284d00")]
        public string Bestellnr_Lieferscheinnr
        {
            get { return _Bestellnr_Lieferscheinnr; }
            set { _Bestellnr_Lieferscheinnr = value; }
        }

        string _Artikel;

        /// <summary>
        /// Gets or sets the value of variable Artikel.
        /// </summary>
        [TestVariable("46e4a804-8b0a-47d9-88cd-e05d6ccb1aaa")]
        public string Artikel
        {
            get { return _Artikel; }
            set { _Artikel = value; }
        }

        string _Menge;

        /// <summary>
        /// Gets or sets the value of variable Menge.
        /// </summary>
        [TestVariable("cc8b795e-5db9-4f47-8c12-10199764573c")]
        public string Menge
        {
            get { return _Menge; }
            set { _Menge = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'MdiLSR.TabPagePositionen' at Center.", repo.MdiLSR.TabPagePositionenInfo, new RecordItemIndex(0));
            repo.MdiLSR.TabPagePositionen.Click();
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'MdiLSR.PbBestellung' at Center.", repo.MdiLSR.PbBestellungInfo, new RecordItemIndex(1));
            repo.MdiLSR.PbBestellung.Click();
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Selected='True') on item 'TblImportBsp.FlexGrid.ColBskNrRow1'.", repo.TblImportBsp.FlexGrid.ColBskNrRow1Info, new RecordItemIndex(2));
            Validate.AttributeEqual(repo.TblImportBsp.FlexGrid.ColBskNrRow1Info, "Selected", "True");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Bestellnr_Lieferscheinnr) on item 'TblImportBsp.FlexGrid.ColBskNrRow1'.", repo.TblImportBsp.FlexGrid.ColBskNrRow1Info, new RecordItemIndex(3));
            Validate.AttributeEqual(repo.TblImportBsp.FlexGrid.ColBskNrRow1Info, "Text", Bestellnr_Lieferscheinnr);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Artikel) on item 'TblImportBsp.FlexGrid.ColArtNrRow1'.", repo.TblImportBsp.FlexGrid.ColArtNrRow1Info, new RecordItemIndex(4));
            Validate.AttributeEqual(repo.TblImportBsp.FlexGrid.ColArtNrRow1Info, "Text", Artikel);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'Text' from item 'TblImportBsp.FlexGrid.ColBspBestelltRow1' and assigning its value to variable 'Menge'.", repo.TblImportBsp.FlexGrid.ColBspBestelltRow1Info, new RecordItemIndex(5));
            Menge = repo.TblImportBsp.FlexGrid.ColBspBestelltRow1.Element.GetAttributeValueText("Text");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{F5}' with focus on 'TblImportBsp.FlexGrid.ColLspMengeRow1'.", repo.TblImportBsp.FlexGrid.ColLspMengeRow1Info, new RecordItemIndex(6));
            repo.TblImportBsp.FlexGrid.ColLspMengeRow1.EnsureVisible();
            Keyboard.Press("{F5}");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Menge) on item 'TblImportBsp.FlexGrid.ColLspMengeRow1'.", repo.TblImportBsp.FlexGrid.ColLspMengeRow1Info, new RecordItemIndex(7));
            Validate.AttributeEqual(repo.TblImportBsp.FlexGrid.ColLspMengeRow1Info, "Text", Menge);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Checked='True') on item 'TblImportBsp.CbPositionAutomatisch'.", repo.TblImportBsp.CbPositionAutomatischInfo, new RecordItemIndex(8));
            Validate.AttributeEqual(repo.TblImportBsp.CbPositionAutomatischInfo, "Checked", "True");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'TblImportBsp.PbDataAccessOk' at Center.", repo.TblImportBsp.PbDataAccessOkInfo, new RecordItemIndex(9));
            repo.TblImportBsp.PbDataAccessOk.Click();
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'DlgMessageBox.Button0' at Center.", repo.DlgMessageBox.Button0Info, new RecordItemIndex(10));
            repo.DlgMessageBox.Button0.Click();
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
