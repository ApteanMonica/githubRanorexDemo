///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace E_LSK_001.Recordings
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Positionen recording.
    /// </summary>
    [TestModule("761d4731-3220-484f-b258-c15411dc8b70", ModuleType.Recording, 1)]
    public partial class Positionen : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::E_LSK_001.E_LSK_001Repository repository.
        /// </summary>
        public static global::E_LSK_001.E_LSK_001Repository repo = global::E_LSK_001.E_LSK_001Repository.Instance;

        static Positionen instance = new Positionen();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Positionen()
        {
            Lager = "";
            Menge = "";
            Artikel = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Positionen Instance
        {
            get { return instance; }
        }

#region Variables

        string _Lager;

        /// <summary>
        /// Gets or sets the value of variable Lager.
        /// </summary>
        [TestVariable("c7ab07a1-dba8-46fb-8d19-c5f886de72dc")]
        public string Lager
        {
            get { return _Lager; }
            set { _Lager = value; }
        }

        string _Menge;

        /// <summary>
        /// Gets or sets the value of variable Menge.
        /// </summary>
        [TestVariable("8680554b-9b3f-4e71-8a6c-25253936d244")]
        public string Menge
        {
            get { return _Menge; }
            set { _Menge = value; }
        }

        string _Artikel;

        /// <summary>
        /// Gets or sets the value of variable Artikel.
        /// </summary>
        [TestVariable("400c6f3f-bc94-4b5b-a902-74b5dbe127a9")]
        public string Artikel
        {
            get { return _Artikel; }
            set { _Artikel = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Artikel) on item 'MdiLSR.TblLsp.ColArtNrRow1'.", repo.MdiLSR.TblLsp.ColArtNrRow1Info, new RecordItemIndex(0));
            Validate.AttributeEqual(repo.MdiLSR.TblLsp.ColArtNrRow1Info, "Text", Artikel);
            
            Validate_ColLspMengeRow1(repo.MdiLSR.TblLsp.ColLspMengeRow1Info);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left DoubleClick item 'MdiLSR.TblLsp.Row1Column01' at Center.", repo.MdiLSR.TblLsp.Row1Column01Info, new RecordItemIndex(2));
            repo.MdiLSR.TblLsp.Row1Column01.DoubleClick();
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Artikel) on item 'MdiLSR.TpPos.Artikel'.", repo.MdiLSR.TpPos.ArtikelInfo, new RecordItemIndex(3));
            Validate.AttributeEqual(repo.MdiLSR.TpPos.ArtikelInfo, "Text", Artikel);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Lager) on item 'MdiLSR.TpPos.Lager'.", repo.MdiLSR.TpPos.LagerInfo, new RecordItemIndex(4));
            Validate.AttributeEqual(repo.MdiLSR.TpPos.LagerInfo, "Text", Lager);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'MdiLSR.PbPositionBeenden' at Center.", repo.MdiLSR.PbPositionBeendenInfo, new RecordItemIndex(5));
            repo.MdiLSR.PbPositionBeenden.Click();
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
