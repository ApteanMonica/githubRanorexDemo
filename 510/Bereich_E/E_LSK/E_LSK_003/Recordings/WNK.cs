///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace E_LSK_003.Recordings
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The WNK recording.
    /// </summary>
    [TestModule("32719abe-01f6-404a-8916-8f631e50de41", ModuleType.Recording, 1)]
    public partial class WNK : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::E_LSK_003.E_LSK_003Repository repository.
        /// </summary>
        public static global::E_LSK_003.E_LSK_003Repository repo = global::E_LSK_003.E_LSK_003Repository.Instance;

        static WNK instance = new WNK();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public WNK()
        {
            Artikel = "000010";
            Menge = "";
            Preis = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static WNK Instance
        {
            get { return instance; }
        }

#region Variables

        string _Menge;

        /// <summary>
        /// Gets or sets the value of variable Menge.
        /// </summary>
        [TestVariable("85fc238b-0823-444a-a21c-56735874aabf")]
        public string Menge
        {
            get { return _Menge; }
            set { _Menge = value; }
        }

        string _Preis;

        /// <summary>
        /// Gets or sets the value of variable Preis.
        /// </summary>
        [TestVariable("a6db8a4a-2db7-49be-aef0-16cff47f6995")]
        public string Preis
        {
            get { return _Preis; }
            set { _Preis = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable Artikel.
        /// </summary>
        [TestVariable("9c672c3f-3e5e-4b24-86bd-f4a1e29e8be8")]
        public string Artikel
        {
            get { return repo.Artikel; }
            set { repo.Artikel = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Checked='True') on item 'FrmWNK.RbAlles'.", repo.FrmWNK.RbAllesInfo, new RecordItemIndex(0));
            Validate.AttributeEqual(repo.FrmWNK.RbAllesInfo, "Checked", "True");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Checked='True') on item 'FrmWNK.RbWnkModusEinkaufLs'.", repo.FrmWNK.RbWnkModusEinkaufLsInfo, new RecordItemIndex(1));
            Validate.AttributeEqual(repo.FrmWNK.RbWnkModusEinkaufLsInfo, "Checked", "True");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmWNK.TblWNK.FlexGrid' at Center.", repo.FrmWNK.TblWNK.FlexGridInfo, new RecordItemIndex(2));
            repo.FrmWNK.TblWNK.FlexGrid.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Insert' Press.", new RecordItemIndex(3));
            Keyboard.Press(System.Windows.Forms.Keys.Insert, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmWNK.TblWNK.ColArtNrRow1' at Center.", repo.FrmWNK.TblWNK.ColArtNrRow1Info, new RecordItemIndex(4));
            repo.FrmWNK.TblWNK.ColArtNrRow1.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{NumPad0}{NumPad0}{NumPad0}{NumPad0}{NumPad1}{NumPad0}' with focus on 'FrmWNK.TblWNK.ColArtNrRow1'.", repo.FrmWNK.TblWNK.ColArtNrRow1Info, new RecordItemIndex(5));
            repo.FrmWNK.TblWNK.ColArtNrRow1.PressKeys("{NumPad0}{NumPad0}{NumPad0}{NumPad0}{NumPad1}{NumPad0}");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Tab' Press.", new RecordItemIndex(6));
            Keyboard.Press(System.Windows.Forms.Keys.Tab, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{NumPad1}' with focus on 'FrmWNK.TblWNK.Menge'.", repo.FrmWNK.TblWNK.MengeInfo, new RecordItemIndex(7));
            repo.FrmWNK.TblWNK.Menge.PressKeys("{NumPad1}");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Tab' Press.", new RecordItemIndex(8));
            Keyboard.Press(System.Windows.Forms.Keys.Tab, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{NumPad5}' with focus on 'FrmWNK.TblWNK.ColPreisRow1'.", repo.FrmWNK.TblWNK.ColPreisRow1Info, new RecordItemIndex(9));
            repo.FrmWNK.TblWNK.ColPreisRow1.PressKeys("{NumPad5}");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Tab' Press.", new RecordItemIndex(10));
            Keyboard.Press(System.Windows.Forms.Keys.Tab, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmWNK.PbSpeichern' at Center.", repo.FrmWNK.PbSpeichernInfo, new RecordItemIndex(11));
            //repo.FrmWNK.PbSpeichern.Click();
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmWNK.PbDataAccessSave' at Center.", repo.FrmWNK.PbDataAccessSaveInfo, new RecordItemIndex(12));
            repo.FrmWNK.PbDataAccessSave.Click();
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
