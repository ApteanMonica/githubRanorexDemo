///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace E_LSK_002.Recordings
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Neue_Rechnung recording.
    /// </summary>
    [TestModule("28dead36-f1f7-4a22-863e-0aac9800a601", ModuleType.Recording, 1)]
    public partial class Neue_Rechnung : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::E_LSK_002.E_LSK_002Repository repository.
        /// </summary>
        public static global::E_LSK_002.E_LSK_002Repository repo = global::E_LSK_002.E_LSK_002Repository.Instance;

        static Neue_Rechnung instance = new Neue_Rechnung();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Neue_Rechnung()
        {
            Lieferant = "300004";
            Rechnung = "301900002";
            Datum = "";
            Jahr = "";
            Monat = "";
            Tag = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Neue_Rechnung Instance
        {
            get { return instance; }
        }

#region Variables

        string _Lieferant;

        /// <summary>
        /// Gets or sets the value of variable Lieferant.
        /// </summary>
        [TestVariable("fe598844-fab7-4109-ba54-cabdac2e6585")]
        public string Lieferant
        {
            get { return _Lieferant; }
            set { _Lieferant = value; }
        }

        string _Rechnung;

        /// <summary>
        /// Gets or sets the value of variable Rechnung.
        /// </summary>
        [TestVariable("36418a36-74db-4186-bb57-2751d8fbe192")]
        public string Rechnung
        {
            get { return _Rechnung; }
            set { _Rechnung = value; }
        }

        string _Datum;

        /// <summary>
        /// Gets or sets the value of variable Datum.
        /// </summary>
        [TestVariable("c6d25d81-d37e-4de9-ad73-41b192a95567")]
        public string Datum
        {
            get { return _Datum; }
            set { _Datum = value; }
        }

        string _Jahr;

        /// <summary>
        /// Gets or sets the value of variable Jahr.
        /// </summary>
        [TestVariable("aaf27097-c904-41ce-b736-cb3c8a971195")]
        public string Jahr
        {
            get { return _Jahr; }
            set { _Jahr = value; }
        }

        string _Monat;

        /// <summary>
        /// Gets or sets the value of variable Monat.
        /// </summary>
        [TestVariable("e05a7e0e-cd69-4d39-bcfd-44861cae9263")]
        public string Monat
        {
            get { return _Monat; }
            set { _Monat = value; }
        }

        string _Tag;

        /// <summary>
        /// Gets or sets the value of variable Tag.
        /// </summary>
        [TestVariable("a848008e-26b8-485c-b551-284976008458")]
        public string Tag
        {
            get { return _Tag; }
            set { _Tag = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'MdiLSR.PbNew' at Center.", repo.MdiLSR.PbNewInfo, new RecordItemIndex(0));
            repo.MdiLSR.PbNew.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Lieferant' with focus on 'MdiLSR.Lieferant'.", repo.MdiLSR.LieferantInfo, new RecordItemIndex(1));
            repo.MdiLSR.Lieferant.PressKeys(Lieferant);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Tab' Press.", new RecordItemIndex(2));
            Keyboard.Press(System.Windows.Forms.Keys.Tab, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Rechnung' with focus on 'MdiLSR.TpRech.Rechnung'.", repo.MdiLSR.TpRech.RechnungInfo, new RecordItemIndex(3));
            repo.MdiLSR.TpRech.Rechnung.PressKeys(Rechnung);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Tab' Press.", new RecordItemIndex(4));
            Keyboard.Press(System.Windows.Forms.Keys.Tab, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Rechnung' with focus on 'MdiLSR.IntBelegnr'.", repo.MdiLSR.IntBelegnrInfo, new RecordItemIndex(5));
            repo.MdiLSR.IntBelegnr.PressKeys(Rechnung);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Tab' Press.", new RecordItemIndex(6));
            Keyboard.Press(System.Windows.Forms.Keys.Tab, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Datum' with focus on 'MdiLSR.Rechnungsdatum'.", repo.MdiLSR.RechnungsdatumInfo, new RecordItemIndex(7));
            repo.MdiLSR.Rechnungsdatum.PressKeys(Datum);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Tab' Press with focus on 'MdiLSR.Rechnungsdatum'.", repo.MdiLSR.RechnungsdatumInfo, new RecordItemIndex(8));
            Keyboard.PrepareFocus(repo.MdiLSR.Rechnungsdatum);
            Keyboard.Press(System.Windows.Forms.Keys.Tab, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Datum) on item 'MdiLSR.Buchungsdatum'.", repo.MdiLSR.BuchungsdatumInfo, new RecordItemIndex(9));
            Validate.AttributeEqual(repo.MdiLSR.BuchungsdatumInfo, "Text", Datum);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (Text>$Jahr) on item 'MdiLSR.TextUVA'.", repo.MdiLSR.TextUVAInfo, new RecordItemIndex(10));
            Validate.AttributeContains(repo.MdiLSR.TextUVAInfo, "Text", Jahr);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Monat) on item 'MdiLSR.Text1'.", repo.MdiLSR.Text1Info, new RecordItemIndex(11));
            //Validate.AttributeEqual(repo.MdiLSR.Text1Info, "Text", Monat);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating AttributeRegex (Text~$Tag) on item 'MdiLSR.Text2'.", repo.MdiLSR.Text2Info, new RecordItemIndex(12));
            //Validate.AttributeRegex(repo.MdiLSR.Text2Info, "Text", new Regex(Tag));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='N') on item 'MdiLSR.EKRechArt'.", repo.MdiLSR.EKRechArtInfo, new RecordItemIndex(13));
            Validate.AttributeEqual(repo.MdiLSR.EKRechArtInfo, "Text", "N");
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
