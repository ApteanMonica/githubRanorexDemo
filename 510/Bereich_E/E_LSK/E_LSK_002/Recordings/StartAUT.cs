///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace E_LSK_002.Recordings
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The StartAUT recording.
    /// </summary>
    [TestModule("5856b40a-fc38-411a-93b8-6ca8579be615", ModuleType.Recording, 1)]
    public partial class StartAUT : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::E_LSK_002.E_LSK_002Repository repository.
        /// </summary>
        public static global::E_LSK_002.E_LSK_002Repository repo = global::E_LSK_002.E_LSK_002Repository.Instance;

        static StartAUT instance = new StartAUT();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public StartAUT()
        {
            Startfile = "";
            Programm = "";
            Datum = "";
            Jahr = "";
            Monat = "";
            Tag = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static StartAUT Instance
        {
            get { return instance; }
        }

#region Variables

        string _Startfile;

        /// <summary>
        /// Gets or sets the value of variable Startfile.
        /// </summary>
        [TestVariable("2a73948f-1ba2-4278-b258-3744bcbee4d8")]
        public string Startfile
        {
            get { return _Startfile; }
            set { _Startfile = value; }
        }

        string _Programm;

        /// <summary>
        /// Gets or sets the value of variable Programm.
        /// </summary>
        [TestVariable("71f559a5-e862-43e5-8f07-7ddb9add2492")]
        public string Programm
        {
            get { return _Programm; }
            set { _Programm = value; }
        }

        string _Datum;

        /// <summary>
        /// Gets or sets the value of variable Datum.
        /// </summary>
        [TestVariable("9116fd32-f3ab-4ef8-a179-d7d039cc71a8")]
        public string Datum
        {
            get { return _Datum; }
            set { _Datum = value; }
        }

        string _Jahr;

        /// <summary>
        /// Gets or sets the value of variable Jahr.
        /// </summary>
        [TestVariable("a79609c6-2ea0-4c88-90a6-96b39a6ddf3a")]
        public string Jahr
        {
            get { return _Jahr; }
            set { _Jahr = value; }
        }

        string _Monat;

        /// <summary>
        /// Gets or sets the value of variable Monat.
        /// </summary>
        [TestVariable("0cdb97a4-6d28-4b7e-bc35-ce45fa3ed280")]
        public string Monat
        {
            get { return _Monat; }
            set { _Monat = value; }
        }

        string _Tag;

        /// <summary>
        /// Gets or sets the value of variable Tag.
        /// </summary>
        [TestVariable("16703e5f-182c-44d6-aaaf-1189c2de1eff")]
        public string Tag
        {
            get { return _Tag; }
            set { _Tag = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Application", "Run application with file name from variable $Startfile with arguments from variable $Programm in normal mode.", new RecordItemIndex(0));
            Host.Local.RunApplication(Startfile, Programm, "", false);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 3m to exist. Associated repository item: 'MdiLSR.TitleBar100LieferscheineLagerzuga'", repo.MdiLSR.TitleBar100LieferscheineLagerzugaInfo, new ActionTimeout(180000), new RecordItemIndex(1));
            repo.MdiLSR.TitleBar100LieferscheineLagerzugaInfo.WaitForExists(180000);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeRegex (AccessibleValue~'') on item 'MdiLSR.TitleBar100LieferscheineLagerzuga'.", repo.MdiLSR.TitleBar100LieferscheineLagerzugaInfo, new RecordItemIndex(2));
            Validate.AttributeRegex(repo.MdiLSR.TitleBar100LieferscheineLagerzugaInfo, "AccessibleValue", new Regex(""));
            
            Datum = Ranorex.AutomationHelpers.UserCodeCollections.SystemLibrary.GetDateTimeAsString("dd.MM.yyyy");
            
            Jahr = Ranorex.AutomationHelpers.UserCodeCollections.SystemLibrary.GetDateTimeAsString("yyyy");
            
            Monat = Ranorex.AutomationHelpers.UserCodeCollections.SystemLibrary.GetDateTimeAsString("MM");
            
            Tag = Ranorex.AutomationHelpers.UserCodeCollections.SystemLibrary.GetDateTimeAsString("dd");
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
