///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace E_LSK_004.Recordings
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The RE_und_LS_aufrufen recording.
    /// </summary>
    [TestModule("9b28070c-b627-4f23-b59f-352e2b634208", ModuleType.Recording, 1)]
    public partial class RE_und_LS_aufrufen : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::E_LSK_004.E_LSK_004Repository repository.
        /// </summary>
        public static global::E_LSK_004.E_LSK_004Repository repo = global::E_LSK_004.E_LSK_004Repository.Instance;

        static RE_und_LS_aufrufen instance = new RE_und_LS_aufrufen();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public RE_und_LS_aufrufen()
        {
            Rech_Nr = "QS-N001";
            Lieferant = "300018";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static RE_und_LS_aufrufen Instance
        {
            get { return instance; }
        }

#region Variables

        string _Rech_Nr;

        /// <summary>
        /// Gets or sets the value of variable Rech_Nr.
        /// </summary>
        [TestVariable("d435b981-2780-49ba-b134-daf069a225a8")]
        public string Rech_Nr
        {
            get { return _Rech_Nr; }
            set { _Rech_Nr = value; }
        }

        string _Lieferant;

        /// <summary>
        /// Gets or sets the value of variable Lieferant.
        /// </summary>
        [TestVariable("4b575525-e27c-4a53-ad83-308a5dc24b65")]
        public string Lieferant
        {
            get { return _Lieferant; }
            set { _Lieferant = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'MdiLSR.FrmSearchPage.Text' at Center.", repo.MdiLSR.FrmSearchPage.TextInfo, new RecordItemIndex(0));
            repo.MdiLSR.FrmSearchPage.Text.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Rech_Nr' with focus on 'MdiLSR.FrmSearchPage.Text'.", repo.MdiLSR.FrmSearchPage.TextInfo, new RecordItemIndex(1));
            repo.MdiLSR.FrmSearchPage.Text.PressKeys(Rech_Nr);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Rech_Nr) on item 'MdiLSR.FrmSearchPage.CellTmpColS2Row1'.", repo.MdiLSR.FrmSearchPage.CellTmpColS2Row1Info, new RecordItemIndex(2));
            Validate.AttributeEqual(repo.MdiLSR.FrmSearchPage.CellTmpColS2Row1Info, "Text", Rech_Nr);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left DoubleClick item 'MdiLSR.FrmSearchPage.CellTmpColS2Row1' at Center.", repo.MdiLSR.FrmSearchPage.CellTmpColS2Row1Info, new RecordItemIndex(3));
            repo.MdiLSR.FrmSearchPage.CellTmpColS2Row1.DoubleClick();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Lieferant) on item 'MdiLSR.FrmKopf.Lieferant'.", repo.MdiLSR.FrmKopf.LieferantInfo, new RecordItemIndex(4));
            Validate.AttributeEqual(repo.MdiLSR.FrmKopf.LieferantInfo, "Text", Lieferant);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Rech_Nr) on item 'MdiLSR.FrmKopf.Rechnung1'.", repo.MdiLSR.FrmKopf.Rechnung1Info, new RecordItemIndex(5));
            Validate.AttributeEqual(repo.MdiLSR.FrmKopf.Rechnung1Info, "Text", Rech_Nr);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='F') on item 'MdiLSR.FrmKopf.DfRechStatus'.", repo.MdiLSR.FrmKopf.DfRechStatusInfo, new RecordItemIndex(6));
            Validate.AttributeEqual(repo.MdiLSR.FrmKopf.DfRechStatusInfo, "Text", "F");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='60,50') on item 'MdiLSR.FrmKopf.Lieferscheine'.", repo.MdiLSR.FrmKopf.LieferscheineInfo, new RecordItemIndex(7));
            Validate.AttributeEqual(repo.MdiLSR.FrmKopf.LieferscheineInfo, "Text", "60,50");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='9,50') on item 'MdiLSR.FrmKopf.DfDifferenz'.", repo.MdiLSR.FrmKopf.DfDifferenzInfo, new RecordItemIndex(8));
            Validate.AttributeEqual(repo.MdiLSR.FrmKopf.DfDifferenzInfo, "Text", "9,50");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='F') on item 'MdiLSR.FrmKopf.ColLskStatusRow1'.", repo.MdiLSR.FrmKopf.ColLskStatusRow1Info, new RecordItemIndex(9));
            Validate.AttributeEqual(repo.MdiLSR.FrmKopf.ColLskStatusRow1Info, "Text", "F");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'MdiLSR.FrmKopf.Row1Column0' at Center.", repo.MdiLSR.FrmKopf.Row1Column0Info, new RecordItemIndex(10));
            repo.MdiLSR.FrmKopf.Row1Column0.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Right Click item 'MdiLSR.FrmKopf.Row1Column0' at Center.", repo.MdiLSR.FrmKopf.Row1Column0Info, new RecordItemIndex(11));
            repo.MdiLSR.FrmKopf.Row1Column0.Click(System.Windows.Forms.MouseButtons.Right);
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ELSK.Lieferscheinpositionen' at UpperCenter.", repo.ELSK.LieferscheinpositionenInfo, new RecordItemIndex(12));
            repo.ELSK.Lieferscheinpositionen.Click(Location.UpperCenter);
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 10s to exist. Associated repository item: 'MdiLSR.TitleBar100LieferscheineLagerzuga'", repo.MdiLSR.TitleBar100LieferscheineLagerzugaInfo, new ActionTimeout(10000), new RecordItemIndex(13));
            repo.MdiLSR.TitleBar100LieferscheineLagerzugaInfo.WaitForExists(10000);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (Text>'Lieferscheinkorrektur') on item 'MdiLSR.TitleBar100LieferscheineLagerzuga'.", repo.MdiLSR.TitleBar100LieferscheineLagerzugaInfo, new RecordItemIndex(14));
            Validate.AttributeContains(repo.MdiLSR.TitleBar100LieferscheineLagerzugaInfo, "Text", "Lieferscheinkorrektur");
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
