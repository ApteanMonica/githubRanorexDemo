///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace E_ABRK_001.Recordings
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Rahmenbestellung_erfassen recording.
    /// </summary>
    [TestModule("adf442c8-b314-4abf-b79c-ac80d1562c90", ModuleType.Recording, 1)]
    public partial class Rahmenbestellung_erfassen : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::E_ABRK_001.E_ABRK_001Repository repository.
        /// </summary>
        public static global::E_ABRK_001.E_ABRK_001Repository repo = global::E_ABRK_001.E_ABRK_001Repository.Instance;

        static Rahmenbestellung_erfassen instance = new Rahmenbestellung_erfassen();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Rahmenbestellung_erfassen()
        {
            Lieferant = "300019";
            Zahlungsbedingung = "030";
            Rahmennummer = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Rahmenbestellung_erfassen Instance
        {
            get { return instance; }
        }

#region Variables

        string _Lieferant;

        /// <summary>
        /// Gets or sets the value of variable Lieferant.
        /// </summary>
        [TestVariable("29e294bf-b71c-4ee1-bff2-7907fc92714b")]
        public string Lieferant
        {
            get { return _Lieferant; }
            set { _Lieferant = value; }
        }

        string _Zahlungsbedingung;

        /// <summary>
        /// Gets or sets the value of variable Zahlungsbedingung.
        /// </summary>
        [TestVariable("1988a829-8300-42a0-9fc5-323a482d7ee8")]
        public string Zahlungsbedingung
        {
            get { return _Zahlungsbedingung; }
            set { _Zahlungsbedingung = value; }
        }

        string _Rahmennummer;

        /// <summary>
        /// Gets or sets the value of variable Rahmennummer.
        /// </summary>
        [TestVariable("4b68f342-54ba-4de2-9ff7-27416474ee2f")]
        public string Rahmennummer
        {
            get { return _Rahmennummer; }
            set { _Rahmennummer = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmAbrk.PbNew' at Center.", repo.FrmAbrk.PbNewInfo, new RecordItemIndex(0));
            repo.FrmAbrk.PbNew.Click();
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmAbrk.Text' at Center.", repo.FrmAbrk.TextInfo, new RecordItemIndex(1));
            repo.FrmAbrk.Text.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'N{Tab}' with focus on 'FrmAbrk.Text'.", repo.FrmAbrk.TextInfo, new RecordItemIndex(2));
            repo.FrmAbrk.Text.PressKeys("N{Tab}");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'QS Beleg' with focus on 'FrmAbrk'.", repo.FrmAbrk.SelfInfo, new RecordItemIndex(3));
            repo.FrmAbrk.Self.EnsureVisible();
            Keyboard.Press("QS Beleg");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Tab}' with focus on 'FrmAbrk'.", repo.FrmAbrk.SelfInfo, new RecordItemIndex(4));
            repo.FrmAbrk.Self.EnsureVisible();
            Keyboard.Press("{Tab}");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left DoubleClick item 'FrmAbrk.PicTabs.RahmenGueltigVon' at Center.", repo.FrmAbrk.PicTabs.RahmenGueltigVonInfo, new RecordItemIndex(5));
            repo.FrmAbrk.PicTabs.RahmenGueltigVon.DoubleClick();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{NumPad0 down}{NumPad1 down}{NumPad0 up}{NumPad1 up}' with focus on 'FrmAbrk.PicTabs.RahmenGueltigVon'.", repo.FrmAbrk.PicTabs.RahmenGueltigVonInfo, new RecordItemIndex(6));
            repo.FrmAbrk.PicTabs.RahmenGueltigVon.PressKeys("{NumPad0 down}{NumPad1 down}{NumPad0 up}{NumPad1 up}");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Tab}' with focus on 'FrmAbrk.PicTabs.RahmenGueltigVon'.", repo.FrmAbrk.PicTabs.RahmenGueltigVonInfo, new RecordItemIndex(7));
            repo.FrmAbrk.PicTabs.RahmenGueltigVon.PressKeys("{Tab}");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Lieferant) on item 'FrmAbrk.Lieferant'.", repo.FrmAbrk.LieferantInfo, new RecordItemIndex(8));
            Validate.AttributeEqual(repo.FrmAbrk.LieferantInfo, "Text", Lieferant);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmAbrk.PicTabs.TextBis' at CenterRight.", repo.FrmAbrk.PicTabs.TextBisInfo, new RecordItemIndex(9));
            repo.FrmAbrk.PicTabs.TextBis.Click(Location.CenterRight);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '31.12.2025' with focus on 'FrmAbrk.PicTabs.TextBis'.", repo.FrmAbrk.PicTabs.TextBisInfo, new RecordItemIndex(10));
            repo.FrmAbrk.PicTabs.TextBis.PressKeys("31.12.2025");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Right Click item 'FrmAbrk.PicTabs.MeldedatumFuerAblauf' at Center.", repo.FrmAbrk.PicTabs.MeldedatumFuerAblaufInfo, new RecordItemIndex(11));
            repo.FrmAbrk.PicTabs.MeldedatumFuerAblauf.Click(System.Windows.Forms.MouseButtons.Right);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'EABRK.AktuellesDatum' at UpperCenter.", repo.EABRK.AktuellesDatumInfo, new RecordItemIndex(12));
            repo.EABRK.AktuellesDatum.Click(Location.UpperCenter);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Add}{Add}{Add}' with focus on 'FrmAbrk.PicTabs.MeldedatumFuerAblauf'.", repo.FrmAbrk.PicTabs.MeldedatumFuerAblaufInfo, new RecordItemIndex(13));
            repo.FrmAbrk.PicTabs.MeldedatumFuerAblauf.PressKeys("{Add}{Add}{Add}");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmAbrk.PicTabs.Zahlungsbed' at CenterRight.", repo.FrmAbrk.PicTabs.ZahlungsbedInfo, new RecordItemIndex(14));
            repo.FrmAbrk.PicTabs.Zahlungsbed.Click(Location.CenterRight);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'EABRK1.DropDown' at Center.", repo.EABRK1.DropDownInfo, new RecordItemIndex(15));
            repo.EABRK1.DropDown.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Tab}' with focus on 'FrmAbrk.PicTabs.Zahlungsbed'.", repo.FrmAbrk.PicTabs.ZahlungsbedInfo, new RecordItemIndex(16));
            repo.FrmAbrk.PicTabs.Zahlungsbed.PressKeys("{Tab}");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmAbrk.PicTabs.IBanf_Kopf' at Center.", repo.FrmAbrk.PicTabs.IBanf_KopfInfo, new RecordItemIndex(17));
            repo.FrmAbrk.PicTabs.IBanf_Kopf.Click();
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeRegex (Text~$Zahlungsbedingung) on item 'FrmAbrk.PicTabs.Zahlungsbed'.", repo.FrmAbrk.PicTabs.ZahlungsbedInfo, new RecordItemIndex(18));
            Validate.AttributeRegex(repo.FrmAbrk.PicTabs.ZahlungsbedInfo, "Text", new Regex(Zahlungsbedingung));
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmAbrk.PicTabs.IBanf_Kopf' at Center.", repo.FrmAbrk.PicTabs.IBanf_KopfInfo, new RecordItemIndex(19));
            repo.FrmAbrk.PicTabs.IBanf_Kopf.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'ABRK{LShiftKey down}_TEST{LShiftKey up}{Tab}' with focus on 'FrmAbrk.PicTabs.IBanf_Kopf'.", repo.FrmAbrk.PicTabs.IBanf_KopfInfo, new RecordItemIndex(20));
            repo.FrmAbrk.PicTabs.IBanf_Kopf.PressKeys("ABRK{LShiftKey down}_TEST{LShiftKey up}{Tab}");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmAbrk.PicTabs.TabPageKontierung' at Center.", repo.FrmAbrk.PicTabs.TabPageKontierungInfo, new RecordItemIndex(21));
            repo.FrmAbrk.PicTabs.TabPageKontierung.Click();
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmAbrk.PicTabs.FlexGrid' at Center.", repo.FrmAbrk.PicTabs.FlexGridInfo, new RecordItemIndex(22));
            repo.FrmAbrk.PicTabs.FlexGrid.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Insert}' with focus on 'FrmAbrk.PicTabs.FlexGrid'.", repo.FrmAbrk.PicTabs.FlexGridInfo, new RecordItemIndex(23));
            repo.FrmAbrk.PicTabs.FlexGrid.PressKeys("{Insert}");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{NumPad5}{NumPad0}{NumPad1}{NumPad0}{Tab}' with focus on 'FrmAbrk'.", repo.FrmAbrk.SelfInfo, new RecordItemIndex(24));
            repo.FrmAbrk.Self.EnsureVisible();
            Keyboard.Press("{NumPad5}{NumPad0}{NumPad1}{NumPad0}{Tab}");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmAbrk.PicTabs.TabPagePositionen' at Center.", repo.FrmAbrk.PicTabs.TabPagePositionenInfo, new RecordItemIndex(25));
            repo.FrmAbrk.PicTabs.TabPagePositionen.Click();
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 30s to exist. Associated repository item: 'FrmAbrk1.TabPagePosition'", repo.FrmAbrk1.TabPagePositionInfo, new ActionTimeout(30000), new RecordItemIndex(26));
            repo.FrmAbrk1.TabPagePositionInfo.WaitForExists(30000);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (Text>$Rahmennummer) on item 'FrmAbrk1.Rahmennummer'.", repo.FrmAbrk1.RahmennummerInfo, new RecordItemIndex(27));
            Validate.AttributeContains(repo.FrmAbrk1.RahmennummerInfo, "Text", Rahmennummer);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
