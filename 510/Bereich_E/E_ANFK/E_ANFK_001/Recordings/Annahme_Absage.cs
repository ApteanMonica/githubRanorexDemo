///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace E_ANFK_001.Recordings
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Annahme_Absage recording.
    /// </summary>
    [TestModule("07041763-1d88-443c-93db-e55bbea77278", ModuleType.Recording, 1)]
    public partial class Annahme_Absage : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::E_ANFK_001.E_ANFK_001Repository repository.
        /// </summary>
        public static global::E_ANFK_001.E_ANFK_001Repository repo = global::E_ANFK_001.E_ANFK_001Repository.Instance;

        static Annahme_Absage instance = new Annahme_Absage();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Annahme_Absage()
        {
            Zuschlag = "5";
            NewVariable = "{LMenu down}{Tab down}{Tab up}{Tab}{Tab}{LMenu up}";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Annahme_Absage Instance
        {
            get { return instance; }
        }

#region Variables

        string _Zuschlag;

        /// <summary>
        /// Gets or sets the value of variable Zuschlag.
        /// </summary>
        [TestVariable("3ae9a4de-572d-4b33-ab70-fb17e101ddaf")]
        public string Zuschlag
        {
            get { return _Zuschlag; }
            set { _Zuschlag = value; }
        }

        string _NewVariable;

        /// <summary>
        /// Gets or sets the value of variable NewVariable.
        /// </summary>
        [TestVariable("b99912ef-9bac-48c6-8702-a94f73e67b9e")]
        public string NewVariable
        {
            get { return _NewVariable; }
            set { _NewVariable = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmAnfk.FlexGrid1.Row2Column0' at Center.", repo.FrmAnfk.FlexGrid1.Row2Column0Info, new RecordItemIndex(0));
            repo.FrmAnfk.FlexGrid1.Row2Column0.Click();
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Right Click item 'FrmAnfk.FlexGrid1.Row2Column0' at Center.", repo.FrmAnfk.FlexGrid1.Row2Column0Info, new RecordItemIndex(1));
            repo.FrmAnfk.FlexGrid1.Row2Column0.Click(System.Windows.Forms.MouseButtons.Right);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'EANFK.ZuschlagErteilen' at UpperCenter.", repo.EANFK.ZuschlagErteilenInfo, new RecordItemIndex(2));
            repo.EANFK.ZuschlagErteilen.Click(Location.UpperCenter);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Zuschlag) on item 'FrmAnfk.FlexGrid1.ColAnflStatusRow2'.", repo.FrmAnfk.FlexGrid1.ColAnflStatusRow2Info, new RecordItemIndex(3));
            Validate.AttributeEqual(repo.FrmAnfk.FlexGrid1.ColAnflStatusRow2Info, "Text", Zuschlag);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmAnfk.FlexGrid1.Row1Column0' at Center.", repo.FrmAnfk.FlexGrid1.Row1Column0Info, new RecordItemIndex(4));
            repo.FrmAnfk.FlexGrid1.Row1Column0.Click();
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmAnfk.PbExtrasAbsage' at Center.", repo.FrmAnfk.PbExtrasAbsageInfo, new RecordItemIndex(5));
            repo.FrmAnfk.PbExtrasAbsage.Click();
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (Text>'Druck des Absageserienbriefes') on item 'DlgDDEDruck.TitleBar100DruckDesAbsageserienbri'.", repo.DlgDDEDruck.TitleBar100DruckDesAbsageserienbriInfo, new RecordItemIndex(6));
            Validate.AttributeContains(repo.DlgDDEDruck.TitleBar100DruckDesAbsageserienbriInfo, "Text", "Druck des Absageserienbriefes");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'DlgDDEDruck.RbBildschirm' at Center.", repo.DlgDDEDruck.RbBildschirmInfo, new RecordItemIndex(7));
            repo.DlgDDEDruck.RbBildschirm.Click();
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'DlgDDEDruck.PbAbbrechen' at Center.", repo.DlgDDEDruck.PbAbbrechenInfo, new RecordItemIndex(8));
            repo.DlgDDEDruck.PbAbbrechen.Click();
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'DlgDDEDruck.PbDruckStart' at Center.", repo.DlgDDEDruck.PbDruckStartInfo, new RecordItemIndex(9));
            //repo.DlgDDEDruck.PbDruckStart.Click();
            
            //Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{LMenu down}{Tab}{Tab}{Tab}{LMenu up}' with focus on 'Form100Anfrageverwaltung'.", repo.Form100Anfrageverwaltung.SelfInfo, new RecordItemIndex(10));
            //repo.Form100Anfrageverwaltung.Self.EnsureVisible();
            //Keyboard.Press("{LMenu down}{Tab}{Tab}{Tab}{LMenu up}");
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (Text>'Ihr Angebot') on item 'Serienbriefe1Kompatibilitaetsmodus1.UIAAutomationIdWordContentPage1'.", repo.Serienbriefe1Kompatibilitaetsmodus1.UIAAutomationIdWordContentPage1Info, new RecordItemIndex(11));
            //Validate.AttributeContains(repo.Serienbriefe1Kompatibilitaetsmodus1.UIAAutomationIdWordContentPage1Info, "Text", "Ihr Angebot");
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Serienbriefe1Kompatibilitaetsmodus1.Schliessen' at Center.", repo.Serienbriefe1Kompatibilitaetsmodus1.SchliessenInfo, new RecordItemIndex(12));
            //repo.Serienbriefe1Kompatibilitaetsmodus1.Schliessen.Click();
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'MicrosoftWord.NichtSpeichern' at Center.", repo.MicrosoftWord.NichtSpeichernInfo, new RecordItemIndex(13));
            //repo.MicrosoftWord.NichtSpeichern.Click();
            
            //Report.Log(ReportLevel.Info, "Wait", "Waiting 10s to exist. Associated repository item: 'Serienbriefe1Kompatibilitaetsmodus1.NetUIOfficeCaption'", repo.Serienbriefe1Kompatibilitaetsmodus1.NetUIOfficeCaptionInfo, new ActionTimeout(10000), new RecordItemIndex(14));
            //repo.Serienbriefe1Kompatibilitaetsmodus1.NetUIOfficeCaptionInfo.WaitForExists(10000);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
