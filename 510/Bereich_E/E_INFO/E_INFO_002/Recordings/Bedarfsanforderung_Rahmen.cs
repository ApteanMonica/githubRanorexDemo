///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace E_INFO_002.Recordings
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Bedarfsanforderung_Rahmen recording.
    /// </summary>
    [TestModule("94a9900d-ee25-4a3d-bbbf-8d8c4b6706d1", ModuleType.Recording, 1)]
    public partial class Bedarfsanforderung_Rahmen : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::E_INFO_002.E_INFO_002Repository repository.
        /// </summary>
        public static global::E_INFO_002.E_INFO_002Repository repo = global::E_INFO_002.E_INFO_002Repository.Instance;

        static Bedarfsanforderung_Rahmen instance = new Bedarfsanforderung_Rahmen();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Bedarfsanforderung_Rahmen()
        {
            Kunde = "200010";
            Artikel1 = "100012";
            Status_W = "W";
            Rahmennummer = "RB2400001";
            Artikel2 = "100035";
            Status_B = "B";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Bedarfsanforderung_Rahmen Instance
        {
            get { return instance; }
        }

#region Variables

        string _Kunde;

        /// <summary>
        /// Gets or sets the value of variable Kunde.
        /// </summary>
        [TestVariable("fbdae301-6f94-4aae-82c1-3a7331d80324")]
        public string Kunde
        {
            get { return _Kunde; }
            set { _Kunde = value; }
        }

        string _Artikel1;

        /// <summary>
        /// Gets or sets the value of variable Artikel1.
        /// </summary>
        [TestVariable("f637db59-e0a3-4720-b688-56f33aa916f9")]
        public string Artikel1
        {
            get { return _Artikel1; }
            set { _Artikel1 = value; }
        }

        string _Status_W;

        /// <summary>
        /// Gets or sets the value of variable Status_W.
        /// </summary>
        [TestVariable("67dd64a5-57d9-48c0-b82c-d70be0e2cc24")]
        public string Status_W
        {
            get { return _Status_W; }
            set { _Status_W = value; }
        }

        string _Rahmennummer;

        /// <summary>
        /// Gets or sets the value of variable Rahmennummer.
        /// </summary>
        [TestVariable("5a79502a-3acf-41b7-8784-fd0e7f936918")]
        public string Rahmennummer
        {
            get { return _Rahmennummer; }
            set { _Rahmennummer = value; }
        }

        string _Artikel2;

        /// <summary>
        /// Gets or sets the value of variable Artikel2.
        /// </summary>
        [TestVariable("27183445-0deb-4fa8-95a0-59b762279738")]
        public string Artikel2
        {
            get { return _Artikel2; }
            set { _Artikel2 = value; }
        }

        string _Status_B;

        /// <summary>
        /// Gets or sets the value of variable Status_B.
        /// </summary>
        [TestVariable("697c78e9-0504-4a69-bcf2-dec4f4c404d9")]
        public string Status_B
        {
            get { return _Status_B; }
            set { _Status_B = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'MdiEInfo.DatumVon' at Center.", repo.MdiEInfo.DatumVonInfo, new RecordItemIndex(0));
            repo.MdiEInfo.DatumVon.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{NumPad0}{NumPad1}{NumPad0}{NumPad3}{NumPad2}{NumPad1}{Tab}' with focus on 'MdiEInfo.DatumVon'.", repo.MdiEInfo.DatumVonInfo, new RecordItemIndex(1));
            repo.MdiEInfo.DatumVon.PressKeys("{NumPad0}{NumPad1}{NumPad0}{NumPad3}{NumPad2}{NumPad1}{Tab}");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Right Click item 'MdiEInfo.TextBis' at Center.", repo.MdiEInfo.TextBisInfo, new RecordItemIndex(2));
            repo.MdiEInfo.TextBis.Click(System.Windows.Forms.MouseButtons.Right);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'EINFO.AktuellesDatum' at Center.", repo.EINFO.AktuellesDatumInfo, new RecordItemIndex(3));
            repo.EINFO.AktuellesDatum.Click();
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'MdiEInfo.PbBak' at Center.", repo.MdiEInfo.PbBakInfo, new RecordItemIndex(4));
            repo.MdiEInfo.PbBak.Click();
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Status_W) on item 'MdiEInfo.FlexGrid.ColBakStatusRow1'.", repo.MdiEInfo.FlexGrid.ColBakStatusRow1Info, new RecordItemIndex(5));
            Validate.AttributeEqual(repo.MdiEInfo.FlexGrid.ColBakStatusRow1Info, "Text", Status_W);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Kunde) on item 'MdiEInfo.FlexGrid.ColAdrNrKundeRow1'.", repo.MdiEInfo.FlexGrid.ColAdrNrKundeRow1Info, new RecordItemIndex(6));
            Validate.AttributeEqual(repo.MdiEInfo.FlexGrid.ColAdrNrKundeRow1Info, "Text", Kunde);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left DoubleClick item 'MdiEInfo.FlexGrid.Row1Column0' at Center.", repo.MdiEInfo.FlexGrid.Row1Column0Info, new RecordItemIndex(7));
            repo.MdiEInfo.FlexGrid.Row1Column0.DoubleClick();
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (Text>'Bedarfsanforderungspositionen') on item 'MdiEInfo.TitleBar100EinkaufsInfo'.", repo.MdiEInfo.TitleBar100EinkaufsInfoInfo, new RecordItemIndex(8));
            Validate.AttributeContains(repo.MdiEInfo.TitleBar100EinkaufsInfoInfo, "Text", "Bedarfsanforderungspositionen");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Artikel1) on item 'MdiEInfo.FlexGrid1.ColArtNrRow1'.", repo.MdiEInfo.FlexGrid1.ColArtNrRow1Info, new RecordItemIndex(9));
            Validate.AttributeEqual(repo.MdiEInfo.FlexGrid1.ColArtNrRow1Info, "Text", Artikel1);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Status_B) on item 'MdiEInfo.FlexGrid1.ColBapStatusRow1'.", repo.MdiEInfo.FlexGrid1.ColBapStatusRow1Info, new RecordItemIndex(10));
            Validate.AttributeEqual(repo.MdiEInfo.FlexGrid1.ColBapStatusRow1Info, "Text", Status_B);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='3,00') on item 'MdiEInfo.FlexGrid1.ColBapMengeRow1'.", repo.MdiEInfo.FlexGrid1.ColBapMengeRow1Info, new RecordItemIndex(11));
            Validate.AttributeEqual(repo.MdiEInfo.FlexGrid1.ColBapMengeRow1Info, "Text", "3,00");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left DoubleClick item 'MdiEInfo.FlexGrid1.Row1Column01' at Center.", repo.MdiEInfo.FlexGrid1.Row1Column01Info, new RecordItemIndex(12));
            repo.MdiEInfo.FlexGrid1.Row1Column01.DoubleClick();
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (Text>'Bestellpositionen') on item 'MdiEInfo.TitleBar100EinkaufsInfo'.", repo.MdiEInfo.TitleBar100EinkaufsInfoInfo, new RecordItemIndex(13));
            Validate.AttributeContains(repo.MdiEInfo.TitleBar100EinkaufsInfoInfo, "Text", "Bestellpositionen");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'MdiEInfo.RahmenNr' at Center.", repo.MdiEInfo.RahmenNrInfo, new RecordItemIndex(14));
            repo.MdiEInfo.RahmenNr.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{LShiftKey down}%{LShiftKey up}1' with focus on 'MdiEInfo.RahmenNr'.", repo.MdiEInfo.RahmenNrInfo, new RecordItemIndex(15));
            repo.MdiEInfo.RahmenNr.PressKeys("{LShiftKey down}%{LShiftKey up}1");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Tab}' with focus on 'MdiEInfo.RahmenNr'.", repo.MdiEInfo.RahmenNrInfo, new RecordItemIndex(16));
            repo.MdiEInfo.RahmenNr.PressKeys("{Tab}");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'MdiEInfo.PbAbrufpos' at Center.", repo.MdiEInfo.PbAbrufposInfo, new RecordItemIndex(17));
            repo.MdiEInfo.PbAbrufpos.Click();
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Rahmennummer) on item 'MdiEInfo.ChildTableWindow.ColAbrkNrRow11'.", repo.MdiEInfo.ChildTableWindow.ColAbrkNrRow11Info, new RecordItemIndex(18));
            Validate.AttributeEqual(repo.MdiEInfo.ChildTableWindow.ColAbrkNrRow11Info, "Text", Rahmennummer);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Artikel2) on item 'MdiEInfo.ChildTableWindow.ColArtNrRow1'.", repo.MdiEInfo.ChildTableWindow.ColArtNrRow1Info, new RecordItemIndex(19));
            Validate.AttributeEqual(repo.MdiEInfo.ChildTableWindow.ColArtNrRow1Info, "Text", Artikel2);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='15,00') on item 'MdiEInfo.ChildTableWindow.ColAbrpMengeRow1'.", repo.MdiEInfo.ChildTableWindow.ColAbrpMengeRow1Info, new RecordItemIndex(20));
            Validate.AttributeEqual(repo.MdiEInfo.ChildTableWindow.ColAbrpMengeRow1Info, "Text", "15,00");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='16,00') on item 'MdiEInfo.ChildTableWindow.ColAbrpMaximalRow1'.", repo.MdiEInfo.ChildTableWindow.ColAbrpMaximalRow1Info, new RecordItemIndex(21));
            Validate.AttributeEqual(repo.MdiEInfo.ChildTableWindow.ColAbrpMaximalRow1Info, "Text", "16,00");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='4,00') on item 'MdiEInfo.ChildTableWindow.ColAbrpMeldeRow1'.", repo.MdiEInfo.ChildTableWindow.ColAbrpMeldeRow1Info, new RecordItemIndex(22));
            Validate.AttributeEqual(repo.MdiEInfo.ChildTableWindow.ColAbrpMeldeRow1Info, "Text", "4,00");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='0,00') on item 'MdiEInfo.ChildTableWindow.ColAbrpGeliefertRow1'.", repo.MdiEInfo.ChildTableWindow.ColAbrpGeliefertRow1Info, new RecordItemIndex(23));
            Validate.AttributeEqual(repo.MdiEInfo.ChildTableWindow.ColAbrpGeliefertRow1Info, "Text", "0,00");
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
