///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace E_BSST_001.Recordings
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Bestellungen_stornieren recording.
    /// </summary>
    [TestModule("deaebe47-8192-4291-8573-ce09af7b4ac8", ModuleType.Recording, 1)]
    public partial class Bestellungen_stornieren : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::E_BSST_001.E_BSST_001Repository repository.
        /// </summary>
        public static global::E_BSST_001.E_BSST_001Repository repo = global::E_BSST_001.E_BSST_001Repository.Instance;

        static Bestellungen_stornieren instance = new Bestellungen_stornieren();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Bestellungen_stornieren()
        {
            Bestellung_E2 = "BS21/00006";
            Bestellung_L = "BS21/00008";
            Artikel1 = "100027";
            Status_L = "L";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Bestellungen_stornieren Instance
        {
            get { return instance; }
        }

#region Variables

        string _Bestellung_E2;

        /// <summary>
        /// Gets or sets the value of variable Bestellung_E2.
        /// </summary>
        [TestVariable("d2073472-ad3a-4a7a-948b-5f71e7b7d461")]
        public string Bestellung_E2
        {
            get { return _Bestellung_E2; }
            set { _Bestellung_E2 = value; }
        }

        string _Bestellung_L;

        /// <summary>
        /// Gets or sets the value of variable Bestellung_L.
        /// </summary>
        [TestVariable("37d02293-3262-40b2-b632-db13326c3493")]
        public string Bestellung_L
        {
            get { return _Bestellung_L; }
            set { _Bestellung_L = value; }
        }

        string _Artikel1;

        /// <summary>
        /// Gets or sets the value of variable Artikel1.
        /// </summary>
        [TestVariable("cea87506-ba28-4bb9-9def-786fe135df90")]
        public string Artikel1
        {
            get { return _Artikel1; }
            set { _Artikel1 = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable Status_L.
        /// </summary>
        [TestVariable("9b85b5c3-41ee-4c3f-84ca-c6ce759582b9")]
        public string Status_L
        {
            get { return repo.Status_L; }
            set { repo.Status_L = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual ($Bestellung_E2='(null)') on item 'TblBsst.FlexGrid.ColBskNrRow11'.", repo.TblBsst.FlexGrid.ColBskNrRow11Info, new RecordItemIndex(0));
            Validate.AttributeEqual(repo.TblBsst.FlexGrid.ColBskNrRow11Info, Bestellung_E2, (string)null);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'TblBsst.FlexGrid.Row11Column0' at Center.", repo.TblBsst.FlexGrid.Row11Column0Info, new RecordItemIndex(1));
            repo.TblBsst.FlexGrid.Row11Column0.Click();
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'TblBsst.PbCommonStornieren' at Center.", repo.TblBsst.PbCommonStornierenInfo, new RecordItemIndex(2));
            repo.TblBsst.PbCommonStornieren.Click();
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (Text>'soll der Kopf gelöscht werden?') on item 'DlgMessageBox.LabelMeldungstext'.", repo.DlgMessageBox.LabelMeldungstextInfo, new RecordItemIndex(3));
            Validate.AttributeContains(repo.DlgMessageBox.LabelMeldungstextInfo, "Text", "soll der Kopf gelöscht werden?");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'DlgMessageBox.Button0' at Center.", repo.DlgMessageBox.Button0Info, new RecordItemIndex(4));
            repo.DlgMessageBox.Button0.Click();
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'TblBsst.PbDataAccessLoad' at Center.", repo.TblBsst.PbDataAccessLoadInfo, new RecordItemIndex(5));
            repo.TblBsst.PbDataAccessLoad.Click();
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (Text>'Wollen Sie wirklich ALLE offenen Bestellungen anzeigen?') on item 'DlgMessageBox.LabelMeldungstext'.", repo.DlgMessageBox.LabelMeldungstextInfo, new RecordItemIndex(6));
            Validate.AttributeContains(repo.DlgMessageBox.LabelMeldungstextInfo, "Text", "Wollen Sie wirklich ALLE offenen Bestellungen anzeigen?");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'DlgMessageBox.Button0' at Center.", repo.DlgMessageBox.Button0Info, new RecordItemIndex(7));
            repo.DlgMessageBox.Button0.Click();
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeNotEqual (Text!=$Bestellung_E2) on item 'TblBsst.FlexGrid.ColBskNrRow11'.", repo.TblBsst.FlexGrid.ColBskNrRow11Info, new RecordItemIndex(8));
            Validate.AttributeNotEqual(repo.TblBsst.FlexGrid.ColBskNrRow11Info, "Text", Bestellung_E2);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'TblBsst.Text1' at Center.", repo.TblBsst.Text1Info, new RecordItemIndex(9));
            repo.TblBsst.Text1.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Bestellung_L' with focus on 'TblBsst.Text1'.", repo.TblBsst.Text1Info, new RecordItemIndex(10));
            repo.TblBsst.Text1.PressKeys(Bestellung_L);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Tab}' with focus on 'TblBsst.Text1'.", repo.TblBsst.Text1Info, new RecordItemIndex(11));
            repo.TblBsst.Text1.PressKeys("{Tab}");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'TblBsst.PbDataAccessLoad' at Center.", repo.TblBsst.PbDataAccessLoadInfo, new RecordItemIndex(12));
            repo.TblBsst.PbDataAccessLoad.Click();
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Artikel1) on item 'TblBsst.FlexGrid.ColArtNrRow1'.", repo.TblBsst.FlexGrid.ColArtNrRow1Info, new RecordItemIndex(13));
            Validate.AttributeEqual(repo.TblBsst.FlexGrid.ColArtNrRow1Info, "Text", Artikel1);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Status_L) on item 'TblBsst.FlexGrid.ColBspStatusRow1'.", repo.TblBsst.FlexGrid.ColBspStatusRow1Info, new RecordItemIndex(14));
            Validate.AttributeEqual(repo.TblBsst.FlexGrid.ColBspStatusRow1Info, "Text", Status_L);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='10,00') on item 'TblBsst.FlexGrid.ColBspMengeRow1'.", repo.TblBsst.FlexGrid.ColBspMengeRow1Info, new RecordItemIndex(15));
            Validate.AttributeEqual(repo.TblBsst.FlexGrid.ColBspMengeRow1Info, "Text", "10,00");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='8,00') on item 'TblBsst.FlexGrid.ColBspGeliefertRow11'.", repo.TblBsst.FlexGrid.ColBspGeliefertRow11Info, new RecordItemIndex(16));
            Validate.AttributeEqual(repo.TblBsst.FlexGrid.ColBspGeliefertRow11Info, "Text", "8,00");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'TblBsst.FlexGrid.Row1Column0' at Center.", repo.TblBsst.FlexGrid.Row1Column0Info, new RecordItemIndex(17));
            repo.TblBsst.FlexGrid.Row1Column0.Click();
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'TblBsst.PbCommonStornieren' at Center.", repo.TblBsst.PbCommonStornierenInfo, new RecordItemIndex(18));
            repo.TblBsst.PbCommonStornieren.Click();
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'TblBsst.PbDataAccessLoad' at Center.", repo.TblBsst.PbDataAccessLoadInfo, new RecordItemIndex(19));
            repo.TblBsst.PbDataAccessLoad.Click();
            
            Report.Log(ReportLevel.Info, "Validation", "Validating NotExists on item 'TblBsst.FlexGrid.Row1Column0'.", repo.TblBsst.FlexGrid.Row1Column0Info, new RecordItemIndex(20));
            Validate.NotExists(repo.TblBsst.FlexGrid.Row1Column0Info);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
