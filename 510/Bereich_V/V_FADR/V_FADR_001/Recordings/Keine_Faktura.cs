///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace V_FADR_001.Recordings
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Keine_Faktura recording.
    /// </summary>
    [TestModule("fdc92c81-6319-4009-bac2-6fa60c8bfa3d", ModuleType.Recording, 1)]
    public partial class Keine_Faktura : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::V_FADR_001.V_FADR_001Repository repository.
        /// </summary>
        public static global::V_FADR_001.V_FADR_001Repository repo = global::V_FADR_001.V_FADR_001Repository.Instance;

        static Keine_Faktura instance = new Keine_Faktura();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Keine_Faktura()
        {
            Auftragsnummer = "201900005";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Keine_Faktura Instance
        {
            get { return instance; }
        }

#region Variables

        /// <summary>
        /// Gets or sets the value of variable Auftragsnummer.
        /// </summary>
        [TestVariable("e0ee1f09-50e3-48fe-ad57-57aca3877ff7")]
        public string Auftragsnummer
        {
            get { return repo.Auftragsnummer; }
            set { repo.Auftragsnummer = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'TblFadr.PbSpec3Extras' at Center.", repo.TblFadr.PbSpec3ExtrasInfo, new RecordItemIndex(0));
            repo.TblFadr.PbSpec3Extras.Click();
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'VFADR.WarumWirdAuftragNichtFakturiert' at Center.", repo.VFADR.WarumWirdAuftragNichtFakturiertInfo, new RecordItemIndex(1));
            repo.VFADR.WarumWirdAuftragNichtFakturiert.Click();
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 3m to exist. Associated repository item: 'DlgKeineFaktura.TitleBar100WarumWirdEinBestimmter'", repo.DlgKeineFaktura.TitleBar100WarumWirdEinBestimmterInfo, new ActionTimeout(180000), new RecordItemIndex(2));
            repo.DlgKeineFaktura.TitleBar100WarumWirdEinBestimmterInfo.WaitForExists(180000);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'DlgKeineFaktura.Auftragsnummer' at Center.", repo.DlgKeineFaktura.AuftragsnummerInfo, new RecordItemIndex(3));
            repo.DlgKeineFaktura.Auftragsnummer.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{LControlKey down}{Akey}{LControlKey up}{Delete}' with focus on 'DlgKeineFaktura.Auftragsnummer'.", repo.DlgKeineFaktura.AuftragsnummerInfo, new RecordItemIndex(4));
            repo.DlgKeineFaktura.Auftragsnummer.PressKeys("{LControlKey down}{Akey}{LControlKey up}{Delete}");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Auftragsnummer' with focus on 'DlgKeineFaktura.Auftragsnummer'.", repo.DlgKeineFaktura.AuftragsnummerInfo, new RecordItemIndex(5));
            repo.DlgKeineFaktura.Auftragsnummer.PressKeys(Auftragsnummer);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Auftragsnummer) on item 'DlgKeineFaktura.Auftragsnummer'.", repo.DlgKeineFaktura.AuftragsnummerInfo, new RecordItemIndex(6));
            Validate.AttributeEqual(repo.DlgKeineFaktura.AuftragsnummerInfo, "Text", Auftragsnummer);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'DlgKeineFaktura.PbPruefen' at Center.", repo.DlgKeineFaktura.PbPruefenInfo, new RecordItemIndex(7));
            repo.DlgKeineFaktura.PbPruefen.Click();
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'DlgKeineFaktura.PbPruefen' at Center.", repo.DlgKeineFaktura.PbPruefenInfo, new RecordItemIndex(8));
            //repo.DlgKeineFaktura.PbPruefen.Click();
            
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeEqual (Text='Einschränkung Rechnungsart ist nicht korrekt') on item 'DlgKeineFaktura.ColAktionRow1'.", repo.DlgKeineFaktura.ColAktionRow1Info, new RecordItemIndex(9));
                Validate.AttributeEqual(repo.DlgKeineFaktura.ColAktionRow1Info, "Text", "Einschränkung Rechnungsart ist nicht korrekt", null, false);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(9)); }
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'DlgKeineFaktura.Schliessen' at Center.", repo.DlgKeineFaktura.SchliessenInfo, new RecordItemIndex(10));
            repo.DlgKeineFaktura.Schliessen.Click();
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
