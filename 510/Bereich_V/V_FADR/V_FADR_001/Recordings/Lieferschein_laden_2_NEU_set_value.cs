///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace V_FADR_001.Recordings
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Lieferschein_laden_2_NEU_set_value recording.
    /// </summary>
    [TestModule("407d8d6e-4837-42ce-8870-bf4fa7ec7350", ModuleType.Recording, 1)]
    public partial class Lieferschein_laden_2_NEU_set_value : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::V_FADR_001.V_FADR_001Repository repository.
        /// </summary>
        public static global::V_FADR_001.V_FADR_001Repository repo = global::V_FADR_001.V_FADR_001Repository.Instance;

        static Lieferschein_laden_2_NEU_set_value instance = new Lieferschein_laden_2_NEU_set_value();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Lieferschein_laden_2_NEU_set_value()
        {
            Tagesdatum = "";
            Datum_leer = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Lieferschein_laden_2_NEU_set_value Instance
        {
            get { return instance; }
        }

#region Variables

        string _Datum_leer;

        /// <summary>
        /// Gets or sets the value of variable Datum_leer.
        /// </summary>
        [TestVariable("77d9b652-685a-4a73-a0f8-3bc1cce155b6")]
        public string Datum_leer
        {
            get { return _Datum_leer; }
            set { _Datum_leer = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable Tagesdatum.
        /// </summary>
        [TestVariable("cf859522-e311-42c3-b39d-a6e4b47e8dd5")]
        public string Tagesdatum
        {
            get { return repo.Tagesdatum; }
            set { repo.Tagesdatum = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Tagesdatum = Ranorex.AutomationHelpers.UserCodeCollections.SystemLibrary.GetDateTimeAsString("dd.MM.yyyy");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Tagesdatum) on item 'TblFadr.tblRechArt_Pfad_verkuerzt.ColLskDatumRow1'.", repo.TblFadr.tblRechArt_Pfad_verkuerzt.ColLskDatumRow1Info, new RecordItemIndex(1));
            Validate.AttributeEqual(repo.TblFadr.tblRechArt_Pfad_verkuerzt.ColLskDatumRow1Info, "Text", Tagesdatum);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='') on item 'TblFadr.tblRechArt_Pfad_verkuerzt.ColLskDatumRow2'.", repo.TblFadr.tblRechArt_Pfad_verkuerzt.ColLskDatumRow2Info, new RecordItemIndex(2));
            Validate.AttributeEqual(repo.TblFadr.tblRechArt_Pfad_verkuerzt.ColLskDatumRow2Info, "Text", "");
            
            // LS-Datum in Zeile 1 löschen
            Report.Log(ReportLevel.Info, "Section", "LS-Datum in Zeile 1 löschen", new RecordItemIndex(3));
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'TblFadr.tblRechArt_Pfad_verkuerzt.colRechartRow1' at Center.", repo.TblFadr.tblRechArt_Pfad_verkuerzt.colRechartRow1Info, new RecordItemIndex(4));
            repo.TblFadr.tblRechArt_Pfad_verkuerzt.colRechartRow1.Click();
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 3s.", new RecordItemIndex(5));
            Delay.Duration(3000, false);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Tab' Press.", new RecordItemIndex(6));
            Keyboard.Press(System.Windows.Forms.Keys.Tab, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 3s.", new RecordItemIndex(7));
            Delay.Duration(3000, false);
            
            Report.Screenshot(ReportLevel.Info, "User", "", null, false, new RecordItemIndex(8));
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute AccessibleValue to '$Datum_leer' on item 'TblFadr.tblRechArt_Pfad_verkuerzt.ColLskDatumRow1'.", repo.TblFadr.tblRechArt_Pfad_verkuerzt.ColLskDatumRow1Info, new RecordItemIndex(9));
            repo.TblFadr.tblRechArt_Pfad_verkuerzt.ColLskDatumRow1.Element.SetAttributeValue("AccessibleValue", Datum_leer);
            
            Report.Screenshot(ReportLevel.Info, "User", "", null, false, new RecordItemIndex(10));
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Tab' Press.", new RecordItemIndex(11));
            Keyboard.Press(System.Windows.Forms.Keys.Tab, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 3s.", new RecordItemIndex(12));
            Delay.Duration(3000, false);
            
            Report.Screenshot(ReportLevel.Info, "User", "", null, false, new RecordItemIndex(13));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Datum_leer) on item 'TblFadr.tblRechArt_Pfad_verkuerzt.ColLskDatumRow1'.", repo.TblFadr.tblRechArt_Pfad_verkuerzt.ColLskDatumRow1Info, new RecordItemIndex(14));
            Validate.AttributeEqual(repo.TblFadr.tblRechArt_Pfad_verkuerzt.ColLskDatumRow1Info, "Text", Datum_leer);
            
            // Tagesdatum in Zeile 2 LS-Datum einfügen
            Report.Log(ReportLevel.Info, "Section", "Tagesdatum in Zeile 2 LS-Datum einfügen", new RecordItemIndex(15));
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'TblFadr.tblRechArt_Pfad_verkuerzt.colRechartRow2' at Center.", repo.TblFadr.tblRechArt_Pfad_verkuerzt.colRechartRow2Info, new RecordItemIndex(16));
            repo.TblFadr.tblRechArt_Pfad_verkuerzt.colRechartRow2.Click();
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 3s.", new RecordItemIndex(17));
            Delay.Duration(3000, false);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Tab' Press.", new RecordItemIndex(18));
            Keyboard.Press(System.Windows.Forms.Keys.Tab, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 3s.", new RecordItemIndex(19));
            Delay.Duration(3000, false);
            
            Report.Screenshot(ReportLevel.Info, "User", "", null, false, new RecordItemIndex(20));
            
            Tagesdatum = Ranorex.AutomationHelpers.UserCodeCollections.SystemLibrary.GetDateTimeAsString("dd.MM.yyyy");
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute AccessibleValue to '$Tagesdatum' on item 'TblFadr.tblRechArt_Pfad_verkuerzt.ColLskDatumRow2'.", repo.TblFadr.tblRechArt_Pfad_verkuerzt.ColLskDatumRow2Info, new RecordItemIndex(22));
            repo.TblFadr.tblRechArt_Pfad_verkuerzt.ColLskDatumRow2.Element.SetAttributeValue("AccessibleValue", Tagesdatum);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Tab' Press.", new RecordItemIndex(23));
            Keyboard.Press(System.Windows.Forms.Keys.Tab, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 3s.", new RecordItemIndex(24));
            Delay.Duration(3000, false);
            
            Report.Screenshot(ReportLevel.Info, "User", "", null, false, new RecordItemIndex(25));
            
            // Prüfen: LS-Datum Zeile 1 leer, Zeile 2 Tagesdatum
            Report.Log(ReportLevel.Info, "Section", "Prüfen: LS-Datum Zeile 1 leer, Zeile 2 Tagesdatum", new RecordItemIndex(26));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='') on item 'TblFadr.tblRechArt_Pfad_verkuerzt.ColLskDatumRow1'.", repo.TblFadr.tblRechArt_Pfad_verkuerzt.ColLskDatumRow1Info, new RecordItemIndex(27));
            Validate.AttributeEqual(repo.TblFadr.tblRechArt_Pfad_verkuerzt.ColLskDatumRow1Info, "Text", "");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Tagesdatum) on item 'TblFadr.tblRechArt_Pfad_verkuerzt.ColLskDatumRow2'.", repo.TblFadr.tblRechArt_Pfad_verkuerzt.ColLskDatumRow2Info, new RecordItemIndex(28));
            Validate.AttributeEqual(repo.TblFadr.tblRechArt_Pfad_verkuerzt.ColLskDatumRow2Info, "Text", Tagesdatum);
            
            // Laden + Meldung prüfen
            Report.Log(ReportLevel.Info, "Section", "Laden + Meldung prüfen", new RecordItemIndex(29));
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'TblFadr.PbCommonLoad' at Center.", repo.TblFadr.PbCommonLoadInfo, new RecordItemIndex(30));
            repo.TblFadr.PbCommonLoad.Click();
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 2m to exist. Associated repository item: 'DlgMessageBox.LabelMeldungstext'", repo.DlgMessageBox.LabelMeldungstextInfo, new ActionTimeout(120000), new RecordItemIndex(31));
            repo.DlgMessageBox.LabelMeldungstextInfo.WaitForExists(120000);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='Es wurden keine Lieferscheine gefunden die zur Belegerstellung berechtigt sind.\r\nNähere Information unter Menu/Extras/Warum wird Auftrag nicht fakturiert') on item 'DlgMessageBox.LabelMeldungstext'.", repo.DlgMessageBox.LabelMeldungstextInfo, new RecordItemIndex(32));
            Validate.AttributeEqual(repo.DlgMessageBox.LabelMeldungstextInfo, "Text", "Es wurden keine Lieferscheine gefunden die zur Belegerstellung berechtigt sind.\r\nNähere Information unter Menu/Extras/Warum wird Auftrag nicht fakturiert");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'DlgMessageBox.Button0' at Center.", repo.DlgMessageBox.Button0Info, new RecordItemIndex(33));
            repo.DlgMessageBox.Button0.Click();
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
