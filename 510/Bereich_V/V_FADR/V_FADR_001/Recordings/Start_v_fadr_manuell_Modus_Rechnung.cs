///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace V_FADR_001.Recordings
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Start_v_fadr_manuell_Modus_Rechnung recording.
    /// </summary>
    [TestModule("11a6ad4f-de2d-47f0-bff2-575571044d48", ModuleType.Recording, 1)]
    public partial class Start_v_fadr_manuell_Modus_Rechnung : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::V_FADR_001.V_FADR_001Repository repository.
        /// </summary>
        public static global::V_FADR_001.V_FADR_001Repository repo = global::V_FADR_001.V_FADR_001Repository.Instance;

        static Start_v_fadr_manuell_Modus_Rechnung instance = new Start_v_fadr_manuell_Modus_Rechnung();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Start_v_fadr_manuell_Modus_Rechnung()
        {
            Startfile = "c:\\Testdaten\\Allgemein\\Start.bat";
            Programm = "V_FADR";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Start_v_fadr_manuell_Modus_Rechnung Instance
        {
            get { return instance; }
        }

#region Variables

        string _Startfile;

        /// <summary>
        /// Gets or sets the value of variable Startfile.
        /// </summary>
        [TestVariable("035a968c-5933-4f34-a083-0920ab5da0a3")]
        public string Startfile
        {
            get { return _Startfile; }
            set { _Startfile = value; }
        }

        string _Programm;

        /// <summary>
        /// Gets or sets the value of variable Programm.
        /// </summary>
        [TestVariable("a92d26e4-7265-4e8b-a1df-815c8bf4b1cf")]
        public string Programm
        {
            get { return _Programm; }
            set { _Programm = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Application", "Run application with file name from variable $Startfile with arguments from variable $Programm in normal mode.", new RecordItemIndex(0));
            Host.Local.RunApplication(Startfile, Programm, "", false);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 5m to exist. Associated repository item: 'TblFadr.TitleBar100Fakturierung'", repo.TblFadr.TitleBar100FakturierungInfo, new ActionTimeout(300000), new RecordItemIndex(1));
            repo.TblFadr.TitleBar100FakturierungInfo.WaitForExists(300000);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (Text>'Auftragsbestätigung') on item 'TblFadr.TitleBar100Fakturierung'.", repo.TblFadr.TitleBar100FakturierungInfo, new RecordItemIndex(2));
            Validate.AttributeContains(repo.TblFadr.TitleBar100FakturierungInfo, "Text", "Auftragsbestätigung");
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 2m to not exist. Associated repository item: 'TblFadr.TitleBar100Fakturierung_mit_Text_keine_Rueckmeldung'", repo.TblFadr.TitleBar100Fakturierung_mit_Text_keine_RueckmeldungInfo, new ActionTimeout(120000), new RecordItemIndex(3));
            repo.TblFadr.TitleBar100Fakturierung_mit_Text_keine_RueckmeldungInfo.WaitForNotExists(120000);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'TblFadr.PbSpec1Modus' at Center.", repo.TblFadr.PbSpec1ModusInfo, new RecordItemIndex(4));
            repo.TblFadr.PbSpec1Modus.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'R'.", new RecordItemIndex(5));
            Keyboard.Press("R");
            
            //Report.Log(ReportLevel.Info, "Wait", "Waiting 1m to exist. Associated repository item: 'VFADR.Rechnung'", repo.VFADR.RechnungInfo, new ActionTimeout(60000), new RecordItemIndex(6));
            //repo.VFADR.RechnungInfo.WaitForExists(60000);
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'VFADR.Rechnung' at Center.", repo.VFADR.RechnungInfo, new RecordItemIndex(7));
            //repo.VFADR.Rechnung.Click();
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 1m to exist. Associated repository item: 'TblFadr.TitleBar100Fakturierung_mit_Text_Fakturierung'", repo.TblFadr.TitleBar100Fakturierung_mit_Text_FakturierungInfo, new ActionTimeout(60000), new RecordItemIndex(8));
            repo.TblFadr.TitleBar100Fakturierung_mit_Text_FakturierungInfo.WaitForExists(60000);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (Text>'Fakturierung') on item 'TblFadr.TitleBar100Fakturierung'.", repo.TblFadr.TitleBar100FakturierungInfo, new RecordItemIndex(9));
            Validate.AttributeContains(repo.TblFadr.TitleBar100FakturierungInfo, "Text", "Fakturierung");
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
