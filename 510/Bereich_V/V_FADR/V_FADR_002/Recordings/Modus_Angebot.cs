///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace V_FADR_002.Recordings
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Modus_Angebot recording.
    /// </summary>
    [TestModule("5c37dd3b-8098-4f2b-ae8d-6749efefced9", ModuleType.Recording, 1)]
    public partial class Modus_Angebot : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::V_FADR_002.V_FADR_002Repository repository.
        /// </summary>
        public static global::V_FADR_002.V_FADR_002Repository repo = global::V_FADR_002.V_FADR_002Repository.Instance;

        static Modus_Angebot instance = new Modus_Angebot();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Modus_Angebot()
        {
            Modus_AG = "AG21/00001";
            Microsoft_print_to_PDF = "Microsoft Print to PDF";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Modus_Angebot Instance
        {
            get { return instance; }
        }

#region Variables

        string _Modus_AG;

        /// <summary>
        /// Gets or sets the value of variable Modus_AG.
        /// </summary>
        [TestVariable("2ec24940-269f-4524-bebb-6777ba1692ee")]
        public string Modus_AG
        {
            get { return _Modus_AG; }
            set { _Modus_AG = value; }
        }

        string _Microsoft_print_to_PDF;

        /// <summary>
        /// Gets or sets the value of variable Microsoft_print_to_PDF.
        /// </summary>
        [TestVariable("fdbbbd2e-2718-4fab-8ec8-d4dede74d7b5")]
        public string Microsoft_print_to_PDF
        {
            get { return _Microsoft_print_to_PDF; }
            set { _Microsoft_print_to_PDF = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Buttons.Modus' at Center.", repo.Buttons.ModusInfo, new RecordItemIndex(0));
            repo.Buttons.Modus.Click();
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Moduswechsel.Angebot' at Center.", repo.Moduswechsel.AngebotInfo, new RecordItemIndex(1));
            repo.Moduswechsel.Angebot.Click();
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Titelbar.TblFadr.Auftrag' at Center.", repo.Titelbar.TblFadr.AuftragInfo, new RecordItemIndex(2));
            repo.Titelbar.TblFadr.Auftrag.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Modus_AG' with focus on 'Titelbar.TblFadr.Auftrag'.", repo.Titelbar.TblFadr.AuftragInfo, new RecordItemIndex(3));
            repo.Titelbar.TblFadr.Auftrag.PressKeys(Modus_AG);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Buttons.Laden' at Center.", repo.Buttons.LadenInfo, new RecordItemIndex(4));
            repo.Buttons.Laden.Click();
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Modus_AG) on item 'Titelbar.TblFadr.AG21_00001'.", repo.Titelbar.TblFadr.AG21_00001Info, new RecordItemIndex(5));
            Validate.AttributeEqual(repo.Titelbar.TblFadr.AG21_00001Info, "Text", Modus_AG);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Buttons.Drucken' at Center.", repo.Buttons.DruckenInfo, new RecordItemIndex(6));
            repo.Buttons.Drucken.Click();
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (Text>$Microsoft_print_to_PDF) on item 'DlgDrucken.Microsoft_Print_to_PDF'.", repo.DlgDrucken.Microsoft_Print_to_PDFInfo, new RecordItemIndex(7));
            Validate.AttributeContains(repo.DlgDrucken.Microsoft_Print_to_PDFInfo, "Text", Microsoft_print_to_PDF);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 30s to exist. Associated repository item: 'DlgDrucken.Button_Vorschau'", repo.DlgDrucken.Button_VorschauInfo, new ActionTimeout(30000), new RecordItemIndex(8));
            repo.DlgDrucken.Button_VorschauInfo.WaitForExists(30000);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'DlgDrucken.Button_Vorschau' at Center.", repo.DlgDrucken.Button_VorschauInfo, new RecordItemIndex(9));
            repo.DlgDrucken.Button_Vorschau.Click();
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 30s to exist. Associated repository item: 'Vorschau.TitleBar'", repo.Vorschau.TitleBarInfo, new ActionTimeout(30000), new RecordItemIndex(10));
            repo.Vorschau.TitleBarInfo.WaitForExists(30000);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (Visible>'True') on item 'Vorschau.Vorschau_Dokument'.", repo.Vorschau.Vorschau_DokumentInfo, new RecordItemIndex(11));
            Validate.AttributeContains(repo.Vorschau.Vorschau_DokumentInfo, "Visible", "True");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Vorschau.Vorschau_beenden' at Center.", repo.Vorschau.Vorschau_beendenInfo, new RecordItemIndex(12));
            repo.Vorschau.Vorschau_beenden.Click();
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'DlgDrucken.Button_Schliessen' at Center.", repo.DlgDrucken.Button_SchliessenInfo, new RecordItemIndex(13));
            repo.DlgDrucken.Button_Schliessen.Click();
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Buttons.Laden' at Center.", repo.Buttons.LadenInfo, new RecordItemIndex(14));
            repo.Buttons.Laden.Click();
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Buttons.Wiederholdruck' at Center.", repo.Buttons.WiederholdruckInfo, new RecordItemIndex(15));
            repo.Buttons.Wiederholdruck.Click();
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Buttons.Laden' at Center.", repo.Buttons.LadenInfo, new RecordItemIndex(16));
            repo.Buttons.Laden.Click();
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'ControlText' from item 'Titelbar.TblFadr.MainGrid' and assigning its value to variable 'Modus_AG'.", repo.Titelbar.TblFadr.MainGridInfo, new RecordItemIndex(17));
            Modus_AG = repo.Titelbar.TblFadr.MainGrid.Element.GetAttributeValueText("ControlText");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Titelbar.TblFadr.Auftrag' at Center.", repo.Titelbar.TblFadr.AuftragInfo, new RecordItemIndex(18));
            repo.Titelbar.TblFadr.Auftrag.Click();
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left DoubleClick item 'Titelbar.TblFadr.Auftrag' at Center.", repo.Titelbar.TblFadr.AuftragInfo, new RecordItemIndex(19));
            repo.Titelbar.TblFadr.Auftrag.DoubleClick();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Delete}' with focus on 'Titelbar.TblFadr.Auftrag'.", repo.Titelbar.TblFadr.AuftragInfo, new RecordItemIndex(20));
            repo.Titelbar.TblFadr.Auftrag.PressKeys("{Delete}");
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
