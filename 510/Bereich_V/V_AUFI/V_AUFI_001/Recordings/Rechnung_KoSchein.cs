///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace V_AUFI_001.Recordings
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Rechnung_KoSchein recording.
    /// </summary>
    [TestModule("0e1ee5a8-5a5b-4709-b5ce-9c2f0826af13", ModuleType.Recording, 1)]
    public partial class Rechnung_KoSchein : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::V_AUFI_001.V_AUFI_001Repository repository.
        /// </summary>
        public static global::V_AUFI_001.V_AUFI_001Repository repo = global::V_AUFI_001.V_AUFI_001Repository.Instance;

        static Rechnung_KoSchein instance = new Rechnung_KoSchein();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Rechnung_KoSchein()
        {
            Recording2_Aufknr = "A21/00001";
            Recording2_Rechnr = "R21/00001";
            Recording2_Kmsknr = "KO21/00002";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Rechnung_KoSchein Instance
        {
            get { return instance; }
        }

#region Variables

        string _Recording2_Aufknr;

        /// <summary>
        /// Gets or sets the value of variable Recording2_Aufknr.
        /// </summary>
        [TestVariable("4fe27cda-69d7-45e2-8188-ad674111bb24")]
        public string Recording2_Aufknr
        {
            get { return _Recording2_Aufknr; }
            set { _Recording2_Aufknr = value; }
        }

        string _Recording2_Rechnr;

        /// <summary>
        /// Gets or sets the value of variable Recording2_Rechnr.
        /// </summary>
        [TestVariable("05dfc2f6-2134-4d70-9903-0384e7faa972")]
        public string Recording2_Rechnr
        {
            get { return _Recording2_Rechnr; }
            set { _Recording2_Rechnr = value; }
        }

        string _Recording2_Kmsknr;

        /// <summary>
        /// Gets or sets the value of variable Recording2_Kmsknr.
        /// </summary>
        [TestVariable("1fbf463b-dcd9-4ee6-9039-1987f20509df")]
        public string Recording2_Kmsknr
        {
            get { return _Recording2_Kmsknr; }
            set { _Recording2_Kmsknr = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Auftragsinformation.Rechnung' at Center.", repo.Auftragsinformation.RechnungInfo, new RecordItemIndex(0));
            repo.Auftragsinformation.Rechnung.Click();
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Auftragsinformation.Rechnung' at Center.", repo.Auftragsinformation.RechnungInfo, new RecordItemIndex(1));
            repo.Auftragsinformation.Rechnung.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Recording2_Rechnr' with focus on 'Auftragsinformation.Rechnung'.", repo.Auftragsinformation.RechnungInfo, new RecordItemIndex(2));
            repo.Auftragsinformation.Rechnung.PressKeys(Recording2_Rechnr);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Auftragsinformation.PbRechnung' at Center.", repo.Auftragsinformation.PbRechnungInfo, new RecordItemIndex(3));
            repo.Auftragsinformation.PbRechnung.Click();
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='R21/00001') on item 'Auftragsinformation.RechNrRow1'.", repo.Auftragsinformation.RechNrRow1Info, new RecordItemIndex(4));
            Validate.AttributeEqual(repo.Auftragsinformation.RechNrRow1Info, "Text", "R21/00001");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Buttons.PbCommonNeu' at Center.", repo.Buttons.PbCommonNeuInfo, new RecordItemIndex(5));
            repo.Buttons.PbCommonNeu.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Recording2_Aufknr' with focus on 'Auftragsinformation.Auftrag'.", repo.Auftragsinformation.AuftragInfo, new RecordItemIndex(6));
            repo.Auftragsinformation.Auftrag.PressKeys(Recording2_Aufknr);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Buttons.PbAuftrag' at Center.", repo.Buttons.PbAuftragInfo, new RecordItemIndex(7));
            repo.Buttons.PbAuftrag.Click();
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='A21/00001') on item 'Auftragsinformation.AufkNrRow1'.", repo.Auftragsinformation.AufkNrRow1Info, new RecordItemIndex(8));
            Validate.AttributeEqual(repo.Auftragsinformation.AufkNrRow1Info, "Text", "A21/00001");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Buttons.PbCommonNeu' at Center.", repo.Buttons.PbCommonNeuInfo, new RecordItemIndex(9));
            repo.Buttons.PbCommonNeu.Click();
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Auftragsinformation.Auftrag' at Center.", repo.Auftragsinformation.AuftragInfo, new RecordItemIndex(10));
            repo.Auftragsinformation.Auftrag.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Recording2_Aufknr' with focus on 'Auftragsinformation.Auftrag'.", repo.Auftragsinformation.AuftragInfo, new RecordItemIndex(11));
            repo.Auftragsinformation.Auftrag.PressKeys(Recording2_Aufknr);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Auftragsinformation.KOScheinButton' at Center.", repo.Auftragsinformation.KOScheinButtonInfo, new RecordItemIndex(12));
            repo.Auftragsinformation.KOScheinButton.Click();
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Recording2_Kmsknr) on item 'Auftragsinformation.KmskNrRow1'.", repo.Auftragsinformation.KmskNrRow1Info, new RecordItemIndex(13));
            Validate.AttributeEqual(repo.Auftragsinformation.KmskNrRow1Info, "Text", Recording2_Kmsknr);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left DoubleClick item 'Auftragsinformation.KmskNrRow1' at Center.", repo.Auftragsinformation.KmskNrRow1Info, new RecordItemIndex(14));
            repo.Auftragsinformation.KmskNrRow1.DoubleClick();
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'Auftragsinformation.TitleBar100Lieferungen'.", repo.Auftragsinformation.TitleBar100LieferungenInfo, new RecordItemIndex(15));
            Validate.Exists(repo.Auftragsinformation.TitleBar100LieferungenInfo);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='A21/00001') on item 'Auftragsinformation.ColAuflAufkNrRow1'.", repo.Auftragsinformation.ColAuflAufkNrRow1Info, new RecordItemIndex(16));
            Validate.AttributeEqual(repo.Auftragsinformation.ColAuflAufkNrRow1Info, "Text", "A21/00001");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Buttons.PbCommonNeu' at Center.", repo.Buttons.PbCommonNeuInfo, new RecordItemIndex(17));
            repo.Buttons.PbCommonNeu.Click();
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'Auftragsinformation.Screenshots_Fensterfunktionen'.", repo.Auftragsinformation.Screenshots_FensterfunktionenInfo, new RecordItemIndex(18));
            Validate.Exists(repo.Auftragsinformation.Screenshots_FensterfunktionenInfo);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
