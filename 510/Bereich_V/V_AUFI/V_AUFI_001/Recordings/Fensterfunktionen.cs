///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace V_AUFI_001.Recordings
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Fensterfunktionen recording.
    /// </summary>
    [TestModule("6c430a6c-20e3-4669-bcda-9baf6e5a782c", ModuleType.Recording, 1)]
    public partial class Fensterfunktionen : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::V_AUFI_001.V_AUFI_001Repository repository.
        /// </summary>
        public static global::V_AUFI_001.V_AUFI_001Repository repo = global::V_AUFI_001.V_AUFI_001Repository.Instance;

        static Fensterfunktionen instance = new Fensterfunktionen();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Fensterfunktionen()
        {
            Auftrag = "A21/00011";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Fensterfunktionen Instance
        {
            get { return instance; }
        }

#region Variables

        string _Auftrag;

        /// <summary>
        /// Gets or sets the value of variable Auftrag.
        /// </summary>
        [TestVariable("b42712a3-77ab-4816-9bbf-d8a21dfa5b07")]
        public string Auftrag
        {
            get { return _Auftrag; }
            set { _Auftrag = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Auftragsinformation.Auftrag' at Center.", repo.Auftragsinformation.AuftragInfo, new RecordItemIndex(0));
            repo.Auftragsinformation.Auftrag.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Auftrag' with focus on 'Auftragsinformation.Auftrag'.", repo.Auftragsinformation.AuftragInfo, new RecordItemIndex(1));
            repo.Auftragsinformation.Auftrag.PressKeys(Auftrag);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Tab}' with focus on 'Auftragsinformation.Auftrag'.", repo.Auftragsinformation.AuftragInfo, new RecordItemIndex(2));
            repo.Auftragsinformation.Auftrag.PressKeys("{Tab}");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Buttons.PbAuftrag' at Center.", repo.Buttons.PbAuftragInfo, new RecordItemIndex(3));
            repo.Buttons.PbAuftrag.Click();
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'Auftragsinformation.TitleBar100Auftraege'.", repo.Auftragsinformation.TitleBar100AuftraegeInfo, new RecordItemIndex(4));
            Validate.Exists(repo.Auftragsinformation.TitleBar100AuftraegeInfo);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Buttons.PbPosition1' at Center.", repo.Buttons.PbPosition1Info, new RecordItemIndex(5));
            repo.Buttons.PbPosition1.Click();
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'Auftragsinformation.TitleBar100Positionen'.", repo.Auftragsinformation.TitleBar100PositionenInfo, new RecordItemIndex(6));
            Validate.Exists(repo.Auftragsinformation.TitleBar100PositionenInfo);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Buttons.Button_Fenster' at Center.", repo.Buttons.Button_FensterInfo, new RecordItemIndex(7));
            repo.Buttons.Button_Fenster.Click();
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Fensterfunktionen.VertikalGliedern' at Center.", repo.Fensterfunktionen.VertikalGliedernInfo, new RecordItemIndex(8));
            repo.Fensterfunktionen.VertikalGliedern.Click();
            
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating CompareImage (Screenshot: 'V_gliedern' with region {X=2,Y=1,Width=1918,Height=589}) on item 'Auftragsinformation.Screenshots_Fensterfunktionen'.", repo.Auftragsinformation.Screenshots_FensterfunktionenInfo, new RecordItemIndex(9));
                Validate.CompareImage(repo.Auftragsinformation.Screenshots_FensterfunktionenInfo, Screenshots_Fensterfunktionen_V_gliedern, Screenshots_Fensterfunktionen_V_gliedern_Options, null, false);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(9)); }
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Buttons.Button_Fenster' at Center.", repo.Buttons.Button_FensterInfo, new RecordItemIndex(10));
            repo.Buttons.Button_Fenster.Click();
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Fensterfunktionen.HorizontalGliedern' at Center.", repo.Fensterfunktionen.HorizontalGliedernInfo, new RecordItemIndex(11));
            repo.Fensterfunktionen.HorizontalGliedern.Click();
            
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating CompareImage (Screenshot: 'H_gliedern' with region {X=727,Y=263,Width=8,Height=8}) on item 'Auftragsinformation.Screenshots_Fensterfunktionen'.", repo.Auftragsinformation.Screenshots_FensterfunktionenInfo, new RecordItemIndex(12));
                Validate.CompareImage(repo.Auftragsinformation.Screenshots_FensterfunktionenInfo, Screenshots_Fensterfunktionen_H_gliedern, Screenshots_Fensterfunktionen_H_gliedern_Options, null, false);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(12)); }
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Buttons.Button_Fenster' at Center.", repo.Buttons.Button_FensterInfo, new RecordItemIndex(13));
            repo.Buttons.Button_Fenster.Click();
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Fensterfunktionen.UEberlappend' at Center.", repo.Fensterfunktionen.UEberlappendInfo, new RecordItemIndex(14));
            repo.Fensterfunktionen.UEberlappend.Click();
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Form100AuftragsInfo.Wiederherstellen' at Center.", repo.Form100AuftragsInfo.WiederherstellenInfo, new RecordItemIndex(15));
            repo.Form100AuftragsInfo.Wiederherstellen.Click();
            
            Report.Screenshot(ReportLevel.Info, "User", "", repo.Form100AuftragsInfo.WindowsForms10MDICLIENTApp02804c64R, false, new RecordItemIndex(16));
            
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating ContainsImage (Screenshot: 'Screenshot3' with region {X=0,Y=0,Width=1055,Height=240}) on item 'Form100AuftragsInfo.WindowsForms10MDICLIENTApp02804c64R'.", repo.Form100AuftragsInfo.WindowsForms10MDICLIENTApp02804c64RInfo, new RecordItemIndex(17));
                Validate.ContainsImage(repo.Form100AuftragsInfo.WindowsForms10MDICLIENTApp02804c64RInfo, WindowsForms10MDICLIENTApp02804c64R_Screenshot3, WindowsForms10MDICLIENTApp02804c64R_Screenshot3_Options, null, false);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(17)); }
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left DoubleClick item 'Form100AuftragsInfo.TitleBar100Positionen' at UpperLeft.", repo.Form100AuftragsInfo.TitleBar100PositionenInfo, new RecordItemIndex(18));
            repo.Form100AuftragsInfo.TitleBar100Positionen.DoubleClick(Location.UpperLeft);
            
            Report.Screenshot(ReportLevel.Info, "User", "", repo.Form100AuftragsInfo.FlexGrid, false, new RecordItemIndex(19));
            
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating ContainsImage (Screenshot: 'Screenshot1' with region {X=0,Y=0,Width=1914,Height=524}) on item 'Form100AuftragsInfo.FlexGrid'.", repo.Form100AuftragsInfo.FlexGridInfo, new RecordItemIndex(20));
                Validate.ContainsImage(repo.Form100AuftragsInfo.FlexGridInfo, FlexGrid_Screenshot1, FlexGrid_Screenshot1_Options, null, false);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(20)); }
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Buttons.PbCommonNeu' at 35;61.", repo.Buttons.PbCommonNeuInfo, new RecordItemIndex(21));
            repo.Buttons.PbCommonNeu.Click("35;61");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'Auftragsinformation.Auftrag'.", repo.Auftragsinformation.AuftragInfo, new RecordItemIndex(22));
            Validate.Exists(repo.Auftragsinformation.AuftragInfo);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Auftragsinformation.PbCommonNeu' at Center.", repo.Auftragsinformation.PbCommonNeuInfo, new RecordItemIndex(23));
            repo.Auftragsinformation.PbCommonNeu.Click();
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='') on item 'Auftragsinformation.DfAufkNr'.", repo.Auftragsinformation.DfAufkNrInfo, new RecordItemIndex(24));
            Validate.AttributeEqual(repo.Auftragsinformation.DfAufkNrInfo, "Text", "");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Form100AuftragsInfo.Maximieren' at Center.", repo.Form100AuftragsInfo.MaximierenInfo, new RecordItemIndex(25));
            repo.Form100AuftragsInfo.Maximieren.Click();
            
        }

#region Image Feature Data
        /// <summary>
        /// DO NOT REFERENCE THIS CODE  - auto generated
        /// </summary>
        CompressedImage Screenshots_Fensterfunktionen_V_gliedern
        { get { return repo.Auftragsinformation.Screenshots_FensterfunktionenInfo.GetV_gliedern(new Rectangle(2, 1, 1918, 589)); } }

        /// <summary>
        /// DO NOT REFERENCE THIS CODE  - auto generated
        /// </summary>
        Imaging.FindOptions Screenshots_Fensterfunktionen_V_gliedern_Options
        { get { return Imaging.FindOptions.Parse("1;None;2,1,1918,589;True;10000000;0ms"); } }

        /// <summary>
        /// DO NOT REFERENCE THIS CODE  - auto generated
        /// </summary>
        CompressedImage Screenshots_Fensterfunktionen_H_gliedern
        { get { return repo.Auftragsinformation.Screenshots_FensterfunktionenInfo.GetH_gliedern(new Rectangle(727, 263, 8, 8)); } }

        /// <summary>
        /// DO NOT REFERENCE THIS CODE  - auto generated
        /// </summary>
        Imaging.FindOptions Screenshots_Fensterfunktionen_H_gliedern_Options
        { get { return Imaging.FindOptions.Parse("1;None;727,263,8,8;True;10000000;0ms"); } }

        /// <summary>
        /// DO NOT REFERENCE THIS CODE  - auto generated
        /// </summary>
        CompressedImage WindowsForms10MDICLIENTApp02804c64R_Screenshot3
        { get { return repo.Form100AuftragsInfo.WindowsForms10MDICLIENTApp02804c64RInfo.GetScreenshot3(new Rectangle(0, 0, 1055, 240)); } }

        /// <summary>
        /// DO NOT REFERENCE THIS CODE  - auto generated
        /// </summary>
        Imaging.FindOptions WindowsForms10MDICLIENTApp02804c64R_Screenshot3_Options
        { get { return Imaging.FindOptions.Default; } }

        /// <summary>
        /// DO NOT REFERENCE THIS CODE  - auto generated
        /// </summary>
        CompressedImage FlexGrid_Screenshot1
        { get { return repo.Form100AuftragsInfo.FlexGridInfo.GetScreenshot1(new Rectangle(0, 0, 1914, 524)); } }

        /// <summary>
        /// DO NOT REFERENCE THIS CODE  - auto generated
        /// </summary>
        Imaging.FindOptions FlexGrid_Screenshot1_Options
        { get { return Imaging.FindOptions.Default; } }

#endregion
    }
#pragma warning restore 0436
}
