///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace V_AUFA_Schnelltest.Recordings
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Anlage_kopieren recording.
    /// </summary>
    [TestModule("ba9565de-3386-4b11-9f67-01a1aad19576", ModuleType.Recording, 1)]
    public partial class Anlage_kopieren : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::V_AUFA_Schnelltest.V_AUFA_SchnelltestRepository repository.
        /// </summary>
        public static global::V_AUFA_Schnelltest.V_AUFA_SchnelltestRepository repo = global::V_AUFA_Schnelltest.V_AUFA_SchnelltestRepository.Instance;

        static Anlage_kopieren instance = new Anlage_kopieren();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Anlage_kopieren()
        {
            auftragsart_neu = "I";
            auftragsart_bez = "Inventar";
            kein = "0";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Anlage_kopieren Instance
        {
            get { return instance; }
        }

#region Variables

        string _auftragsart_neu;

        /// <summary>
        /// Gets or sets the value of variable auftragsart_neu.
        /// </summary>
        [TestVariable("482596ba-646a-43ba-8256-01cd69ba742a")]
        public string auftragsart_neu
        {
            get { return _auftragsart_neu; }
            set { _auftragsart_neu = value; }
        }

        string _auftragsart_bez;

        /// <summary>
        /// Gets or sets the value of variable auftragsart_bez.
        /// </summary>
        [TestVariable("e7278844-4792-4bb7-ba55-90fa65bdf91f")]
        public string auftragsart_bez
        {
            get { return _auftragsart_bez; }
            set { _auftragsart_bez = value; }
        }

        string _kein;

        /// <summary>
        /// Gets or sets the value of variable kein.
        /// </summary>
        [TestVariable("2aa53427-bff6-4d7d-b8ea-f368a429b620")]
        public string kein
        {
            get { return _kein; }
            set { _kein = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left DoubleClick item 'FrmAuftragsarten.Row1Column0' at Center.", repo.FrmAuftragsarten.Row1Column0Info, new RecordItemIndex(0));
            repo.FrmAuftragsarten.Row1Column0.DoubleClick();
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmAuftragsarten.PbNew' at Center.", repo.FrmAuftragsarten.PbNewInfo, new RecordItemIndex(1));
            //repo.FrmAuftragsarten.PbNew.Click();
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='Auftragsart') on item 'FrmAuftragsarten.Label3'.", repo.FrmAuftragsarten.Label3Info, new RecordItemIndex(2));
            Validate.AttributeEqual(repo.FrmAuftragsarten.Label3Info, "Text", "Auftragsart");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmAuftragsarten.PbCommon2Copy' at Center.", repo.FrmAuftragsarten.PbCommon2CopyInfo, new RecordItemIndex(3));
            repo.FrmAuftragsarten.PbCommon2Copy.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$auftragsart_neu' with focus on 'FrmAuftragsarten.DfAufaCd'.", repo.FrmAuftragsarten.DfAufaCdInfo, new RecordItemIndex(4));
            repo.FrmAuftragsarten.DfAufaCd.PressKeys(auftragsart_neu);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$auftragsart_bez' with focus on 'FrmAuftragsarten.DfAufaBez'.", repo.FrmAuftragsarten.DfAufaBezInfo, new RecordItemIndex(5));
            repo.FrmAuftragsarten.DfAufaBez.PressKeys(auftragsart_bez);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$kein' with focus on 'FrmAuftragsarten.DfAufaBukz100'.", repo.FrmAuftragsarten.DfAufaBukz100Info, new RecordItemIndex(6));
            repo.FrmAuftragsarten.DfAufaBukz100.PressKeys(kein);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmAuftragsarten.PbCommonSave' at Center.", repo.FrmAuftragsarten.PbCommonSaveInfo, new RecordItemIndex(7));
            repo.FrmAuftragsarten.PbCommonSave.Click();
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
