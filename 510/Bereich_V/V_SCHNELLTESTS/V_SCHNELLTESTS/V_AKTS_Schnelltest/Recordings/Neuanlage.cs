///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace V_AKTS_Schnelltest.Recordings
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Neuanlage recording.
    /// </summary>
    [TestModule("896ae841-4905-4fa6-a092-deca91c929ed", ModuleType.Recording, 1)]
    public partial class Neuanlage : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::V_AKTS_Schnelltest.V_AKTS_SchnelltestRepository repository.
        /// </summary>
        public static global::V_AKTS_Schnelltest.V_AKTS_SchnelltestRepository repo = global::V_AKTS_Schnelltest.V_AKTS_SchnelltestRepository.Instance;

        static Neuanlage instance = new Neuanlage();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Neuanlage()
        {
            art = "E";
            bezeichnung = "Email_1";
            serien_beginn = "18.01.2024";
            termin_beginn = "23:00:00";
            tage = "5";
            serie_tage = "5";
            kunde = "200021";
            ansprechpartner = "0";
            sachbearbeiter = "RS";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Neuanlage Instance
        {
            get { return instance; }
        }

#region Variables

        string _art;

        /// <summary>
        /// Gets or sets the value of variable art.
        /// </summary>
        [TestVariable("a707515c-7444-4884-b0f0-c347d1ff7f57")]
        public string art
        {
            get { return _art; }
            set { _art = value; }
        }

        string _bezeichnung;

        /// <summary>
        /// Gets or sets the value of variable bezeichnung.
        /// </summary>
        [TestVariable("0fef34f4-4952-4c18-8023-72cd0a252fb3")]
        public string bezeichnung
        {
            get { return _bezeichnung; }
            set { _bezeichnung = value; }
        }

        string _serien_beginn;

        /// <summary>
        /// Gets or sets the value of variable serien_beginn.
        /// </summary>
        [TestVariable("27118a1a-859a-49f8-b8e5-efa081ff5bd5")]
        public string serien_beginn
        {
            get { return _serien_beginn; }
            set { _serien_beginn = value; }
        }

        string _termin_beginn;

        /// <summary>
        /// Gets or sets the value of variable termin_beginn.
        /// </summary>
        [TestVariable("3c135048-daf0-451f-bcbd-122d53dcbec1")]
        public string termin_beginn
        {
            get { return _termin_beginn; }
            set { _termin_beginn = value; }
        }

        string _tage;

        /// <summary>
        /// Gets or sets the value of variable tage.
        /// </summary>
        [TestVariable("04fce1f7-1f3f-4bca-8700-b66c56e3a81b")]
        public string tage
        {
            get { return _tage; }
            set { _tage = value; }
        }

        string _serie_tage;

        /// <summary>
        /// Gets or sets the value of variable serie_tage.
        /// </summary>
        [TestVariable("c128c1df-762a-4a43-8444-4364ae217d06")]
        public string serie_tage
        {
            get { return _serie_tage; }
            set { _serie_tage = value; }
        }

        string _kunde;

        /// <summary>
        /// Gets or sets the value of variable kunde.
        /// </summary>
        [TestVariable("389e7cb0-f66b-4728-8855-b9a050778011")]
        public string kunde
        {
            get { return _kunde; }
            set { _kunde = value; }
        }

        string _ansprechpartner;

        /// <summary>
        /// Gets or sets the value of variable ansprechpartner.
        /// </summary>
        [TestVariable("72928aef-c46d-47b9-a960-a0588539bdf5")]
        public string ansprechpartner
        {
            get { return _ansprechpartner; }
            set { _ansprechpartner = value; }
        }

        string _sachbearbeiter;

        /// <summary>
        /// Gets or sets the value of variable sachbearbeiter.
        /// </summary>
        [TestVariable("9240cb71-4ca7-412a-9ea8-0a7ecf105a84")]
        public string sachbearbeiter
        {
            get { return _sachbearbeiter; }
            set { _sachbearbeiter = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmMain.PbNew' at Center.", repo.FrmMain.PbNewInfo, new RecordItemIndex(0));
            repo.FrmMain.PbNew.Click();
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmMain.TextArt' at Center.", repo.FrmMain.TextArtInfo, new RecordItemIndex(1));
            repo.FrmMain.TextArt.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$art' with focus on 'FrmMain.TextArt'.", repo.FrmMain.TextArtInfo, new RecordItemIndex(2));
            repo.FrmMain.TextArt.PressKeys(art);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$bezeichnung' with focus on 'FrmMain.Bez'.", repo.FrmMain.BezInfo, new RecordItemIndex(3));
            repo.FrmMain.Bez.PressKeys(bezeichnung);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$termin_beginn' with focus on 'FrmMain.Beginn'.", repo.FrmMain.BeginnInfo, new RecordItemIndex(4));
            repo.FrmMain.Beginn.PressKeys(termin_beginn);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$serien_beginn' with focus on 'FrmMain.Beginn1'.", repo.FrmMain.Beginn1Info, new RecordItemIndex(5));
            repo.FrmMain.Beginn1.PressKeys(serien_beginn);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$tage' with focus on 'FrmMain.AnlageFuerDieNaechsten'.", repo.FrmMain.AnlageFuerDieNaechstenInfo, new RecordItemIndex(6));
            repo.FrmMain.AnlageFuerDieNaechsten.PressKeys(tage);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$serie_tage' with focus on 'FrmMain.TagE'.", repo.FrmMain.TagEInfo, new RecordItemIndex(7));
            repo.FrmMain.TagE.PressKeys(serie_tage);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$kunde' with focus on 'FrmMain.Kunde'.", repo.FrmMain.KundeInfo, new RecordItemIndex(8));
            repo.FrmMain.Kunde.PressKeys(kunde);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$ansprechpartner' with focus on 'FrmMain.Ansprechpartner'.", repo.FrmMain.AnsprechpartnerInfo, new RecordItemIndex(9));
            repo.FrmMain.Ansprechpartner.PressKeys(ansprechpartner);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$sachbearbeiter' with focus on 'FrmMain.Sachbearbeiter'.", repo.FrmMain.SachbearbeiterInfo, new RecordItemIndex(10));
            repo.FrmMain.Sachbearbeiter.PressKeys(sachbearbeiter);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmMain.PbCommonSave' at Center.", repo.FrmMain.PbCommonSaveInfo, new RecordItemIndex(11));
            repo.FrmMain.PbCommonSave.Click();
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
