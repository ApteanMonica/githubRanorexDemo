///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace V_AUF_008.Recordings
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Stueckliste_mit_Stueckliste recording.
    /// </summary>
    [TestModule("74bfaf9f-2385-42e3-8b11-db0f55a2db73", ModuleType.Recording, 1)]
    public partial class Stueckliste_mit_Stueckliste : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::V_AUF_008.V_AUF_008Repository repository.
        /// </summary>
        public static global::V_AUF_008.V_AUF_008Repository repo = global::V_AUF_008.V_AUF_008Repository.Instance;

        static Stueckliste_mit_Stueckliste instance = new Stueckliste_mit_Stueckliste();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Stueckliste_mit_Stueckliste()
        {
            Stkl_mit_Stkl = "100009";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Stueckliste_mit_Stueckliste Instance
        {
            get { return instance; }
        }

#region Variables

        string _Stkl_mit_Stkl;

        /// <summary>
        /// Gets or sets the value of variable Stkl_mit_Stkl.
        /// </summary>
        [TestVariable("afb3b172-c1e5-414d-b974-929320defc19")]
        public string Stkl_mit_Stkl
        {
            get { return _Stkl_mit_Stkl; }
            set { _Stkl_mit_Stkl = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left DoubleClick item 'FrmAufk.ArtNr' at Center.", repo.FrmAufk.ArtNrInfo, new RecordItemIndex(0));
            repo.FrmAufk.ArtNr.DoubleClick();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Stkl_mit_Stkl' with focus on 'FrmAufk.ArtNr'.", repo.FrmAufk.ArtNrInfo, new RecordItemIndex(1));
            repo.FrmAufk.ArtNr.PressKeys(Stkl_mit_Stkl);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Tab' Press.", new RecordItemIndex(2));
            Keyboard.Press(System.Windows.Forms.Keys.Tab, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmAufk.TpPos1.Text' at Center.", repo.FrmAufk.TpPos1.TextInfo, new RecordItemIndex(3));
            repo.FrmAufk.TpPos1.Text.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '1' with focus on 'FrmAufk.TpPos1.Text'.", repo.FrmAufk.TpPos1.TextInfo, new RecordItemIndex(4));
            repo.FrmAufk.TpPos1.Text.PressKeys("1");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Tab}' with focus on 'FrmAufk.TpPos1.Text'.", repo.FrmAufk.TpPos1.TextInfo, new RecordItemIndex(5));
            repo.FrmAufk.TpPos1.Text.PressKeys("{Tab}");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='Stückliste mit Stückliste') on item 'FrmAufk.TpPos1.Text1'.", repo.FrmAufk.TpPos1.Text1Info, new RecordItemIndex(6));
            Validate.AttributeEqual(repo.FrmAufk.TpPos1.Text1Info, "Text", "Stückliste mit Stückliste");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmAufk.PbCommonSave' at Center.", repo.FrmAufk.PbCommonSaveInfo, new RecordItemIndex(7));
            repo.FrmAufk.PbCommonSave.Click();
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmAufk.CbKomponenten' at Center.", repo.FrmAufk.CbKomponentenInfo, new RecordItemIndex(8));
            repo.FrmAufk.CbKomponenten.Click();
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='100009') on item 'Form100AuftragserfassungZuAuftrag.ColArtNrRow1'.", repo.Form100AuftragserfassungZuAuftrag.ColArtNrRow1Info, new RecordItemIndex(9));
            Validate.AttributeEqual(repo.Form100AuftragserfassungZuAuftrag.ColArtNrRow1Info, "Text", "100009");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='100005') on item 'Form100AuftragserfassungZuAuftrag.ColArtNrRow2'.", repo.Form100AuftragserfassungZuAuftrag.ColArtNrRow2Info, new RecordItemIndex(10));
            Validate.AttributeEqual(repo.Form100AuftragserfassungZuAuftrag.ColArtNrRow2Info, "Text", "100005");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='100001') on item 'Form100AuftragserfassungZuAuftrag.ColArtNrRow3'.", repo.Form100AuftragserfassungZuAuftrag.ColArtNrRow3Info, new RecordItemIndex(11));
            Validate.AttributeEqual(repo.Form100AuftragserfassungZuAuftrag.ColArtNrRow3Info, "Text", "100001");
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
