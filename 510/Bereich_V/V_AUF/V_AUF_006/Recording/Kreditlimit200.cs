///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace V_AUF_006.Recording
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Kreditlimit200 recording.
    /// </summary>
    [TestModule("203c0d87-b4e1-40ad-98c0-5edfbb087d46", ModuleType.Recording, 1)]
    public partial class Kreditlimit200 : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::V_AUF_006.V_AUF_006Repository repository.
        /// </summary>
        public static global::V_AUF_006.V_AUF_006Repository repo = global::V_AUF_006.V_AUF_006Repository.Instance;

        static Kreditlimit200 instance = new Kreditlimit200();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Kreditlimit200()
        {
            Kunde_Kreditlimit200 = "200005";
            Art_Nr_Kreditlimit = "100015";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Kreditlimit200 Instance
        {
            get { return instance; }
        }

#region Variables

        string _Kunde_Kreditlimit200;

        /// <summary>
        /// Gets or sets the value of variable Kunde_Kreditlimit200.
        /// </summary>
        [TestVariable("fb840c1d-bfac-4207-90a0-7b12e83e6237")]
        public string Kunde_Kreditlimit200
        {
            get { return _Kunde_Kreditlimit200; }
            set { _Kunde_Kreditlimit200 = value; }
        }

        string _Art_Nr_Kreditlimit;

        /// <summary>
        /// Gets or sets the value of variable Art_Nr_Kreditlimit.
        /// </summary>
        [TestVariable("d743d6b5-a46f-487e-88fe-1909a8d09df4")]
        public string Art_Nr_Kreditlimit
        {
            get { return _Art_Nr_Kreditlimit; }
            set { _Art_Nr_Kreditlimit = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmAufk.Maximieren' at Center.", repo.FrmAufk.MaximierenInfo, new RecordItemIndex(0));
            repo.FrmAufk.Maximieren.Click();
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmAufk.Kopf' at Center.", repo.FrmAufk.KopfInfo, new RecordItemIndex(1));
            repo.FrmAufk.Kopf.Click();
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmAufk.PbCommmon1NewLoad' at Center.", repo.FrmAufk.PbCommmon1NewLoadInfo, new RecordItemIndex(2));
            repo.FrmAufk.PbCommmon1NewLoad.Click();
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmAufk.PbSpec3Extras' at Center.", repo.FrmAufk.PbSpec3ExtrasInfo, new RecordItemIndex(3));
            repo.FrmAufk.PbSpec3Extras.Click();
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'VAUF.RechnungsempfaengerAendern' at Center.", repo.VAUF.RechnungsempfaengerAendernInfo, new RecordItemIndex(4));
            repo.VAUF.RechnungsempfaengerAendern.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Kunde_Kreditlimit200' with focus on 'FrmAufk.DfAufkAdrRech'.", repo.FrmAufk.DfAufkAdrRechInfo, new RecordItemIndex(5));
            repo.FrmAufk.DfAufkAdrRech.EnsureVisible();
            Keyboard.Press(Kunde_Kreditlimit200);
            
            //Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Tab}' with focus on 'FrmAufk.DfAufkAdrRech'.", repo.FrmAufk.DfAufkAdrRechInfo, new RecordItemIndex(6));
            //repo.FrmAufk.DfAufkAdrRech.EnsureVisible();
            //Keyboard.Press("{Tab}");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Tab' Press.", new RecordItemIndex(7));
            Keyboard.Press(System.Windows.Forms.Keys.Tab, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmAufk.PbCommonSave' at Center.", repo.FrmAufk.PbCommonSaveInfo, new RecordItemIndex(8));
            repo.FrmAufk.PbCommonSave.Click();
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='Soll die Rechnungsanschrift auf die Adresse des Rechnungsempfängers geändert werden?') on item 'DlgMessageBox.LabelMeldungstext'.", repo.DlgMessageBox.LabelMeldungstextInfo, new RecordItemIndex(9));
            Validate.AttributeEqual(repo.DlgMessageBox.LabelMeldungstextInfo, "Text", "Soll die Rechnungsanschrift auf die Adresse des Rechnungsempfängers geändert werden?");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'DlgMessageBox.Button0' at Center.", repo.DlgMessageBox.Button0Info, new RecordItemIndex(10));
            repo.DlgMessageBox.Button0.Click();
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Kunde_Kreditlimit200) on item 'FrmAufk.DfAufkAdrRech'.", repo.FrmAufk.DfAufkAdrRechInfo, new RecordItemIndex(11));
            Validate.AttributeEqual(repo.FrmAufk.DfAufkAdrRechInfo, "Text", Kunde_Kreditlimit200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmAufk.TabPagePositionen' at Center.", repo.FrmAufk.TabPagePositionenInfo, new RecordItemIndex(12));
            repo.FrmAufk.TabPagePositionen.Click();
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmAufk.ArtNr' at Center.", repo.FrmAufk.ArtNrInfo, new RecordItemIndex(13));
            repo.FrmAufk.ArtNr.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Art_Nr_Kreditlimit' with focus on 'FrmAufk.ArtNr'.", repo.FrmAufk.ArtNrInfo, new RecordItemIndex(14));
            repo.FrmAufk.ArtNr.PressKeys(Art_Nr_Kreditlimit);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmAufk.Menge' at Center.", repo.FrmAufk.MengeInfo, new RecordItemIndex(15));
            repo.FrmAufk.Menge.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '2{Tab}' with focus on 'FrmAufk.Menge'.", repo.FrmAufk.MengeInfo, new RecordItemIndex(16));
            repo.FrmAufk.Menge.PressKeys("2{Tab}");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left DoubleClick item 'FrmAufk.DfAufpPreis' at Center.", repo.FrmAufk.DfAufpPreisInfo, new RecordItemIndex(17));
            repo.FrmAufk.DfAufpPreis.DoubleClick();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '100{Tab}' with focus on 'FrmAufk.DfAufpPreis'.", repo.FrmAufk.DfAufpPreisInfo, new RecordItemIndex(18));
            repo.FrmAufk.DfAufpPreis.PressKeys("100{Tab}");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='100,000') on item 'FrmAufk.DfAufpPreis'.", repo.FrmAufk.DfAufpPreisInfo, new RecordItemIndex(19));
            Validate.AttributeEqual(repo.FrmAufk.DfAufpPreisInfo, "Text", "100,000");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='Die maximal zulässige Preisabweichung von 10,00 %  wurde überschritten\r\n\r\nZulässiger Preisbereich: 9,900 - 12,100  EUR') on item 'DlgMessageBox.LabelMeldungstext'.", repo.DlgMessageBox.LabelMeldungstextInfo, new RecordItemIndex(20));
            Validate.AttributeEqual(repo.DlgMessageBox.LabelMeldungstextInfo, "Text", "Die maximal zulässige Preisabweichung von 10,00 %  wurde überschritten\r\n\r\nZulässiger Preisbereich: 9,900 - 12,100  EUR");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'DlgMessageBox.Button0' at Center.", repo.DlgMessageBox.Button0Info, new RecordItemIndex(21));
            repo.DlgMessageBox.Button0.Click();
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmAufk.PbCommonSave' at Center.", repo.FrmAufk.PbCommonSaveInfo, new RecordItemIndex(22));
            repo.FrmAufk.PbCommonSave.Click();
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='ACHTUNG: Kreditlimit um 136,00 EUR überschritten\r\n\r\nWollen Sie die Position trotzdem speichern?') on item 'DlgMessageBox.LabelMeldungstext'.", repo.DlgMessageBox.LabelMeldungstextInfo, new RecordItemIndex(23));
            Validate.AttributeEqual(repo.DlgMessageBox.LabelMeldungstextInfo, "Text", "ACHTUNG: Kreditlimit um 136,00 EUR überschritten\r\n\r\nWollen Sie die Position trotzdem speichern?");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'DlgMessageBox.Button0' at Center.", repo.DlgMessageBox.Button0Info, new RecordItemIndex(24));
            repo.DlgMessageBox.Button0.Click();
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left DoubleClick item 'FrmAufk.Row2Column0' at Center.", repo.FrmAufk.Row2Column0Info, new RecordItemIndex(25));
            repo.FrmAufk.Row2Column0.DoubleClick();
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Right Click item 'FrmAufk.Row2Column0' at Center.", repo.FrmAufk.Row2Column0Info, new RecordItemIndex(26));
            repo.FrmAufk.Row2Column0.Click(System.Windows.Forms.MouseButtons.Right);
            
            //Report.Log(ReportLevel.Info, "Keyboard", "Key 'Delete' Press with focus on 'FrmAufk.Row2Column0'.", repo.FrmAufk.Row2Column0Info, new RecordItemIndex(27));
            //Keyboard.PrepareFocus(repo.FrmAufk.Row2Column0);
            //Keyboard.Press(System.Windows.Forms.Keys.Delete, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Right Click item 'FrmAufk.Row2Column0' at Center.", repo.FrmAufk.Row2Column0Info, new RecordItemIndex(28));
            //repo.FrmAufk.Row2Column0.Click(System.Windows.Forms.MouseButtons.Right);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'VAUF.Stornieren' at Center.", repo.VAUF.StornierenInfo, new RecordItemIndex(29));
            repo.VAUF.Stornieren.Click();
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 30s to exist. Associated repository item: 'DlgMessageBox.LabelMeldungstext'", repo.DlgMessageBox.LabelMeldungstextInfo, new ActionTimeout(30000), new RecordItemIndex(30));
            repo.DlgMessageBox.LabelMeldungstextInfo.WaitForExists(30000);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='Wollen Sie die selektierten Zeilen stornieren oder löschen?\r\n\r\nDrücken Sie einen der folgenden Knöpfe:\r\n') on item 'DlgMessageBox.LabelMeldungstext'.", repo.DlgMessageBox.LabelMeldungstextInfo, new RecordItemIndex(31));
            Validate.AttributeEqual(repo.DlgMessageBox.LabelMeldungstextInfo, "Text", "Wollen Sie die selektierten Zeilen stornieren oder löschen?\r\n\r\nDrücken Sie einen der folgenden Knöpfe:\r\n");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'DlgMessageBox.Button1' at Center.", repo.DlgMessageBox.Button1Info, new RecordItemIndex(32));
            repo.DlgMessageBox.Button1.Click();
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='Auftragspositionen wurden erfolgreich gelöscht') on item 'DlgMessageBox.LabelMeldungstext'.", repo.DlgMessageBox.LabelMeldungstextInfo, new RecordItemIndex(33));
            Validate.AttributeEqual(repo.DlgMessageBox.LabelMeldungstextInfo, "Text", "Auftragspositionen wurden erfolgreich gelöscht");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'DlgMessageBox.Button0' at Center.", repo.DlgMessageBox.Button0Info, new RecordItemIndex(34));
            repo.DlgMessageBox.Button0.Click();
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmAufk.PbCommmon1NewLoad' at Center.", repo.FrmAufk.PbCommmon1NewLoadInfo, new RecordItemIndex(35));
            repo.FrmAufk.PbCommmon1NewLoad.Click();
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmAufk.Kopf' at Center.", repo.FrmAufk.KopfInfo, new RecordItemIndex(36));
            repo.FrmAufk.Kopf.Click();
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='200004') on item 'FrmAufk.Kunde'.", repo.FrmAufk.KundeInfo, new RecordItemIndex(37));
            Validate.AttributeEqual(repo.FrmAufk.KundeInfo, "Text", "200004");
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
