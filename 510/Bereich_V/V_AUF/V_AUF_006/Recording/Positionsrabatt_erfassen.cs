///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace V_AUF_006.Recording
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Positionsrabatt_erfassen recording.
    /// </summary>
    [TestModule("69158349-f7d5-41f5-80d3-05dd852347dd", ModuleType.Recording, 1)]
    public partial class Positionsrabatt_erfassen : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::V_AUF_006.V_AUF_006Repository repository.
        /// </summary>
        public static global::V_AUF_006.V_AUF_006Repository repo = global::V_AUF_006.V_AUF_006Repository.Instance;

        static Positionsrabatt_erfassen instance = new Positionsrabatt_erfassen();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Positionsrabatt_erfassen()
        {
            rabatt = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Positionsrabatt_erfassen Instance
        {
            get { return instance; }
        }

#region Variables

        string _rabatt;

        /// <summary>
        /// Gets or sets the value of variable rabatt.
        /// </summary>
        [TestVariable("75f375b2-b4df-4057-a261-48d4397fcdcf")]
        public string rabatt
        {
            get { return _rabatt; }
            set { _rabatt = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Down item 'FrmAufk.FlexGrid.Row3Column0' at Center.", repo.FrmAufk.FlexGrid.Row3Column0Info, new RecordItemIndex(0));
            repo.FrmAufk.FlexGrid.Row3Column0.MoveTo();
            Mouse.ButtonDown(System.Windows.Forms.MouseButtons.Left);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Move item 'FrmAufk.FlexGrid.Row3Column0' at Center.", repo.FrmAufk.FlexGrid.Row3Column0Info, new RecordItemIndex(1));
            repo.FrmAufk.FlexGrid.Row3Column0.MoveTo();
            
            //Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{LShiftKey}' with focus on 'FrmAufk'.", repo.FrmAufk.SelfInfo, new RecordItemIndex(2));
            //repo.FrmAufk.Self.EnsureVisible();
            //Keyboard.Press("{LShiftKey}");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Up item 'FrmAufk.FlexGrid.Row4Column0' at Center.", repo.FrmAufk.FlexGrid.Row4Column0Info, new RecordItemIndex(3));
            repo.FrmAufk.FlexGrid.Row4Column0.MoveTo();
            Mouse.ButtonUp(System.Windows.Forms.MouseButtons.Left);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Right Click item 'FrmAufk.FlexGrid.Row4Column0' at Center.", repo.FrmAufk.FlexGrid.Row4Column0Info, new RecordItemIndex(4));
            repo.FrmAufk.FlexGrid.Row4Column0.Click(System.Windows.Forms.MouseButtons.Right);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'VAUF.PositionsrabattFuerMehrerePos' at Center.", repo.VAUF.PositionsrabattFuerMehrerePosInfo, new RecordItemIndex(5));
            repo.VAUF.PositionsrabattFuerMehrerePos.Click();
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'DlgRabaMehrPos.DfRabaCd' at Center.", repo.DlgRabaMehrPos.DfRabaCdInfo, new RecordItemIndex(6));
            repo.DlgRabaMehrPos.DfRabaCd.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'VP1' with focus on 'DlgRabaMehrPos.DfRabaCd'.", repo.DlgRabaMehrPos.DfRabaCdInfo, new RecordItemIndex(7));
            repo.DlgRabaMehrPos.DfRabaCd.EnsureVisible();
            Keyboard.Press("VP1");
            
            //Report.Log(ReportLevel.Info, "Keyboard", "Key 'Tab' Press.", new RecordItemIndex(8));
            //Keyboard.Press(System.Windows.Forms.Keys.Tab, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'DlgRabaMehrPos.DfRabatt' at Center.", repo.DlgRabaMehrPos.DfRabattInfo, new RecordItemIndex(9));
            repo.DlgRabaMehrPos.DfRabatt.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '10' with focus on 'DlgRabaMehrPos.Rabatt'.", repo.DlgRabaMehrPos.RabattInfo, new RecordItemIndex(10));
            repo.DlgRabaMehrPos.Rabatt.EnsureVisible();
            Keyboard.Press("10");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Tab' Press.", new RecordItemIndex(11));
            Keyboard.Press(System.Windows.Forms.Keys.Tab, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            //Report.Log(ReportLevel.Info, "Wait", "Waiting 30s for the attribute 'Text' to equal the specified value '10'. Associated repository item: 'DlgRabaMehrPos.Rabatt'", repo.DlgRabaMehrPos.RabattInfo, new RecordItemIndex(12));
            //repo.DlgRabaMehrPos.RabattInfo.WaitForAttributeEqual(30000, "Text", "10");
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'Text' from item 'DlgRabaMehrPos.Rabatt' and assigning its value to variable 'rabatt'.", repo.DlgRabaMehrPos.RabattInfo, new RecordItemIndex(13));
            rabatt = repo.DlgRabaMehrPos.Rabatt.Element.GetAttributeValueText("Text");
            
            Ranorex.AutomationHelpers.UserCodeCollections.Aptean.ValidateWithoutDecimals(rabatt, "10");
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='10') on item 'DlgRabaMehrPos.Rabatt'.", repo.DlgRabaMehrPos.RabattInfo, new RecordItemIndex(15));
            //Validate.AttributeEqual(repo.DlgRabaMehrPos.RabattInfo, "Text", "10");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'DlgRabaMehrPos.PbOk' at Center.", repo.DlgRabaMehrPos.PbOkInfo, new RecordItemIndex(16));
            repo.DlgRabaMehrPos.PbOk.Click();
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmAufk.PbCommmon1NewLoad' at Center.", repo.FrmAufk.PbCommmon1NewLoadInfo, new RecordItemIndex(17));
            repo.FrmAufk.PbCommmon1NewLoad.Click();
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left DoubleClick item 'FrmAufk.FlexGrid.Row3Column0' at Center.", repo.FrmAufk.FlexGrid.Row3Column0Info, new RecordItemIndex(18));
            repo.FrmAufk.FlexGrid.Row3Column0.DoubleClick();
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 30s to exist. Associated repository item: 'FrmAufk.FlexGrid.Row3Column0'", repo.FrmAufk.FlexGrid.Row3Column0Info, new ActionTimeout(30000), new RecordItemIndex(19));
            repo.FrmAufk.FlexGrid.Row3Column0Info.WaitForExists(30000);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='9,900') on item 'FrmAufk.DfAufpPreis2'.", repo.FrmAufk.DfAufpPreis2Info, new RecordItemIndex(20));
            //Validate.AttributeEqual(repo.FrmAufk.DfAufpPreis2Info, "Text", "9,900");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (HasFocus='False') on item 'FrmAufk.ColRabpWertRow1'.", repo.FrmAufk.ColRabpWertRow1Info, new RecordItemIndex(21));
            Validate.AttributeEqual(repo.FrmAufk.ColRabpWertRow1Info, "HasFocus", "False");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmAufk.PSpec2BelegAbschliessen' at Center.", repo.FrmAufk.PSpec2BelegAbschliessenInfo, new RecordItemIndex(22));
            repo.FrmAufk.PSpec2BelegAbschliessen.Click();
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
