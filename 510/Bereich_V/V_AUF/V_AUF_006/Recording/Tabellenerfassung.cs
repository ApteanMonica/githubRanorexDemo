///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace V_AUF_006.Recording
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Tabellenerfassung recording.
    /// </summary>
    [TestModule("313f82f4-13f6-440f-b394-b3ee91e08288", ModuleType.Recording, 1)]
    public partial class Tabellenerfassung : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::V_AUF_006.V_AUF_006Repository repository.
        /// </summary>
        public static global::V_AUF_006.V_AUF_006Repository repo = global::V_AUF_006.V_AUF_006Repository.Instance;

        static Tabellenerfassung instance = new Tabellenerfassung();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Tabellenerfassung()
        {
            Art_NR_TabErf_1 = "100015";
            Art_NR_TabErf_2 = "100016";
            Art_NR_TabErf_3 = "100017";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Tabellenerfassung Instance
        {
            get { return instance; }
        }

#region Variables

        string _Art_NR_TabErf_1;

        /// <summary>
        /// Gets or sets the value of variable Art_NR_TabErf_1.
        /// </summary>
        [TestVariable("9695dd5a-08d1-49e6-ad2b-7ec4326af32e")]
        public string Art_NR_TabErf_1
        {
            get { return _Art_NR_TabErf_1; }
            set { _Art_NR_TabErf_1 = value; }
        }

        string _Art_NR_TabErf_2;

        /// <summary>
        /// Gets or sets the value of variable Art_NR_TabErf_2.
        /// </summary>
        [TestVariable("280448ee-78a4-4af0-9f5a-8977d311a612")]
        public string Art_NR_TabErf_2
        {
            get { return _Art_NR_TabErf_2; }
            set { _Art_NR_TabErf_2 = value; }
        }

        string _Art_NR_TabErf_3;

        /// <summary>
        /// Gets or sets the value of variable Art_NR_TabErf_3.
        /// </summary>
        [TestVariable("2728a1a3-822d-49c9-a096-8033d641e889")]
        public string Art_NR_TabErf_3
        {
            get { return _Art_NR_TabErf_3; }
            set { _Art_NR_TabErf_3 = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmAufk.PbGewVol' at Center.", repo.FrmAufk.PbGewVolInfo, new RecordItemIndex(0));
            repo.FrmAufk.PbGewVol.Click();
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'DlgGewicht.TitleBar100GewichtsinformationenFue'.", repo.DlgGewicht.TitleBar100GewichtsinformationenFueInfo, new RecordItemIndex(1));
            Validate.Exists(repo.DlgGewicht.TitleBar100GewichtsinformationenFueInfo);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'DlgGewicht.Schliessen' at Center.", repo.DlgGewicht.SchliessenInfo, new RecordItemIndex(2));
            repo.DlgGewicht.Schliessen.Click();
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmAufk.TabPagePositionen' at Center.", repo.FrmAufk.TabPagePositionenInfo, new RecordItemIndex(3));
            repo.FrmAufk.TabPagePositionen.Click();
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmAufk.PbCommmon1NewLoad' at Center.", repo.FrmAufk.PbCommmon1NewLoadInfo, new RecordItemIndex(4));
            repo.FrmAufk.PbCommmon1NewLoad.Click();
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmAufk.PbSpec3Weitere' at Center.", repo.FrmAufk.PbSpec3WeitereInfo, new RecordItemIndex(5));
            repo.FrmAufk.PbSpec3Weitere.Click();
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'VAUF.Tabellenerfassung' at Center.", repo.VAUF.TabellenerfassungInfo, new RecordItemIndex(6));
            repo.VAUF.Tabellenerfassung.Click();
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'TblTabellenerfassung.TitleBar100TabellenerfassungAuftr'.", repo.TblTabellenerfassung.TitleBar100TabellenerfassungAuftrInfo, new RecordItemIndex(7));
            Validate.Exists(repo.TblTabellenerfassung.TitleBar100TabellenerfassungAuftrInfo);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'TblTabellenerfassung.FlexGrid' at Center.", repo.TblTabellenerfassung.FlexGridInfo, new RecordItemIndex(8));
            repo.TblTabellenerfassung.FlexGrid.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Insert' Press with focus on 'TblTabellenerfassung.FlexGrid'.", repo.TblTabellenerfassung.FlexGridInfo, new RecordItemIndex(9));
            Keyboard.PrepareFocus(repo.TblTabellenerfassung.FlexGrid);
            Keyboard.Press(System.Windows.Forms.Keys.Insert, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 500ms.", new RecordItemIndex(10));
            Delay.Duration(500, false);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'TblTabellenerfassung.FlexGrid1.ColArtNrRow1' at Center.", repo.TblTabellenerfassung.FlexGrid1.ColArtNrRow1Info, new RecordItemIndex(11));
            repo.TblTabellenerfassung.FlexGrid1.ColArtNrRow1.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Art_NR_TabErf_1' with focus on 'TblTabellenerfassung.FlexGrid1.ColArtNrRow1'.", repo.TblTabellenerfassung.FlexGrid1.ColArtNrRow1Info, new RecordItemIndex(12));
            repo.TblTabellenerfassung.FlexGrid1.ColArtNrRow1.EnsureVisible();
            Keyboard.Press(Art_NR_TabErf_1);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 1m to exist. Associated repository item: 'TblTabellenerfassung.FlexGrid1.ColArtNrRow1'", repo.TblTabellenerfassung.FlexGrid1.ColArtNrRow1Info, new ActionTimeout(60000), new RecordItemIndex(13));
            repo.TblTabellenerfassung.FlexGrid1.ColArtNrRow1Info.WaitForExists(60000);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'TblTabellenerfassung.FlexGrid1.ColAufpMengeRow1' at Center.", repo.TblTabellenerfassung.FlexGrid1.ColAufpMengeRow1Info, new RecordItemIndex(14));
            repo.TblTabellenerfassung.FlexGrid1.ColAufpMengeRow1.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '2{Tab}' with focus on 'TblTabellenerfassung.FlexGrid1.ColAufpMengeRow1'.", repo.TblTabellenerfassung.FlexGrid1.ColAufpMengeRow1Info, new RecordItemIndex(15));
            repo.TblTabellenerfassung.FlexGrid1.ColAufpMengeRow1.EnsureVisible();
            Keyboard.Press("2{Tab}");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Insert' Press with focus on 'TblTabellenerfassung.FlexGrid'.", repo.TblTabellenerfassung.FlexGridInfo, new RecordItemIndex(16));
            Keyboard.PrepareFocus(repo.TblTabellenerfassung.FlexGrid);
            Keyboard.Press(System.Windows.Forms.Keys.Insert, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'TblTabellenerfassung.FlexGrid1.ColArtNrRow2' at Center.", repo.TblTabellenerfassung.FlexGrid1.ColArtNrRow2Info, new RecordItemIndex(17));
            repo.TblTabellenerfassung.FlexGrid1.ColArtNrRow2.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Art_NR_TabErf_2' with focus on 'TblTabellenerfassung.FlexGrid1.ColArtNrRow2'.", repo.TblTabellenerfassung.FlexGrid1.ColArtNrRow2Info, new RecordItemIndex(18));
            repo.TblTabellenerfassung.FlexGrid1.ColArtNrRow2.EnsureVisible();
            Keyboard.Press(Art_NR_TabErf_2);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 1m to exist. Associated repository item: 'TblTabellenerfassung.FlexGrid1.ColArtNrRow2'", repo.TblTabellenerfassung.FlexGrid1.ColArtNrRow2Info, new ActionTimeout(60000), new RecordItemIndex(19));
            repo.TblTabellenerfassung.FlexGrid1.ColArtNrRow2Info.WaitForExists(60000);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Tab}' with focus on 'TblTabellenerfassung.FlexGrid1.ColArtNrRow2'.", repo.TblTabellenerfassung.FlexGrid1.ColArtNrRow2Info, new RecordItemIndex(20));
            repo.TblTabellenerfassung.FlexGrid1.ColArtNrRow2.PressKeys("{Tab}");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'TblTabellenerfassung.FlexGrid1.ColAufpMengeRow2' at Center.", repo.TblTabellenerfassung.FlexGrid1.ColAufpMengeRow2Info, new RecordItemIndex(21));
            repo.TblTabellenerfassung.FlexGrid1.ColAufpMengeRow2.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '2{Tab}' with focus on 'TblTabellenerfassung.FlexGrid1.ColAufpMengeRow2'.", repo.TblTabellenerfassung.FlexGrid1.ColAufpMengeRow2Info, new RecordItemIndex(22));
            repo.TblTabellenerfassung.FlexGrid1.ColAufpMengeRow2.EnsureVisible();
            Keyboard.Press("2{Tab}");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Insert}' with focus on 'TblTabellenerfassung.FlexGrid'.", repo.TblTabellenerfassung.FlexGridInfo, new RecordItemIndex(23));
            repo.TblTabellenerfassung.FlexGrid.PressKeys("{Insert}");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'TblTabellenerfassung.FlexGrid1.ColArtNrRow3' at Center.", repo.TblTabellenerfassung.FlexGrid1.ColArtNrRow3Info, new RecordItemIndex(24));
            repo.TblTabellenerfassung.FlexGrid1.ColArtNrRow3.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Art_NR_TabErf_3' with focus on 'TblTabellenerfassung.FlexGrid1.ColArtNrRow3'.", repo.TblTabellenerfassung.FlexGrid1.ColArtNrRow3Info, new RecordItemIndex(25));
            repo.TblTabellenerfassung.FlexGrid1.ColArtNrRow3.EnsureVisible();
            Keyboard.Press(Art_NR_TabErf_3);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 1m to exist. Associated repository item: 'TblTabellenerfassung.FlexGrid1.ColArtNrRow3'", repo.TblTabellenerfassung.FlexGrid1.ColArtNrRow3Info, new ActionTimeout(60000), new RecordItemIndex(26));
            repo.TblTabellenerfassung.FlexGrid1.ColArtNrRow3Info.WaitForExists(60000);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Tab}' with focus on 'TblTabellenerfassung.FlexGrid1.ColArtNrRow3'.", repo.TblTabellenerfassung.FlexGrid1.ColArtNrRow3Info, new RecordItemIndex(27));
            repo.TblTabellenerfassung.FlexGrid1.ColArtNrRow3.PressKeys("{Tab}");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'TblTabellenerfassung.FlexGrid1.ColAufpMengeRow3' at Center.", repo.TblTabellenerfassung.FlexGrid1.ColAufpMengeRow3Info, new RecordItemIndex(28));
            repo.TblTabellenerfassung.FlexGrid1.ColAufpMengeRow3.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '2{Tab}' with focus on 'TblTabellenerfassung.FlexGrid1.ColAufpMengeRow3'.", repo.TblTabellenerfassung.FlexGrid1.ColAufpMengeRow3Info, new RecordItemIndex(29));
            repo.TblTabellenerfassung.FlexGrid1.ColAufpMengeRow3.EnsureVisible();
            Keyboard.Press("2{Tab}");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Art_NR_TabErf_1) on item 'TblTabellenerfassung.FlexGrid1.ColArtNrRow1'.", repo.TblTabellenerfassung.FlexGrid1.ColArtNrRow1Info, new RecordItemIndex(30));
            Validate.AttributeEqual(repo.TblTabellenerfassung.FlexGrid1.ColArtNrRow1Info, "Text", Art_NR_TabErf_1);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Art_NR_TabErf_2) on item 'TblTabellenerfassung.FlexGrid1.ColArtNrRow2'.", repo.TblTabellenerfassung.FlexGrid1.ColArtNrRow2Info, new RecordItemIndex(31));
            Validate.AttributeEqual(repo.TblTabellenerfassung.FlexGrid1.ColArtNrRow2Info, "Text", Art_NR_TabErf_2);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Art_NR_TabErf_3) on item 'TblTabellenerfassung.FlexGrid1.ColArtNrRow3'.", repo.TblTabellenerfassung.FlexGrid1.ColArtNrRow3Info, new RecordItemIndex(32));
            Validate.AttributeEqual(repo.TblTabellenerfassung.FlexGrid1.ColArtNrRow3Info, "Text", Art_NR_TabErf_3);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{F12}' with focus on 'TblTabellenerfassung.FlexGrid'.", repo.TblTabellenerfassung.FlexGridInfo, new RecordItemIndex(33));
            repo.TblTabellenerfassung.FlexGrid.EnsureVisible();
            Keyboard.Press("{F12}");
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='ACHTUNG: Kreditlimit um 11,20 EUR überschritten\r\n\r\nWollen Sie die Position trotzdem speichern?') on item 'DlgMessageBox.LabelMeldungstext'.", repo.DlgMessageBox.LabelMeldungstextInfo, new RecordItemIndex(34));
            //Validate.AttributeEqual(repo.DlgMessageBox.LabelMeldungstextInfo, "Text", "ACHTUNG: Kreditlimit um 11,20 EUR überschritten\r\n\r\nWollen Sie die Position trotzdem speichern?");
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'DlgMessageBox.Button0' at Center.", repo.DlgMessageBox.Button0Info, new RecordItemIndex(35));
            //repo.DlgMessageBox.Button0.Click();
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 3m to exist. Associated repository item: 'DlgMessageBox.LabelMeldungstext'", repo.DlgMessageBox.LabelMeldungstextInfo, new ActionTimeout(180000), new RecordItemIndex(36));
            repo.DlgMessageBox.LabelMeldungstextInfo.WaitForExists(180000);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='Keine weiteren Positionen zu erfassen') on item 'DlgMessageBox.LabelMeldungstext'.", repo.DlgMessageBox.LabelMeldungstextInfo, new RecordItemIndex(37));
            Validate.AttributeEqual(repo.DlgMessageBox.LabelMeldungstextInfo, "Text", "Keine weiteren Positionen zu erfassen");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'DlgMessageBox.Button0' at Center.", repo.DlgMessageBox.Button0Info, new RecordItemIndex(38));
            repo.DlgMessageBox.Button0.Click();
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
