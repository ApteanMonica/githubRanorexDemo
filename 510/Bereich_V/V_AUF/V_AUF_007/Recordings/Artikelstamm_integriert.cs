///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace V_AUF_007.Recordings
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Artikelstamm_integriert recording.
    /// </summary>
    [TestModule("118a23cf-e48a-4229-bbed-18858c9bdaeb", ModuleType.Recording, 1)]
    public partial class Artikelstamm_integriert : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::V_AUF_007.V_AUF_007Repository repository.
        /// </summary>
        public static global::V_AUF_007.V_AUF_007Repository repo = global::V_AUF_007.V_AUF_007Repository.Instance;

        static Artikelstamm_integriert instance = new Artikelstamm_integriert();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Artikelstamm_integriert()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Artikelstamm_integriert Instance
        {
            get { return instance; }
        }

#region Variables

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='') on item 'FrmAufk.TpPos.DfArtNr'.", repo.FrmAufk.TpPos.DfArtNrInfo, new RecordItemIndex(0));
            Validate.AttributeEqual(repo.FrmAufk.TpPos.DfArtNrInfo, "Text", "");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmAufk.PbSpec2Artikel' at Center.", repo.FrmAufk.PbSpec2ArtikelInfo, new RecordItemIndex(1));
            repo.FrmAufk.PbSpec2Artikel.Click();
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 1m to exist. Associated repository item: 'FrmArt.TitleBar100ArtikelstammVerwalten'", repo.FrmArt.TitleBar100ArtikelstammVerwaltenInfo, new ActionTimeout(60000), new RecordItemIndex(2));
            repo.FrmArt.TitleBar100ArtikelstammVerwaltenInfo.WaitForExists(60000);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'FrmArt.TitleBar100ArtikelstammVerwalten'.", repo.FrmArt.TitleBar100ArtikelstammVerwaltenInfo, new RecordItemIndex(3));
            //Validate.Exists(repo.FrmArt.TitleBar100ArtikelstammVerwaltenInfo);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='') on item 'FrmArt.DfArtNr'.", repo.FrmArt.DfArtNrInfo, new RecordItemIndex(4));
            Validate.AttributeEqual(repo.FrmArt.DfArtNrInfo, "Text", "");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmArt.Schliessen' at Center.", repo.FrmArt.SchliessenInfo, new RecordItemIndex(5));
            repo.FrmArt.Schliessen.Click();
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left DoubleClick item 'FrmAufk.FlexGrid.Row3Column0' at Center.", repo.FrmAufk.FlexGrid.Row3Column0Info, new RecordItemIndex(6));
            repo.FrmAufk.FlexGrid.Row3Column0.DoubleClick();
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmAufk.PbSpec2Artikel' at Center.", repo.FrmAufk.PbSpec2ArtikelInfo, new RecordItemIndex(7));
            repo.FrmAufk.PbSpec2Artikel.Click();
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 1m to exist. Associated repository item: 'FrmArt.TitleBar100ArtikelstammVerwalten'", repo.FrmArt.TitleBar100ArtikelstammVerwaltenInfo, new ActionTimeout(60000), new RecordItemIndex(8));
            repo.FrmArt.TitleBar100ArtikelstammVerwaltenInfo.WaitForExists(60000);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='100017') on item 'FrmArt.DfArtNr'.", repo.FrmArt.DfArtNrInfo, new RecordItemIndex(9));
            Validate.AttributeEqual(repo.FrmArt.DfArtNrInfo, "Text", "100017");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmArt.Schliessen' at Center.", repo.FrmArt.SchliessenInfo, new RecordItemIndex(10));
            repo.FrmArt.Schliessen.Click();
            
            Report.Log(ReportLevel.Info, "Validation", "Validating NotExists on item 'FrmArt.TitleBar100ArtikelstammVerwalten'.", repo.FrmArt.TitleBar100ArtikelstammVerwaltenInfo, new RecordItemIndex(11));
            Validate.NotExists(repo.FrmArt.TitleBar100ArtikelstammVerwaltenInfo);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmAufk.TpPos.PbLagerPreisInfo' at Center.", repo.FrmAufk.TpPos.PbLagerPreisInfoInfo, new RecordItemIndex(12));
            repo.FrmAufk.TpPos.PbLagerPreisInfo.Click();
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'MditblPreise.TitleBar100PreisLagerInfo'.", repo.MditblPreise.TitleBar100PreisLagerInfoInfo, new RecordItemIndex(13));
            Validate.Exists(repo.MditblPreise.TitleBar100PreisLagerInfoInfo);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='100017') on item 'MditblPreise.Text'.", repo.MditblPreise.TextInfo, new RecordItemIndex(14));
            Validate.AttributeEqual(repo.MditblPreise.TextInfo, "Text", "100017");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='3') on item 'MditblPreise.ColArlgBedarfRow1'.", repo.MditblPreise.ColArlgBedarfRow1Info, new RecordItemIndex(15));
            Validate.AttributeEqual(repo.MditblPreise.ColArlgBedarfRow1Info, "Text", "3");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'MditblPreise.Schliessen' at Center.", repo.MditblPreise.SchliessenInfo, new RecordItemIndex(16));
            repo.MditblPreise.Schliessen.Click();
            
            Report.Log(ReportLevel.Info, "Validation", "Validating NotExists on item 'MditblPreise.TitleBar100PreisLagerInfo'.", repo.MditblPreise.TitleBar100PreisLagerInfoInfo, new RecordItemIndex(17));
            Validate.NotExists(repo.MditblPreise.TitleBar100PreisLagerInfoInfo);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
