///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace V_AUF_007.Recordings
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Import_WELS recording.
    /// </summary>
    [TestModule("a30b7181-e0b0-4416-b425-3cc8120bf0c0", ModuleType.Recording, 1)]
    public partial class Import_WELS : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::V_AUF_007.V_AUF_007Repository repository.
        /// </summary>
        public static global::V_AUF_007.V_AUF_007Repository repo = global::V_AUF_007.V_AUF_007Repository.Instance;

        static Import_WELS instance = new Import_WELS();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Import_WELS()
        {
            Kunde = "200003";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Import_WELS Instance
        {
            get { return instance; }
        }

#region Variables

        string _Kunde;

        /// <summary>
        /// Gets or sets the value of variable Kunde.
        /// </summary>
        [TestVariable("e68fbb1c-511d-40d3-b3ce-1ff34a36c874")]
        public string Kunde
        {
            get { return _Kunde; }
            set { _Kunde = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmAufk.PbNew' at Center.", repo.FrmAufk.PbNewInfo, new RecordItemIndex(0));
            repo.FrmAufk.PbNew.Click();
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmAufk.Kunde' at Center.", repo.FrmAufk.KundeInfo, new RecordItemIndex(1));
            //repo.FrmAufk.Kunde.Click();
            
            //Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Kunde' with focus on 'FrmAufk.Kunde'.", repo.FrmAufk.KundeInfo, new RecordItemIndex(2));
            //repo.FrmAufk.Kunde.PressKeys(Kunde);
            
            //Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Tab}' with focus on 'FrmAufk.Kunde'.", repo.FrmAufk.KundeInfo, new RecordItemIndex(3));
            //repo.FrmAufk.Kunde.PressKeys("{Tab}");
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Kunde) on item 'FrmAufk.Kunde'.", repo.FrmAufk.KundeInfo, new RecordItemIndex(4));
            //Validate.AttributeEqual(repo.FrmAufk.KundeInfo, "Text", Kunde);
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmAufk.Auftragsart' at Center.", repo.FrmAufk.AuftragsartInfo, new RecordItemIndex(5));
            //repo.FrmAufk.Auftragsart.Click();
            
            //Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'N{Tab}' with focus on 'FrmAufk.Auftragsart'.", repo.FrmAufk.AuftragsartInfo, new RecordItemIndex(6));
            //repo.FrmAufk.Auftragsart.PressKeys("N{Tab}");
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='Sie haben die Auftragsart nachträglich geändert. Für einige \r\nDaten gibt es keine Vorschlagswerte aus dieser Auftragsart.\r\n\r\nWollen Sie die Vorschlagswerte des Kunden neu einlesen?') on item 'DlgMessageBox.LabelMeldungstext'.", repo.DlgMessageBox.LabelMeldungstextInfo, new RecordItemIndex(7));
            //Validate.AttributeEqual(repo.DlgMessageBox.LabelMeldungstextInfo, "Text", "Sie haben die Auftragsart nachträglich geändert. Für einige \r\nDaten gibt es keine Vorschlagswerte aus dieser Auftragsart.\r\n\r\nWollen Sie die Vorschlagswerte des Kunden neu einlesen?");
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'DlgMessageBox.Button0' at Center.", repo.DlgMessageBox.Button0Info, new RecordItemIndex(8));
            //repo.DlgMessageBox.Button0.Click();
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmAufk.PbCommonSave' at Center.", repo.FrmAufk.PbCommonSaveInfo, new RecordItemIndex(9));
            //repo.FrmAufk.PbCommonSave.Click();
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmAufk.PbCommon2Import' at Center.", repo.FrmAufk.PbCommon2ImportInfo, new RecordItemIndex(10));
            repo.FrmAufk.PbCommon2Import.Click();
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'VAUF.WareneingangsLieferscheinImportieren' at Center.", repo.VAUF.WareneingangsLieferscheinImportierenInfo, new RecordItemIndex(11));
            repo.VAUF.WareneingangsLieferscheinImportieren.Click();
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='Es wurden Daten geändert!\r\nSollen die Änderungen gespeichert werden?') on item 'DlgMessageBox.LabelMeldungstext'.", repo.DlgMessageBox.LabelMeldungstextInfo, new RecordItemIndex(12));
            //Validate.AttributeEqual(repo.DlgMessageBox.LabelMeldungstextInfo, "Text", "Es wurden Daten geändert!\r\nSollen die Änderungen gespeichert werden?");
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'DlgMessageBox.Button0' at Center.", repo.DlgMessageBox.Button0Info, new RecordItemIndex(13));
            //repo.DlgMessageBox.Button0.Click();
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'DlgImportLS.TitleBar100WareneingangsLieferschein'.", repo.DlgImportLS.TitleBar100WareneingangsLieferscheinInfo, new RecordItemIndex(14));
            Validate.Exists(repo.DlgImportLS.TitleBar100WareneingangsLieferscheinInfo);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'DlgImportLS.Lieferschein' at CenterRight.", repo.DlgImportLS.LieferscheinInfo, new RecordItemIndex(15));
            repo.DlgImportLS.Lieferschein.Click(Location.CenterRight);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'DlgListBox.CellTmpColS1Row11' at Center.", repo.DlgListBox.CellTmpColS1Row11Info, new RecordItemIndex(16));
            repo.DlgListBox.CellTmpColS1Row11.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '3123456' with focus on 'DlgListBox.CellTmpColS1Row11'.", repo.DlgListBox.CellTmpColS1Row11Info, new RecordItemIndex(17));
            repo.DlgListBox.CellTmpColS1Row11.PressKeys("3123456");
            
            //Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Tab}' with focus on 'DlgImportLS.Lieferschein'.", repo.DlgImportLS.LieferscheinInfo, new RecordItemIndex(18));
            //repo.DlgImportLS.Lieferschein.PressKeys("{Tab}");
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 2m to exist. Associated repository item: 'DlgListBox.TitleBar100AuswahllisteLieferschein'", repo.DlgListBox.TitleBar100AuswahllisteLieferscheinInfo, new ActionTimeout(120000), new RecordItemIndex(19));
            repo.DlgListBox.TitleBar100AuswahllisteLieferscheinInfo.WaitForExists(120000);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'DlgListBox.TitleBar100AuswahllisteLieferschein'.", repo.DlgListBox.TitleBar100AuswahllisteLieferscheinInfo, new RecordItemIndex(20));
            Validate.Exists(repo.DlgListBox.TitleBar100AuswahllisteLieferscheinInfo);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='3123456') on item 'DlgListBox.CellTmpColS1Row1'.", repo.DlgListBox.CellTmpColS1Row1Info, new RecordItemIndex(21));
            Validate.AttributeEqual(repo.DlgListBox.CellTmpColS1Row1Info, "Text", "3123456");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'DlgListBox.PbOk' at Center.", repo.DlgListBox.PbOkInfo, new RecordItemIndex(22));
            repo.DlgListBox.PbOk.Click();
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'DlgImportLS.PbOk' at Center.", repo.DlgImportLS.PbOkInfo, new RecordItemIndex(23));
            repo.DlgImportLS.PbOk.Click();
            
            //Report.Log(ReportLevel.Info, "Keyboard", "Key 'Tab' Press.", new RecordItemIndex(24));
            //Keyboard.Press(System.Windows.Forms.Keys.Tab, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='3123456') on item 'DlgListBox.CellTmpColS1Row1'.", repo.DlgListBox.CellTmpColS1Row1Info, new RecordItemIndex(25));
            //Validate.AttributeEqual(repo.DlgListBox.CellTmpColS1Row1Info, "Text", "3123456");
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'DlgListBox.PbOk' at Center.", repo.DlgListBox.PbOkInfo, new RecordItemIndex(26));
            //repo.DlgListBox.PbOk.Click();
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='300006') on item 'DlgImportLS.DfAdrNrELsk'.", repo.DlgImportLS.DfAdrNrELskInfo, new RecordItemIndex(27));
            //Validate.AttributeEqual(repo.DlgImportLS.DfAdrNrELskInfo, "Text", "300006");
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'DlgImportLS.PbOk' at Center.", repo.DlgImportLS.PbOkInfo, new RecordItemIndex(28));
            //repo.DlgImportLS.PbOk.Click();
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='200003') on item 'FrmAufk.DfAufkAdrKunde'.", repo.FrmAufk.DfAufkAdrKundeInfo, new RecordItemIndex(29));
            Validate.AttributeEqual(repo.FrmAufk.DfAufkAdrKundeInfo, "Text", "200003");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmAufk.TabPagePositionen' at Center.", repo.FrmAufk.TabPagePositionenInfo, new RecordItemIndex(30));
            repo.FrmAufk.TabPagePositionen.Click();
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmAufk.PbCommonSave' at Center.", repo.FrmAufk.PbCommonSaveInfo, new RecordItemIndex(31));
            repo.FrmAufk.PbCommonSave.Click();
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
