///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace V_AUF_001.Recordings
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Abschluss recording.
    /// </summary>
    [TestModule("70f7d804-a411-48d2-bd38-b96717049736", ModuleType.Recording, 1)]
    public partial class Abschluss : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::V_AUF_001.V_AUF_001Repository repository.
        /// </summary>
        public static global::V_AUF_001.V_AUF_001Repository repo = global::V_AUF_001.V_AUF_001Repository.Instance;

        static Abschluss instance = new Abschluss();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Abschluss()
        {
            Auftragsnr = "";
            Gesamt = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Abschluss Instance
        {
            get { return instance; }
        }

#region Variables

        string _Auftragsnr;

        /// <summary>
        /// Gets or sets the value of variable Auftragsnr.
        /// </summary>
        [TestVariable("896e6569-9c50-495d-b0ec-a15018fb4e2f")]
        public string Auftragsnr
        {
            get { return _Auftragsnr; }
            set { _Auftragsnr = value; }
        }

        string _Gesamt;

        /// <summary>
        /// Gets or sets the value of variable Gesamt.
        /// </summary>
        [TestVariable("7c9d1203-ecc7-4638-8ffc-d6754033928d")]
        public string Gesamt
        {
            get { return _Gesamt; }
            set { _Gesamt = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Gesamt) on item 'FrmAufk.TpPos.DfAufkWert1D'.", repo.FrmAufk.TpPos.DfAufkWert1DInfo, new RecordItemIndex(0));
            Validate.AttributeEqual(repo.FrmAufk.TpPos.DfAufkWert1DInfo, "Text", Gesamt);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmAufk.PSpec2BelegAbschliessen' at Center.", repo.FrmAufk.PSpec2BelegAbschliessenInfo, new RecordItemIndex(1));
            repo.FrmAufk.PSpec2BelegAbschliessen.Click();
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmAufk.FrmSearchPage.Text' at Center.", repo.FrmAufk.FrmSearchPage.TextInfo, new RecordItemIndex(2));
            repo.FrmAufk.FrmSearchPage.Text.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Auftragsnr' with focus on 'FrmAufk.FrmSearchPage.Text'.", repo.FrmAufk.FrmSearchPage.TextInfo, new RecordItemIndex(3));
            repo.FrmAufk.FrmSearchPage.Text.PressKeys(Auftragsnr);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 2m to exist. Associated repository item: 'FrmAufk.FrmSearchPage.CellTmpColS1Row1'", repo.FrmAufk.FrmSearchPage.CellTmpColS1Row1Info, new ActionTimeout(120000), new RecordItemIndex(4));
            repo.FrmAufk.FrmSearchPage.CellTmpColS1Row1Info.WaitForExists(120000);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Auftragsnr) on item 'FrmAufk.FrmSearchPage.CellTmpColS1Row1'.", repo.FrmAufk.FrmSearchPage.CellTmpColS1Row1Info, new RecordItemIndex(5));
            Validate.AttributeEqual(repo.FrmAufk.FrmSearchPage.CellTmpColS1Row1Info, "Text", Auftragsnr);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left DoubleClick item 'FrmAufk.FrmSearchPage.Row1Column0' at Center.", repo.FrmAufk.FrmSearchPage.Row1Column0Info, new RecordItemIndex(6));
            repo.FrmAufk.FrmSearchPage.Row1Column0.DoubleClick();
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 30s to exist. Associated repository item: 'FrmAufk.TpKopf.Text'", repo.FrmAufk.TpKopf.TextInfo, new ActionTimeout(30000), new RecordItemIndex(7));
            repo.FrmAufk.TpKopf.TextInfo.WaitForExists(30000);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Auftragsnr) on item 'FrmAufk.TpKopf.Text'.", repo.FrmAufk.TpKopf.TextInfo, new RecordItemIndex(8));
            Validate.AttributeEqual(repo.FrmAufk.TpKopf.TextInfo, "Text", Auftragsnr);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Gesamt) on item 'FrmAufk.TpKopf.DfAufkWert1'.", repo.FrmAufk.TpKopf.DfAufkWert1Info, new RecordItemIndex(9));
            Validate.AttributeEqual(repo.FrmAufk.TpKopf.DfAufkWert1Info, "Text", Gesamt);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmAufk.PbNavigationBack' at Center.", repo.FrmAufk.PbNavigationBackInfo, new RecordItemIndex(10));
            repo.FrmAufk.PbNavigationBack.Click();
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
