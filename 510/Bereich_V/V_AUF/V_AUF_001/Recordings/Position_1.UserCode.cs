///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// Your custom recording code should go in this file.
// The designer will only add methods to this file, so your custom code won't be overwritten.
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Repository;
using Ranorex.Core.Testing;

namespace V_AUF_001.Recordings
{
    public partial class Position_1
    {
        /// <summary>
        /// This method gets called right after the recording has been started.
        /// It can be used to execute recording specific initialization code.
        /// </summary>
        private void Init()
        {
            // Your recording specific initialization code goes here.
        }

public void Validate_ColAufpMengeRow1(RepoItemInfo cellInfo)
        {
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Menge1) on item 'cellInfo'.", cellInfo);

            //richtige Variable Name angeben 
            string menge2 = Menge1.Replace(",00","");

            //richtige Repo Path anpassen STATT repo.FrmAufk.TpPos.ColAufpMengeRow1
            string menge3 = repo.FrmAufk.TpPos.ColAufpMengeRow1.Text.Replace(",00","");

            //Validate.AreEqual(menge2, menge3); STATT Validate.AttributeEqual(cellInfo, "Text", Menge1);
            Validate.AreEqual(menge2, menge3);
        }

    }
}
