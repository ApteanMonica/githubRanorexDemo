///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace V_AUF_001.Recordings
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Neuer_Auftrag_2 recording.
    /// </summary>
    [TestModule("5954f452-e0c7-43de-8445-1d2ab91b6a44", ModuleType.Recording, 1)]
    public partial class Neuer_Auftrag_2 : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::V_AUF_001.V_AUF_001Repository repository.
        /// </summary>
        public static global::V_AUF_001.V_AUF_001Repository repo = global::V_AUF_001.V_AUF_001Repository.Instance;

        static Neuer_Auftrag_2 instance = new Neuer_Auftrag_2();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Neuer_Auftrag_2()
        {
            Lieferbedingung = "";
            Versandbedingung = "";
            Auftragnr = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Neuer_Auftrag_2 Instance
        {
            get { return instance; }
        }

#region Variables

        string _Lieferbedingung;

        /// <summary>
        /// Gets or sets the value of variable Lieferbedingung.
        /// </summary>
        [TestVariable("29280437-f094-4ede-b7b8-3561bdd5e914")]
        public string Lieferbedingung
        {
            get { return _Lieferbedingung; }
            set { _Lieferbedingung = value; }
        }

        string _Versandbedingung;

        /// <summary>
        /// Gets or sets the value of variable Versandbedingung.
        /// </summary>
        [TestVariable("1467ba34-9f92-4d2a-9c55-6e0297c8ca4e")]
        public string Versandbedingung
        {
            get { return _Versandbedingung; }
            set { _Versandbedingung = value; }
        }

        string _Auftragnr;

        /// <summary>
        /// Gets or sets the value of variable Auftragnr.
        /// </summary>
        [TestVariable("9ebadcff-d5cb-42e3-82d7-94657b2e74f8")]
        public string Auftragnr
        {
            get { return _Auftragnr; }
            set { _Auftragnr = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmAufk.PbCommonSave' at Center.", repo.FrmAufk.PbCommonSaveInfo, new RecordItemIndex(0));
            repo.FrmAufk.PbCommonSave.Click();
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmAufk.TpKopf.Lieferbed' at Center.", repo.FrmAufk.TpKopf.LieferbedInfo, new RecordItemIndex(1));
            repo.FrmAufk.TpKopf.Lieferbed.Click();
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute Text to '$Lieferbedingung' on item 'FrmAufk.TpKopf.Lieferbed'.", repo.FrmAufk.TpKopf.LieferbedInfo, new RecordItemIndex(2));
            repo.FrmAufk.TpKopf.Lieferbed.Element.SetAttributeValue("Text", Lieferbedingung);
            
            //Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Lieferbedingung' with focus on 'FrmAufk.TpKopf.Lieferbed'.", repo.FrmAufk.TpKopf.LieferbedInfo, new RecordItemIndex(3));
            //repo.FrmAufk.TpKopf.Lieferbed.PressKeys(Lieferbedingung);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmAufk.TpKopf.Versandart' at Center.", repo.FrmAufk.TpKopf.VersandartInfo, new RecordItemIndex(4));
            repo.FrmAufk.TpKopf.Versandart.Click();
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute Text to '$Versandbedingung' on item 'FrmAufk.TpKopf.Versandart'.", repo.FrmAufk.TpKopf.VersandartInfo, new RecordItemIndex(5));
            repo.FrmAufk.TpKopf.Versandart.Element.SetAttributeValue("Text", Versandbedingung);
            
            //Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Versandbedingung' with focus on 'FrmAufk.TpKopf.Versandart'.", repo.FrmAufk.TpKopf.VersandartInfo, new RecordItemIndex(6));
            //repo.FrmAufk.TpKopf.Versandart.PressKeys(Versandbedingung);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmAufk.PbCommonSave' at Center.", repo.FrmAufk.PbCommonSaveInfo, new RecordItemIndex(7));
            repo.FrmAufk.PbCommonSave.Click();
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'Text' from item 'FrmAufk.TpKopf.DfAufkNr' and assigning its value to variable 'Auftragnr'.", repo.FrmAufk.TpKopf.DfAufkNrInfo, new RecordItemIndex(8));
            Auftragnr = repo.FrmAufk.TpKopf.DfAufkNr.Element.GetAttributeValueText("Text");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Lieferbedingung) on item 'FrmAufk.TpKopf.Lieferbed'.", repo.FrmAufk.TpKopf.LieferbedInfo, new RecordItemIndex(9));
            Validate.AttributeEqual(repo.FrmAufk.TpKopf.LieferbedInfo, "Text", Lieferbedingung);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Versandbedingung) on item 'FrmAufk.TpKopf.Versandart'.", repo.FrmAufk.TpKopf.VersandartInfo, new RecordItemIndex(10));
            Validate.AttributeEqual(repo.FrmAufk.TpKopf.VersandartInfo, "Text", Versandbedingung);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmAufk.TabPagePositionen' at Center.", repo.FrmAufk.TabPagePositionenInfo, new RecordItemIndex(11));
            repo.FrmAufk.TabPagePositionen.Click();
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
