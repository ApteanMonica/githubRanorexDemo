///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace V_AUF_001.Recordings
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Position_7 recording.
    /// </summary>
    [TestModule("7226a627-f7b7-4bbd-8674-43cd9e29f204", ModuleType.Recording, 1)]
    public partial class Position_7 : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::V_AUF_001.V_AUF_001Repository repository.
        /// </summary>
        public static global::V_AUF_001.V_AUF_001Repository repo = global::V_AUF_001.V_AUF_001Repository.Instance;

        static Position_7 instance = new Position_7();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Position_7()
        {
            Artikel7 = "";
            Menge7 = "";
            Preis7 = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Position_7 Instance
        {
            get { return instance; }
        }

#region Variables

        string _Artikel7;

        /// <summary>
        /// Gets or sets the value of variable Artikel7.
        /// </summary>
        [TestVariable("e8271b9e-8f48-4e98-ae03-adced45b75a7")]
        public string Artikel7
        {
            get { return _Artikel7; }
            set { _Artikel7 = value; }
        }

        string _Menge7;

        /// <summary>
        /// Gets or sets the value of variable Menge7.
        /// </summary>
        [TestVariable("68d179d6-0680-4a59-a172-84973f5a2f9c")]
        public string Menge7
        {
            get { return _Menge7; }
            set { _Menge7 = value; }
        }

        string _Preis7;

        /// <summary>
        /// Gets or sets the value of variable Preis7.
        /// </summary>
        [TestVariable("43e41d63-9e40-40e3-a048-8243790909fd")]
        public string Preis7
        {
            get { return _Preis7; }
            set { _Preis7 = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmAufk.TpPos.ArtNr' at Center.", repo.FrmAufk.TpPos.ArtNrInfo, new RecordItemIndex(0));
            repo.FrmAufk.TpPos.ArtNr.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Artikel7' with focus on 'FrmAufk.TpPos.ArtNr'.", repo.FrmAufk.TpPos.ArtNrInfo, new RecordItemIndex(1));
            repo.FrmAufk.TpPos.ArtNr.PressKeys(Artikel7);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Tab' Press with focus on 'FrmAufk.TpPos.ArtNr'.", repo.FrmAufk.TpPos.ArtNrInfo, new RecordItemIndex(2));
            Keyboard.PrepareFocus(repo.FrmAufk.TpPos.ArtNr);
            Keyboard.Press(System.Windows.Forms.Keys.Tab, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Menge7' with focus on 'FrmAufk.TpPos.Men'.", repo.FrmAufk.TpPos.MenInfo, new RecordItemIndex(3));
            repo.FrmAufk.TpPos.Men.EnsureVisible();
            Keyboard.Press(Menge7);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Tab' Press with focus on 'FrmAufk.TpPos.Men'.", repo.FrmAufk.TpPos.MenInfo, new RecordItemIndex(4));
            Keyboard.PrepareFocus(repo.FrmAufk.TpPos.Men);
            Keyboard.Press(System.Windows.Forms.Keys.Tab, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmAufk.PbCommonSave' at Center.", repo.FrmAufk.PbCommonSaveInfo, new RecordItemIndex(5));
            repo.FrmAufk.PbCommonSave.Click();
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Artikel7) on item 'FrmAufk.TpPos.ColArtNrRow7'.", repo.FrmAufk.TpPos.ColArtNrRow7Info, new RecordItemIndex(6));
            Validate.AttributeEqual(repo.FrmAufk.TpPos.ColArtNrRow7Info, "Text", Artikel7);
            
            Validate_ColAufpMengeRow7(repo.FrmAufk.TpPos.ColAufpMengeRow7Info);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Preis7) on item 'FrmAufk.TpPos.ColAufpPreisRow7'.", repo.FrmAufk.TpPos.ColAufpPreisRow7Info, new RecordItemIndex(8));
            Validate.AttributeEqual(repo.FrmAufk.TpPos.ColAufpPreisRow7Info, "Text", Preis7);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
