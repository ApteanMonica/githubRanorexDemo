///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace V_AUF_004.Recordings
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Rahmenauftrag2 recording.
    /// </summary>
    [TestModule("8926ff17-792b-40ca-b0c3-bad86ff9969e", ModuleType.Recording, 1)]
    public partial class Rahmenauftrag2 : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::V_AUF_004.V_AUF_004Repository repository.
        /// </summary>
        public static global::V_AUF_004.V_AUF_004Repository repo = global::V_AUF_004.V_AUF_004Repository.Instance;

        static Rahmenauftrag2 instance = new Rahmenauftrag2();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Rahmenauftrag2()
        {
            Art_Nr_RA_Diverser_Artikel = "100002";
            Art_Nr_RA_Pos2 = "100003";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Rahmenauftrag2 Instance
        {
            get { return instance; }
        }

#region Variables

        string _Art_Nr_RA_Diverser_Artikel;

        /// <summary>
        /// Gets or sets the value of variable Art_Nr_RA_Diverser_Artikel.
        /// </summary>
        [TestVariable("89810460-6b98-41e4-8d59-f5b18d90e019")]
        public string Art_Nr_RA_Diverser_Artikel
        {
            get { return _Art_Nr_RA_Diverser_Artikel; }
            set { _Art_Nr_RA_Diverser_Artikel = value; }
        }

        string _Art_Nr_RA_Pos2;

        /// <summary>
        /// Gets or sets the value of variable Art_Nr_RA_Pos2.
        /// </summary>
        [TestVariable("da77a82b-f1fd-47d5-974e-6c362ddde463")]
        public string Art_Nr_RA_Pos2
        {
            get { return _Art_Nr_RA_Pos2; }
            set { _Art_Nr_RA_Pos2 = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmAufk.TpPos.ArtNr' at Center.", repo.FrmAufk.TpPos.ArtNrInfo, new RecordItemIndex(0));
            repo.FrmAufk.TpPos.ArtNr.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Art_Nr_RA_Diverser_Artikel' with focus on 'FrmAufk.TpPos.ArtNr'.", repo.FrmAufk.TpPos.ArtNrInfo, new RecordItemIndex(1));
            repo.FrmAufk.TpPos.ArtNr.PressKeys(Art_Nr_RA_Diverser_Artikel);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmAufk.TpPos.ArtNr' at Center.", repo.FrmAufk.TpPos.ArtNrInfo, new RecordItemIndex(2));
            repo.FrmAufk.TpPos.ArtNr.Click();
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Art_Nr_RA_Diverser_Artikel) on item 'FrmAufk.TpPos.ArtNr'.", repo.FrmAufk.TpPos.ArtNrInfo, new RecordItemIndex(3));
            Validate.AttributeEqual(repo.FrmAufk.TpPos.ArtNrInfo, "Text", Art_Nr_RA_Diverser_Artikel);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmAufk.TpPos.Menge' at Center.", repo.FrmAufk.TpPos.MengeInfo, new RecordItemIndex(4));
            repo.FrmAufk.TpPos.Menge.Click();
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='Ein diverser Artikel kann in Rahmenaufträgen nicht verwendet werden !') on item 'DlgMessageBox.LabelMeldungstext'.", repo.DlgMessageBox.LabelMeldungstextInfo, new RecordItemIndex(5));
            Validate.AttributeEqual(repo.DlgMessageBox.LabelMeldungstextInfo, "Text", "Ein diverser Artikel kann in Rahmenaufträgen nicht verwendet werden !");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'DlgMessageBox.Button0' at Center.", repo.DlgMessageBox.Button0Info, new RecordItemIndex(6));
            repo.DlgMessageBox.Button0.Click();
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmAufk.TpPos.ArtNr' at Center.", repo.FrmAufk.TpPos.ArtNrInfo, new RecordItemIndex(7));
            repo.FrmAufk.TpPos.ArtNr.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{LControlKey down}{Akey}{LControlKey up}{Delete}' with focus on 'FrmAufk.TpPos.ArtNr'.", repo.FrmAufk.TpPos.ArtNrInfo, new RecordItemIndex(8));
            repo.FrmAufk.TpPos.ArtNr.PressKeys("{LControlKey down}{Akey}{LControlKey up}{Delete}");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Art_Nr_RA_Pos2' with focus on 'FrmAufk.TpPos.ArtNr'.", repo.FrmAufk.TpPos.ArtNrInfo, new RecordItemIndex(9));
            repo.FrmAufk.TpPos.ArtNr.PressKeys(Art_Nr_RA_Pos2);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Art_Nr_RA_Pos2) on item 'FrmAufk.TpPos.ArtNr'.", repo.FrmAufk.TpPos.ArtNrInfo, new RecordItemIndex(10));
            Validate.AttributeEqual(repo.FrmAufk.TpPos.ArtNrInfo, "Text", Art_Nr_RA_Pos2);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmAufk.TpPos.Menge' at Center.", repo.FrmAufk.TpPos.MengeInfo, new RecordItemIndex(11));
            repo.FrmAufk.TpPos.Menge.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '2{Tab}' with focus on 'FrmAufk.TpPos.Menge'.", repo.FrmAufk.TpPos.MengeInfo, new RecordItemIndex(12));
            repo.FrmAufk.TpPos.Menge.PressKeys("2{Tab}");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='13,000') on item 'FrmAufk.TpPos.Preis'.", repo.FrmAufk.TpPos.PreisInfo, new RecordItemIndex(13));
            Validate.AttributeEqual(repo.FrmAufk.TpPos.PreisInfo, "Text", "13,000");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmAufk.TpPos.Meldemenge' at Center.", repo.FrmAufk.TpPos.MeldemengeInfo, new RecordItemIndex(14));
            repo.FrmAufk.TpPos.Meldemenge.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '10' with focus on 'FrmAufk.TpPos.Meldemenge'.", repo.FrmAufk.TpPos.MeldemengeInfo, new RecordItemIndex(15));
            repo.FrmAufk.TpPos.Meldemenge.PressKeys("10");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmAufk.PbCommonSave' at Center.", repo.FrmAufk.PbCommonSaveInfo, new RecordItemIndex(16));
            repo.FrmAufk.PbCommonSave.Click();
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Art_Nr_RA_Pos2) on item 'FrmAufk.TpPos.ColArtNrRow2'.", repo.FrmAufk.TpPos.ColArtNrRow2Info, new RecordItemIndex(17));
            Validate.AttributeEqual(repo.FrmAufk.TpPos.ColArtNrRow2Info, "Text", Art_Nr_RA_Pos2);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmAufk.PSpec2BelegAbschliessen' at Center.", repo.FrmAufk.PSpec2BelegAbschliessenInfo, new RecordItemIndex(18));
            repo.FrmAufk.PSpec2BelegAbschliessen.Click();
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='') on item 'FrmAufk.TpKopf.DfAufkNr'.", repo.FrmAufk.TpKopf.DfAufkNrInfo, new RecordItemIndex(19));
            Validate.AttributeEqual(repo.FrmAufk.TpKopf.DfAufkNrInfo, "Text", "");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmAufk.PbNavigationBack' at Center.", repo.FrmAufk.PbNavigationBackInfo, new RecordItemIndex(20));
            repo.FrmAufk.PbNavigationBack.Click();
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
