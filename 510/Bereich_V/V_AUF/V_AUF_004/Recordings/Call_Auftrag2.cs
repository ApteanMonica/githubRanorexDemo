///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace V_AUF_004.Recordings
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Call_Auftrag2 recording.
    /// </summary>
    [TestModule("ed6dcbf3-83f2-490c-a12c-c0ab0a31ad6d", ModuleType.Recording, 1)]
    public partial class Call_Auftrag2 : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::V_AUF_004.V_AUF_004Repository repository.
        /// </summary>
        public static global::V_AUF_004.V_AUF_004Repository repo = global::V_AUF_004.V_AUF_004Repository.Instance;

        static Call_Auftrag2 instance = new Call_Auftrag2();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Call_Auftrag2()
        {
            Art_Nr_RA_Pos2 = "100003";
            Art_Nr_C = "100114";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Call_Auftrag2 Instance
        {
            get { return instance; }
        }

#region Variables

        string _Art_Nr_RA_Pos2;

        /// <summary>
        /// Gets or sets the value of variable Art_Nr_RA_Pos2.
        /// </summary>
        [TestVariable("ffa3f086-f261-4235-aeb5-c0c22f20d84a")]
        public string Art_Nr_RA_Pos2
        {
            get { return _Art_Nr_RA_Pos2; }
            set { _Art_Nr_RA_Pos2 = value; }
        }

        string _Art_Nr_C;

        /// <summary>
        /// Gets or sets the value of variable Art_Nr_C.
        /// </summary>
        [TestVariable("ba2f28ba-9b0d-4c15-86cd-e598a4c29456")]
        public string Art_Nr_C
        {
            get { return _Art_Nr_C; }
            set { _Art_Nr_C = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left DoubleClick item 'FrmAufk.TpPos.ArtNr' at Center.", repo.FrmAufk.TpPos.ArtNrInfo, new RecordItemIndex(0));
            repo.FrmAufk.TpPos.ArtNr.DoubleClick();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{LControlKey down}{Akey}{LControlKey up}{Delete}' with focus on 'FrmAufk.TpPos.ArtNr'.", repo.FrmAufk.TpPos.ArtNrInfo, new RecordItemIndex(1));
            repo.FrmAufk.TpPos.ArtNr.PressKeys("{LControlKey down}{Akey}{LControlKey up}{Delete}");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Art_Nr_C' with focus on 'FrmAufk.TpPos.ArtNr'.", repo.FrmAufk.TpPos.ArtNrInfo, new RecordItemIndex(2));
            repo.FrmAufk.TpPos.ArtNr.PressKeys(Art_Nr_C);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Tab}' with focus on 'FrmAufk.TpPos.ArtNr'.", repo.FrmAufk.TpPos.ArtNrInfo, new RecordItemIndex(3));
            repo.FrmAufk.TpPos.ArtNr.PressKeys("{Tab}");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Art_Nr_C) on item 'FrmAufk.TpPos.ArtNr'.", repo.FrmAufk.TpPos.ArtNrInfo, new RecordItemIndex(4));
            Validate.AttributeEqual(repo.FrmAufk.TpPos.ArtNrInfo, "Text", Art_Nr_C);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='Call_Abrechnung') on item 'FrmAufk.TpPos.Bezeichnung_Artikel_'.", repo.FrmAufk.TpPos.Bezeichnung_Artikel_Info, new RecordItemIndex(5));
            Validate.AttributeEqual(repo.FrmAufk.TpPos.Bezeichnung_Artikel_Info, "Text", "Call_Abrechnung");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmAufk.TpPos.Menge' at Center.", repo.FrmAufk.TpPos.MengeInfo, new RecordItemIndex(6));
            repo.FrmAufk.TpPos.Menge.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '1{Tab}' with focus on 'FrmAufk.TpPos.Menge'.", repo.FrmAufk.TpPos.MengeInfo, new RecordItemIndex(7));
            repo.FrmAufk.TpPos.Menge.PressKeys("1{Tab}");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='STD') on item 'FrmAufk.TpPos.MEH'.", repo.FrmAufk.TpPos.MEHInfo, new RecordItemIndex(8));
            Validate.AttributeEqual(repo.FrmAufk.TpPos.MEHInfo, "Text", "STD");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='150,000') on item 'FrmAufk.TpPos.Preis'.", repo.FrmAufk.TpPos.PreisInfo, new RecordItemIndex(9));
            Validate.AttributeEqual(repo.FrmAufk.TpPos.PreisInfo, "Text", "150,000");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmAufk.PbCommonSave' at Center.", repo.FrmAufk.PbCommonSaveInfo, new RecordItemIndex(10));
            repo.FrmAufk.PbCommonSave.Click();
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Art_Nr_C) on item 'FrmAufk.TpPos.ColArtNrRow1'.", repo.FrmAufk.TpPos.ColArtNrRow1Info, new RecordItemIndex(11));
            Validate.AttributeEqual(repo.FrmAufk.TpPos.ColArtNrRow1Info, "Text", Art_Nr_C);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmAufk.PSpec2BelegAbschliessen' at Center.", repo.FrmAufk.PSpec2BelegAbschliessenInfo, new RecordItemIndex(12));
            repo.FrmAufk.PSpec2BelegAbschliessen.Click();
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
