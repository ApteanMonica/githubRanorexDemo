///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace V_AUF_004.Recordings
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Rahmenauftrag recording.
    /// </summary>
    [TestModule("a9952c3d-d9bd-46ab-b6ec-b69d61db2e2d", ModuleType.Recording, 1)]
    public partial class Rahmenauftrag : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::V_AUF_004.V_AUF_004Repository repository.
        /// </summary>
        public static global::V_AUF_004.V_AUF_004Repository repo = global::V_AUF_004.V_AUF_004Repository.Instance;

        static Rahmenauftrag instance = new Rahmenauftrag();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Rahmenauftrag()
        {
            Kunde_Rahmenauftrag = "200002";
            Art_Nr_RA_Pos1 = "100001";
            Tagesdatum = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Rahmenauftrag Instance
        {
            get { return instance; }
        }

#region Variables

        string _Kunde_Rahmenauftrag;

        /// <summary>
        /// Gets or sets the value of variable Kunde_Rahmenauftrag.
        /// </summary>
        [TestVariable("236fd297-3528-4252-b00c-31e8d5e7130d")]
        public string Kunde_Rahmenauftrag
        {
            get { return _Kunde_Rahmenauftrag; }
            set { _Kunde_Rahmenauftrag = value; }
        }

        string _Art_Nr_RA_Pos1;

        /// <summary>
        /// Gets or sets the value of variable Art_Nr_RA_Pos1.
        /// </summary>
        [TestVariable("e6e8f498-83ec-4024-b689-f054ddf738c0")]
        public string Art_Nr_RA_Pos1
        {
            get { return _Art_Nr_RA_Pos1; }
            set { _Art_Nr_RA_Pos1 = value; }
        }

        string _Tagesdatum;

        /// <summary>
        /// Gets or sets the value of variable Tagesdatum.
        /// </summary>
        [TestVariable("a35be5bb-b3c6-4561-ae45-21f477cfc2b3")]
        public string Tagesdatum
        {
            get { return _Tagesdatum; }
            set { _Tagesdatum = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmAufk.PbNew' at Center.", repo.FrmAufk.PbNewInfo, new RecordItemIndex(0));
            repo.FrmAufk.PbNew.Click();
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmAufk.TpKopf.Kunde' at Center.", repo.FrmAufk.TpKopf.KundeInfo, new RecordItemIndex(1));
            repo.FrmAufk.TpKopf.Kunde.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Kunde_Rahmenauftrag' with focus on 'FrmAufk.TpKopf.Kunde'.", repo.FrmAufk.TpKopf.KundeInfo, new RecordItemIndex(2));
            repo.FrmAufk.TpKopf.Kunde.PressKeys(Kunde_Rahmenauftrag);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Kunde_Rahmenauftrag) on item 'FrmAufk.TpKopf.Kunde'.", repo.FrmAufk.TpKopf.KundeInfo, new RecordItemIndex(3));
            Validate.AttributeEqual(repo.FrmAufk.TpKopf.KundeInfo, "Text", Kunde_Rahmenauftrag);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmAufk.TpKopf.Auftragsart' at Center.", repo.FrmAufk.TpKopf.AuftragsartInfo, new RecordItemIndex(4));
            repo.FrmAufk.TpKopf.Auftragsart.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{LControlKey down}{Akey}{LControlKey up}{Delete}' with focus on 'FrmAufk.TpKopf.Auftragsart'.", repo.FrmAufk.TpKopf.AuftragsartInfo, new RecordItemIndex(5));
            repo.FrmAufk.TpKopf.Auftragsart.PressKeys("{LControlKey down}{Akey}{LControlKey up}{Delete}");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'RA' with focus on 'FrmAufk.TpKopf.Auftragsart'.", repo.FrmAufk.TpKopf.AuftragsartInfo, new RecordItemIndex(6));
            repo.FrmAufk.TpKopf.Auftragsart.PressKeys("RA");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='RA') on item 'FrmAufk.TpKopf.Auftragsart'.", repo.FrmAufk.TpKopf.AuftragsartInfo, new RecordItemIndex(7));
            Validate.AttributeEqual(repo.FrmAufk.TpKopf.AuftragsartInfo, "Text", "RA");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmAufk.TabPagePositionen' at Center.", repo.FrmAufk.TabPagePositionenInfo, new RecordItemIndex(8));
            repo.FrmAufk.TabPagePositionen.Click();
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='Sie haben die Auftragsart nachträglich geändert. Für einige \r\nDaten gibt es keine Vorschlagswerte aus dieser Auftragsart.\r\n\r\nWollen Sie die Vorschlagswerte des Kunden neu einlesen?') on item 'DlgMessageBox.LabelMeldungstext'.", repo.DlgMessageBox.LabelMeldungstextInfo, new RecordItemIndex(9));
            Validate.AttributeEqual(repo.DlgMessageBox.LabelMeldungstextInfo, "Text", "Sie haben die Auftragsart nachträglich geändert. Für einige \r\nDaten gibt es keine Vorschlagswerte aus dieser Auftragsart.\r\n\r\nWollen Sie die Vorschlagswerte des Kunden neu einlesen?");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'DlgMessageBox.Button0' at Center.", repo.DlgMessageBox.Button0Info, new RecordItemIndex(10));
            repo.DlgMessageBox.Button0.Click();
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='In die markierten, eingabepflichtigen Felder wurden keine Daten eingegeben!') on item 'DlgMessageBox.LabelMeldungstext'.", repo.DlgMessageBox.LabelMeldungstextInfo, new RecordItemIndex(11));
            Validate.AttributeEqual(repo.DlgMessageBox.LabelMeldungstextInfo, "Text", "In die markierten, eingabepflichtigen Felder wurden keine Daten eingegeben!");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'DlgMessageBox.Button0' at Center.", repo.DlgMessageBox.Button0Info, new RecordItemIndex(12));
            repo.DlgMessageBox.Button0.Click();
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmAufk.TpKopf.RahmenGueltigVon' at Center.", repo.FrmAufk.TpKopf.RahmenGueltigVonInfo, new RecordItemIndex(13));
            repo.FrmAufk.TpKopf.RahmenGueltigVon.Click();
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Right Click item 'FrmAufk.TpKopf.RahmenGueltigVon' at Center.", repo.FrmAufk.TpKopf.RahmenGueltigVonInfo, new RecordItemIndex(14));
            repo.FrmAufk.TpKopf.RahmenGueltigVon.Click(System.Windows.Forms.MouseButtons.Right);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'VAUF.AktuellesDatum' at Center.", repo.VAUF.AktuellesDatumInfo, new RecordItemIndex(15));
            repo.VAUF.AktuellesDatum.Click();
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmAufk.PbCommonSave' at Center.", repo.FrmAufk.PbCommonSaveInfo, new RecordItemIndex(16));
            repo.FrmAufk.PbCommonSave.Click();
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (Text>$Tagesdatum) on item 'FrmAufk.TpKopf.RahmenGueltigVon'.", repo.FrmAufk.TpKopf.RahmenGueltigVonInfo, new RecordItemIndex(17));
            Validate.AttributeContains(repo.FrmAufk.TpKopf.RahmenGueltigVonInfo, "Text", Tagesdatum);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmAufk.TabPagePositionen' at Center.", repo.FrmAufk.TabPagePositionenInfo, new RecordItemIndex(18));
            repo.FrmAufk.TabPagePositionen.Click();
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmAufk.TpPos.ArtNr' at Center.", repo.FrmAufk.TpPos.ArtNrInfo, new RecordItemIndex(19));
            repo.FrmAufk.TpPos.ArtNr.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Art_Nr_RA_Pos1' with focus on 'FrmAufk.TpPos.ArtNr'.", repo.FrmAufk.TpPos.ArtNrInfo, new RecordItemIndex(20));
            repo.FrmAufk.TpPos.ArtNr.PressKeys(Art_Nr_RA_Pos1);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Tab}' with focus on 'FrmAufk.TpPos.ArtNr'.", repo.FrmAufk.TpPos.ArtNrInfo, new RecordItemIndex(21));
            repo.FrmAufk.TpPos.ArtNr.PressKeys("{Tab}");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='Normaler Lagerartikel') on item 'FrmAufk.TpPos.Bezeichnung_Artikel_'.", repo.FrmAufk.TpPos.Bezeichnung_Artikel_Info, new RecordItemIndex(22));
            Validate.AttributeEqual(repo.FrmAufk.TpPos.Bezeichnung_Artikel_Info, "Text", "Normaler Lagerartikel");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmAufk.TpPos.Menge' at Center.", repo.FrmAufk.TpPos.MengeInfo, new RecordItemIndex(23));
            repo.FrmAufk.TpPos.Menge.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '2{Tab}' with focus on 'FrmAufk.TpPos.Menge'.", repo.FrmAufk.TpPos.MengeInfo, new RecordItemIndex(24));
            repo.FrmAufk.TpPos.Menge.PressKeys("2{Tab}");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='11,000') on item 'FrmAufk.TpPos.Preis'.", repo.FrmAufk.TpPos.PreisInfo, new RecordItemIndex(25));
            Validate.AttributeEqual(repo.FrmAufk.TpPos.PreisInfo, "Text", "11,000");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmAufk.PbCommonSave' at Center.", repo.FrmAufk.PbCommonSaveInfo, new RecordItemIndex(26));
            repo.FrmAufk.PbCommonSave.Click();
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Art_Nr_RA_Pos1) on item 'FrmAufk.TpPos.ColArtNrRow1'.", repo.FrmAufk.TpPos.ColArtNrRow1Info, new RecordItemIndex(27));
            Validate.AttributeEqual(repo.FrmAufk.TpPos.ColArtNrRow1Info, "Text", Art_Nr_RA_Pos1);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
