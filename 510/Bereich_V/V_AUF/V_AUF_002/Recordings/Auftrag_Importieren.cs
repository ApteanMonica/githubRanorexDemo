///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace V_AUF_002.Recordings
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Auftrag_Importieren recording.
    /// </summary>
    [TestModule("b114cef5-0bf6-4877-9305-ccd3124470b0", ModuleType.Recording, 1)]
    public partial class Auftrag_Importieren : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::V_AUF_002.V_AUF_002Repository repository.
        /// </summary>
        public static global::V_AUF_002.V_AUF_002Repository repo = global::V_AUF_002.V_AUF_002Repository.Instance;

        static Auftrag_Importieren instance = new Auftrag_Importieren();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Auftrag_Importieren()
        {
            Auftragsnummer = "";
            Auftrag_Import = "201900001";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Auftrag_Importieren Instance
        {
            get { return instance; }
        }

#region Variables

        string _Auftrag_Import;

        /// <summary>
        /// Gets or sets the value of variable Auftrag_Import.
        /// </summary>
        [TestVariable("b2f86a11-f546-4adc-aba6-fac7aecd199d")]
        public string Auftrag_Import
        {
            get { return _Auftrag_Import; }
            set { _Auftrag_Import = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable Auftragsnummer.
        /// </summary>
        [TestVariable("91eb6849-8e63-4739-aad9-5ade74ae3df3")]
        public string Auftragsnummer
        {
            get { return repo.Auftragsnummer; }
            set { repo.Auftragsnummer = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmAufk.PbSpec3Weitere' at Center.", repo.FrmAufk.PbSpec3WeitereInfo, new RecordItemIndex(0));
            repo.FrmAufk.PbSpec3Weitere.Click();
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'VAUF.Importieren' at Center.", repo.VAUF.ImportierenInfo, new RecordItemIndex(1));
            repo.VAUF.Importieren.Click();
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'DlgAufpCopy.Auftrag' at Center.", repo.DlgAufpCopy.AuftragInfo, new RecordItemIndex(2));
            repo.DlgAufpCopy.Auftrag.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Auftrag_Import' with focus on 'DlgAufpCopy.Auftrag'.", repo.DlgAufpCopy.AuftragInfo, new RecordItemIndex(3));
            repo.DlgAufpCopy.Auftrag.PressKeys(Auftrag_Import);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Tab}' with focus on 'DlgAufpCopy.Auftrag'.", repo.DlgAufpCopy.AuftragInfo, new RecordItemIndex(4));
            repo.DlgAufpCopy.Auftrag.PressKeys("{Tab}");
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'DlgAufpCopy.Auftrag' at CenterRight.", repo.DlgAufpCopy.AuftragInfo, new RecordItemIndex(5));
            //repo.DlgAufpCopy.Auftrag.Click(Location.CenterRight);
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'VAUF1.DropDown' at LowerCenter.", repo.VAUF1.DropDownInfo, new RecordItemIndex(6));
            //repo.VAUF1.DropDown.Click(Location.LowerCenter);
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'DlgAufpCopy.Auftrag' at Center.", repo.DlgAufpCopy.AuftragInfo, new RecordItemIndex(7));
            //repo.DlgAufpCopy.Auftrag.Click();
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Auftrag_Import) on item 'DlgAufpCopy.Auftrag'.", repo.DlgAufpCopy.AuftragInfo, new RecordItemIndex(8));
            Validate.AttributeEqual(repo.DlgAufpCopy.AuftragInfo, "Text", Auftrag_Import);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'DlgAufpCopy.TabPagePositionen' at Center.", repo.DlgAufpCopy.TabPagePositionenInfo, new RecordItemIndex(9));
            repo.DlgAufpCopy.TabPagePositionen.Click();
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'DlgAufpCopy.PbOk' at Center.", repo.DlgAufpCopy.PbOkInfo, new RecordItemIndex(10));
            repo.DlgAufpCopy.PbOk.Click();
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (Text>'Keine weiteren Positionen zum Kopieren') on item 'DlgMessageBox.LabelMeldungstext'.", repo.DlgMessageBox.LabelMeldungstextInfo, new RecordItemIndex(11));
            Validate.AttributeContains(repo.DlgMessageBox.LabelMeldungstextInfo, "Text", "Keine weiteren Positionen zum Kopieren");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'DlgMessageBox.Button0' at Center.", repo.DlgMessageBox.Button0Info, new RecordItemIndex(12));
            repo.DlgMessageBox.Button0.Click();
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
