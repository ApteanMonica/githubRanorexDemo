///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace Y_MENU_001.Recordings
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Autostart recording.
    /// </summary>
    [TestModule("7b84e6fd-1654-4c8d-af46-cf6d8b729c57", ModuleType.Recording, 1)]
    public partial class Autostart : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::Y_MENU_001.Y_MENU_001Repository repository.
        /// </summary>
        public static global::Y_MENU_001.Y_MENU_001Repository repo = global::Y_MENU_001.Y_MENU_001Repository.Instance;

        static Autostart instance = new Autostart();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Autostart()
        {
            Programm = "MENU";
            Startfile = "C:\\Testdaten\\Allgemein\\Start.bat";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Autostart Instance
        {
            get { return instance; }
        }

#region Variables

        string _Programm;

        /// <summary>
        /// Gets or sets the value of variable Programm.
        /// </summary>
        [TestVariable("56ae5a7b-05e4-4d18-a273-810b8f1f7f11")]
        public string Programm
        {
            get { return _Programm; }
            set { _Programm = value; }
        }

        string _Startfile;

        /// <summary>
        /// Gets or sets the value of variable Startfile.
        /// </summary>
        [TestVariable("a1f7a21b-9cc5-4506-8882-3f03e44024a5")]
        public string Startfile
        {
            get { return _Startfile; }
            set { _Startfile = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'DlgRs2ReleaseInfo.Schliessen' at Center.", repo.DlgRs2ReleaseInfo.SchliessenInfo, new RecordItemIndex(0));
            repo.DlgRs2ReleaseInfo.Schliessen.Click();
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Right Click item 'FormWorkplace.DockContainerWorkplace.Artikel' at Center.", repo.FormWorkplace.DockContainerWorkplace.ArtikelInfo, new RecordItemIndex(1));
            repo.FormWorkplace.DockContainerWorkplace.Artikel.Click(System.Windows.Forms.MouseButtons.Right);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'MENU.HinzufuegenZuAutostart' at Center.", repo.MENU.HinzufuegenZuAutostartInfo, new RecordItemIndex(2));
            repo.MENU.HinzufuegenZuAutostart.Click();
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='Artikel') on item 'FormWorkplace.DockContainerWorkplace.Artikel1'.", repo.FormWorkplace.DockContainerWorkplace.Artikel1Info, new RecordItemIndex(3));
            Validate.AttributeEqual(repo.FormWorkplace.DockContainerWorkplace.Artikel1Info, "Text", "Artikel");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FormWorkplace.Schliessen' at Center.", repo.FormWorkplace.SchliessenInfo, new RecordItemIndex(4));
            repo.FormWorkplace.Schliessen.Click();
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'DlgMessageBox'.", repo.DlgMessageBox.SelfInfo, new RecordItemIndex(5));
            Validate.Exists(repo.DlgMessageBox.SelfInfo);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'DlgMessageBox.Button0' at Center.", repo.DlgMessageBox.Button0Info, new RecordItemIndex(6));
            repo.DlgMessageBox.Button0.Click();
            
            Report.Log(ReportLevel.Info, "Application", "Run application with file name from variable $Startfile with arguments from variable $Programm in normal mode.", new RecordItemIndex(7));
            Host.Local.RunApplication(Startfile, Programm, "", false);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 30s to not exist. Associated repository item: 'DlgRs2ReleaseInfo.Schliessen'", repo.DlgRs2ReleaseInfo.SchliessenInfo, new ActionTimeout(30000), new RecordItemIndex(8));
            repo.DlgRs2ReleaseInfo.SchliessenInfo.WaitForNotExists(30000);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'DlgRs2ReleaseInfo.Schliessen' at Center.", repo.DlgRs2ReleaseInfo.SchliessenInfo, new RecordItemIndex(9));
            repo.DlgRs2ReleaseInfo.Schliessen.Click();
            
            //Report.Log(ReportLevel.Info, "Wait", "Waiting 2m to exist. Associated repository item: 'FormWorkplace.TitleBar100RSREFDBRs2Ver'", repo.FormWorkplace.TitleBar100RSREFDBRs2VerInfo, new ActionTimeout(120000), new RecordItemIndex(10));
            //repo.FormWorkplace.TitleBar100RSREFDBRs2VerInfo.WaitForExists(120000);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeRegex (Text~'') on item 'FormWorkplace.TitleBar100RSREFDBRs2Ver'.", repo.FormWorkplace.TitleBar100RSREFDBRs2VerInfo, new RecordItemIndex(11));
            Validate.AttributeRegex(repo.FormWorkplace.TitleBar100RSREFDBRs2VerInfo, "Text", new Regex(""));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='Artikel') on item 'FormWorkplace.DockContainerWorkplace.Task6'.", repo.FormWorkplace.DockContainerWorkplace.Task6Info, new RecordItemIndex(12));
            Validate.AttributeEqual(repo.FormWorkplace.DockContainerWorkplace.Task6Info, "Text", "Artikel");
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
