///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace L_DISP_002.Recordings
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The BV_auftragsbezogen_erstellen recording.
    /// </summary>
    [TestModule("915009af-d11f-4123-841b-228726fc183d", ModuleType.Recording, 1)]
    public partial class BV_auftragsbezogen_erstellen : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::L_DISP_002.L_DISP_002Repository repository.
        /// </summary>
        public static global::L_DISP_002.L_DISP_002Repository repo = global::L_DISP_002.L_DISP_002Repository.Instance;

        static BV_auftragsbezogen_erstellen instance = new BV_auftragsbezogen_erstellen();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public BV_auftragsbezogen_erstellen()
        {
            Dispo_art = "BVS";
            Auftragsnr1 = "A20/00012";
            Artikel1 = "100020";
            Artikel5 = "100024";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static BV_auftragsbezogen_erstellen Instance
        {
            get { return instance; }
        }

#region Variables

        string _Dispo_art;

        /// <summary>
        /// Gets or sets the value of variable Dispo_art.
        /// </summary>
        [TestVariable("eabb4d73-1036-4a8d-a83f-69a0dba25b67")]
        public string Dispo_art
        {
            get { return _Dispo_art; }
            set { _Dispo_art = value; }
        }

        string _Auftragsnr1;

        /// <summary>
        /// Gets or sets the value of variable Auftragsnr1.
        /// </summary>
        [TestVariable("e4599cd3-b927-4acf-a7c5-200ffe225b94")]
        public string Auftragsnr1
        {
            get { return _Auftragsnr1; }
            set { _Auftragsnr1 = value; }
        }

        string _Artikel1;

        /// <summary>
        /// Gets or sets the value of variable Artikel1.
        /// </summary>
        [TestVariable("3809a6d9-e6e6-4897-8070-d8d4258598bc")]
        public string Artikel1
        {
            get { return _Artikel1; }
            set { _Artikel1 = value; }
        }

        string _Artikel5;

        /// <summary>
        /// Gets or sets the value of variable Artikel5.
        /// </summary>
        [TestVariable("ec9263d9-2b3e-48b9-a17b-eee2df2a0f5f")]
        public string Artikel5
        {
            get { return _Artikel5; }
            set { _Artikel5 = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmDispo.Text' at Center.", repo.FrmDispo.TextInfo, new RecordItemIndex(0));
            repo.FrmDispo.Text.Click();
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeRegex (Text~$Dispo_art) on item 'FrmDispo.Text'.", repo.FrmDispo.TextInfo, new RecordItemIndex(1));
            Validate.AttributeRegex(repo.FrmDispo.TextInfo, "Text", new Regex(Dispo_art));
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmDispo.CbBsvkBestand' at Center.", repo.FrmDispo.CbBsvkBestandInfo, new RecordItemIndex(2));
            repo.FrmDispo.CbBsvkBestand.Click();
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmDispo.CbBsvkAuftrag' at Center.", repo.FrmDispo.CbBsvkAuftragInfo, new RecordItemIndex(3));
            repo.FrmDispo.CbBsvkAuftrag.Click();
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Checked='True') on item 'FrmDispo.CbBsvkAuftrag'.", repo.FrmDispo.CbBsvkAuftragInfo, new RecordItemIndex(4));
            Validate.AttributeEqual(repo.FrmDispo.CbBsvkAuftragInfo, "Checked", "True");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmDispo.RbDezentral' at Center.", repo.FrmDispo.RbDezentralInfo, new RecordItemIndex(5));
            repo.FrmDispo.RbDezentral.Click();
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmDispo.Auftrag' at CenterRight.", repo.FrmDispo.AuftragInfo, new RecordItemIndex(6));
            repo.FrmDispo.Auftrag.Click(Location.CenterRight);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Auftragsnr1' with focus on 'FrmDispo.Auftrag'.", repo.FrmDispo.AuftragInfo, new RecordItemIndex(7));
            repo.FrmDispo.Auftrag.PressKeys(Auftragsnr1);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Tab}' with focus on 'FrmDispo.Auftrag'.", repo.FrmDispo.AuftragInfo, new RecordItemIndex(8));
            repo.FrmDispo.Auftrag.PressKeys("{Tab}");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmDispo.PbExtrasListe' at Center.", repo.FrmDispo.PbExtrasListeInfo, new RecordItemIndex(9));
            repo.FrmDispo.PbExtrasListe.Click();
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Artikel1) on item 'TblDispVSL.ColArtNrRow1'.", repo.TblDispVSL.ColArtNrRow1Info, new RecordItemIndex(10));
            Validate.AttributeEqual(repo.TblDispVSL.ColArtNrRow1Info, "Text", Artikel1);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Artikel5) on item 'TblDispVSL.ColArtNrRow4'.", repo.TblDispVSL.ColArtNrRow4Info, new RecordItemIndex(11));
            Validate.AttributeEqual(repo.TblDispVSL.ColArtNrRow4Info, "Text", Artikel5);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'TblDispVSL.Schliessen' at Center.", repo.TblDispVSL.SchliessenInfo, new RecordItemIndex(12));
            repo.TblDispVSL.Schliessen.Click();
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
