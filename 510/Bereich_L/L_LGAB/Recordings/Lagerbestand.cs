///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace L_LGAB_001.Recordings
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Lagerbestand recording.
    /// </summary>
    [TestModule("da81fe23-a5eb-413c-bfba-ce3cf2e48b19", ModuleType.Recording, 1)]
    public partial class Lagerbestand : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::L_LGAB_001.L_LGAB_001Repository repository.
        /// </summary>
        public static global::L_LGAB_001.L_LGAB_001Repository repo = global::L_LGAB_001.L_LGAB_001Repository.Instance;

        static Lagerbestand instance = new Lagerbestand();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Lagerbestand()
        {
            Artikel1 = "100115";
            Artikel3 = "100117";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Lagerbestand Instance
        {
            get { return instance; }
        }

#region Variables

        string _Artikel1;

        /// <summary>
        /// Gets or sets the value of variable Artikel1.
        /// </summary>
        [TestVariable("50976f48-ddb2-48cf-b4a7-63192ee978be")]
        public string Artikel1
        {
            get { return _Artikel1; }
            set { _Artikel1 = value; }
        }

        string _Artikel3;

        /// <summary>
        /// Gets or sets the value of variable Artikel3.
        /// </summary>
        [TestVariable("b83c2b6e-e44b-47ba-87b3-8cee3c124214")]
        public string Artikel3
        {
            get { return _Artikel3; }
            set { _Artikel3 = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{NumPad1}{NumPad0}{NumPad0}' with focus on 'FrmLgab.Lager'.", repo.FrmLgab.LagerInfo, new RecordItemIndex(0));
            repo.FrmLgab.Lager.EnsureVisible();
            Keyboard.Press("{NumPad1}{NumPad0}{NumPad0}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmLgab.Lager' at Center.", repo.FrmLgab.LagerInfo, new RecordItemIndex(1));
            repo.FrmLgab.Lager.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Tab}' with focus on 'FrmLgab.Lager'.", repo.FrmLgab.LagerInfo, new RecordItemIndex(2));
            repo.FrmLgab.Lager.EnsureVisible();
            Keyboard.Press("{Tab}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmLgab.Artikel' at Center.", repo.FrmLgab.ArtikelInfo, new RecordItemIndex(3));
            repo.FrmLgab.Artikel.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Artikel1' with focus on 'FrmLgab.Artikel'.", repo.FrmLgab.ArtikelInfo, new RecordItemIndex(4));
            repo.FrmLgab.Artikel.PressKeys(Artikel1);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Tab}' with focus on 'FrmLgab.Artikel'.", repo.FrmLgab.ArtikelInfo, new RecordItemIndex(5));
            repo.FrmLgab.Artikel.EnsureVisible();
            Keyboard.Press("{Tab}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Artikel3' with focus on 'FrmLgab.Text'.", repo.FrmLgab.TextInfo, new RecordItemIndex(6));
            repo.FrmLgab.Text.PressKeys(Artikel3);
            Delay.Milliseconds(20);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Tab}' with focus on 'FrmLgab.Text'.", repo.FrmLgab.TextInfo, new RecordItemIndex(7));
            repo.FrmLgab.Text.PressKeys("{Tab}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Checked='True') on item 'FrmLgab.CbNullbestand'.", repo.FrmLgab.CbNullbestandInfo, new RecordItemIndex(8));
            Validate.AttributeEqual(repo.FrmLgab.CbNullbestandInfo, "Checked", "True");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmLgab.PbCommonLagerbestand' at Center.", repo.FrmLgab.PbCommonLagerbestandInfo, new RecordItemIndex(9));
            repo.FrmLgab.PbCommonLagerbestand.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'TblArlg.PbDataAccessLoad' at Center.", repo.TblArlg.PbDataAccessLoadInfo, new RecordItemIndex(10));
            repo.TblArlg.PbDataAccessLoad.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (Text>'Lagerbestand') on item 'TblArlg.TitleBar100Lagerbestand'.", repo.TblArlg.TitleBar100LagerbestandInfo, new RecordItemIndex(11));
            Validate.AttributeContains(repo.TblArlg.TitleBar100LagerbestandInfo, "Text", "Lagerbestand");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Artikel1) on item 'TblArlg.FlexGrid.ColArlgArtNrRow1'.", repo.TblArlg.FlexGrid.ColArlgArtNrRow1Info, new RecordItemIndex(12));
            Validate.AttributeEqual(repo.TblArlg.FlexGrid.ColArlgArtNrRow1Info, "Text", Artikel1);
            Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Wait", "Waiting 30s to exist. Associated repository item: 'TblArlg.FlexGrid.ColArlgArtNrRow1'", repo.TblArlg.FlexGrid.ColArlgArtNrRow1Info, new ActionTimeout(30000), new RecordItemIndex(13));
            //repo.TblArlg.FlexGrid.ColArlgArtNrRow1Info.WaitForExists(30000);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='3') on item 'TblArlg.FlexGrid.ColArlgBestandRow1'.", repo.TblArlg.FlexGrid.ColArlgBestandRow1Info, new RecordItemIndex(14));
            Validate.AttributeEqual(repo.TblArlg.FlexGrid.ColArlgBestandRow1Info, "Text", "3");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='2') on item 'TblArlg.FlexGrid.ColArlgBedarfRow1'.", repo.TblArlg.FlexGrid.ColArlgBedarfRow1Info, new RecordItemIndex(15));
            Validate.AttributeEqual(repo.TblArlg.FlexGrid.ColArlgBedarfRow1Info, "Text", "2");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='10') on item 'TblArlg.FlexGrid.ColArlgBestelltRow1'.", repo.TblArlg.FlexGrid.ColArlgBestelltRow1Info, new RecordItemIndex(16));
            Validate.AttributeEqual(repo.TblArlg.FlexGrid.ColArlgBestelltRow1Info, "Text", "10");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='2') on item 'TblArlg.FlexGrid.ColArlgZugeteiltRow1'.", repo.TblArlg.FlexGrid.ColArlgZugeteiltRow1Info, new RecordItemIndex(17));
            Validate.AttributeEqual(repo.TblArlg.FlexGrid.ColArlgZugeteiltRow1Info, "Text", "2");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='11') on item 'TblArlg.FlexGrid.ColArlgVerf2Row1'.", repo.TblArlg.FlexGrid.ColArlgVerf2Row1Info, new RecordItemIndex(18));
            Validate.AttributeEqual(repo.TblArlg.FlexGrid.ColArlgVerf2Row1Info, "Text", "11");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='1,15') on item 'TblArlg.FlexGrid.ColArlgMatpreisRow1'.", repo.TblArlg.FlexGrid.ColArlgMatpreisRow1Info, new RecordItemIndex(19));
            Validate.AttributeEqual(repo.TblArlg.FlexGrid.ColArlgMatpreisRow1Info, "Text", "1,15");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Artikel3) on item 'TblArlg.FlexGrid.ColArlgArtNrRow3'.", repo.TblArlg.FlexGrid.ColArlgArtNrRow3Info, new RecordItemIndex(20));
            Validate.AttributeEqual(repo.TblArlg.FlexGrid.ColArlgArtNrRow3Info, "Text", Artikel3);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='0') on item 'TblArlg.FlexGrid.ColArlgBestandRow3'.", repo.TblArlg.FlexGrid.ColArlgBestandRow3Info, new RecordItemIndex(21));
            Validate.AttributeEqual(repo.TblArlg.FlexGrid.ColArlgBestandRow3Info, "Text", "0");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'TblArlg.Schliessen' at Center.", repo.TblArlg.SchliessenInfo, new RecordItemIndex(22));
            repo.TblArlg.Schliessen.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmLgab.CbNullbestand' at Center.", repo.FrmLgab.CbNullbestandInfo, new RecordItemIndex(23));
            repo.FrmLgab.CbNullbestand.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmLgab.PbCommonLagerbestand' at Center.", repo.FrmLgab.PbCommonLagerbestandInfo, new RecordItemIndex(24));
            repo.FrmLgab.PbCommonLagerbestand.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'TblArlg.PbDataAccessLoad' at Center.", repo.TblArlg.PbDataAccessLoadInfo, new RecordItemIndex(25));
            repo.TblArlg.PbDataAccessLoad.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating NotExists on item 'TblArlg.FlexGrid.ColArlgArtNrRow3'.", repo.TblArlg.FlexGrid.ColArlgArtNrRow3Info, new RecordItemIndex(26));
            Validate.NotExists(repo.TblArlg.FlexGrid.ColArlgArtNrRow3Info);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'TblArlg.Schliessen' at Center.", repo.TblArlg.SchliessenInfo, new RecordItemIndex(27));
            repo.TblArlg.Schliessen.Click();
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
