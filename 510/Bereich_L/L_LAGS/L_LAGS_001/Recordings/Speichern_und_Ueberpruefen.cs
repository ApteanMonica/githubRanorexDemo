///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace L_LAGS_001.Recordings
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Speichern_und_Ueberpruefen recording.
    /// </summary>
    [TestModule("b2626b40-ce0f-4592-b903-bf24545832b4", ModuleType.Recording, 1)]
    public partial class Speichern_und_Ueberpruefen : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::L_LAGS_001.L_LAGS_001Repository repository.
        /// </summary>
        public static global::L_LAGS_001.L_LAGS_001Repository repo = global::L_LAGS_001.L_LAGS_001Repository.Instance;

        static Speichern_und_Ueberpruefen instance = new Speichern_und_Ueberpruefen();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Speichern_und_Ueberpruefen()
        {
            Lager_nr = "500";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Speichern_und_Ueberpruefen Instance
        {
            get { return instance; }
        }

#region Variables

        string _Lager_nr;

        /// <summary>
        /// Gets or sets the value of variable Lager_nr.
        /// </summary>
        [TestVariable("522cad55-fabc-4cc5-978d-0880db27b1c8")]
        public string Lager_nr
        {
            get { return _Lager_nr; }
            set { _Lager_nr = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'MdiLag.PbDataAccessSave' at Center.", repo.MdiLag.PbDataAccessSaveInfo, new RecordItemIndex(0));
            repo.MdiLag.PbDataAccessSave.Click();
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='In die markierten, eingabepflichtigen Felder wurden keine Daten eingegeben!') on item 'DlgMessageBox.LabelMeldungstext'.", repo.DlgMessageBox.LabelMeldungstextInfo, new RecordItemIndex(1));
            Validate.AttributeEqual(repo.DlgMessageBox.LabelMeldungstextInfo, "Text", "In die markierten, eingabepflichtigen Felder wurden keine Daten eingegeben!");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'DlgMessageBox.Button0' at Center.", repo.DlgMessageBox.Button0Info, new RecordItemIndex(2));
            repo.DlgMessageBox.Button0.Click();
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'MdiLag.PicTabs.Allgemein' at Center.", repo.MdiLag.PicTabs.AllgemeinInfo, new RecordItemIndex(3));
            repo.MdiLag.PicTabs.Allgemein.Click();
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeNotContains (Text!>'1') on item 'MdiLag.TpAllgemein.Sortierung1'.", repo.MdiLag.TpAllgemein.Sortierung1Info, new RecordItemIndex(4));
            Validate.AttributeNotContains(repo.MdiLag.TpAllgemein.Sortierung1Info, "Text", "1");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'MdiLag.TpAllgemein.Sortierung' at CenterRight.", repo.MdiLag.TpAllgemein.SortierungInfo, new RecordItemIndex(5));
            repo.MdiLag.TpAllgemein.Sortierung.Click(Location.CenterRight);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'LLAGS.DropDown' at .55;.55.", repo.LLAGS.DropDownInfo, new RecordItemIndex(6));
            repo.LLAGS.DropDown.Click(".55;.55");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'MdiLag.TpAllgemein.Sortierung1' at CenterRight.", repo.MdiLag.TpAllgemein.Sortierung1Info, new RecordItemIndex(7));
            repo.MdiLag.TpAllgemein.Sortierung1.Click(Location.CenterRight);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'LLAGS.DropDown' at .15;.15.", repo.LLAGS.DropDownInfo, new RecordItemIndex(8));
            repo.LLAGS.DropDown.Click(".15;.15");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'MdiLag.PbDataAccessSave' at Center.", repo.MdiLag.PbDataAccessSaveInfo, new RecordItemIndex(9));
            repo.MdiLag.PbDataAccessSave.Click();
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Lager_nr) on item 'MdiLag.TpAllgemein.LagerFDPreis'.", repo.MdiLag.TpAllgemein.LagerFDPreisInfo, new RecordItemIndex(10));
            Validate.AttributeEqual(repo.MdiLag.TpAllgemein.LagerFDPreisInfo, "Text", Lager_nr);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Lager_nr) on item 'MdiLag.TpAllgemein.Versandstelle'.", repo.MdiLag.TpAllgemein.VersandstelleInfo, new RecordItemIndex(11));
            Validate.AttributeEqual(repo.MdiLag.TpAllgemein.VersandstelleInfo, "Text", Lager_nr);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'MdiLag.PicTabs.TabPageAuftrag' at Center.", repo.MdiLag.PicTabs.TabPageAuftragInfo, new RecordItemIndex(12));
            repo.MdiLag.PicTabs.TabPageAuftrag.Click();
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Checked='True') on item 'MdiLag.CbLagVcheck'.", repo.MdiLag.CbLagVcheckInfo, new RecordItemIndex(13));
            Validate.AttributeEqual(repo.MdiLag.CbLagVcheckInfo, "Checked", "True");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='1') on item 'MdiLag.PicTabs.Prozesslagerplaetze'.", repo.MdiLag.PicTabs.ProzesslagerplaetzeInfo, new RecordItemIndex(14));
            Validate.AttributeEqual(repo.MdiLag.PicTabs.ProzesslagerplaetzeInfo, "Text", "1");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='1') on item 'MdiLag.PicTabs.Text5'.", repo.MdiLag.PicTabs.Text5Info, new RecordItemIndex(15));
            Validate.AttributeEqual(repo.MdiLag.PicTabs.Text5Info, "Text", "1");
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
