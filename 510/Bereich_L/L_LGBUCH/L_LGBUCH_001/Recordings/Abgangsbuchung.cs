///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace L_LGBUCH_001.Recordings
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Abgangsbuchung recording.
    /// </summary>
    [TestModule("1787d454-68e2-40d8-bc4c-b1c21dbe8ba4", ModuleType.Recording, 1)]
    public partial class Abgangsbuchung : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::L_LGBUCH_001.L_LGBUCH_001Repository repository.
        /// </summary>
        public static global::L_LGBUCH_001.L_LGBUCH_001Repository repo = global::L_LGBUCH_001.L_LGBUCH_001Repository.Instance;

        static Abgangsbuchung instance = new Abgangsbuchung();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Abgangsbuchung()
        {
            Lager1 = "100";
            Preis1 = "1,450000";
            Artikel1 = "100032";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Abgangsbuchung Instance
        {
            get { return instance; }
        }

#region Variables

        string _Lager1;

        /// <summary>
        /// Gets or sets the value of variable Lager1.
        /// </summary>
        [TestVariable("a5d6c080-95f5-437b-8e80-d9cb25be09ca")]
        public string Lager1
        {
            get { return _Lager1; }
            set { _Lager1 = value; }
        }

        string _Preis1;

        /// <summary>
        /// Gets or sets the value of variable Preis1.
        /// </summary>
        [TestVariable("6ace03c9-17fa-428e-b461-6969cea0306a")]
        public string Preis1
        {
            get { return _Preis1; }
            set { _Preis1 = value; }
        }

        string _Artikel1;

        /// <summary>
        /// Gets or sets the value of variable Artikel1.
        /// </summary>
        [TestVariable("198e770b-6da8-46f8-a4bd-5535ab1161e4")]
        public string Artikel1
        {
            get { return _Artikel1; }
            set { _Artikel1 = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmLagerbuch.RbAbgang' at Center.", repo.FrmLagerbuch.RbAbgangInfo, new RecordItemIndex(0));
            repo.FrmLagerbuch.RbAbgang.Click();
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmLagerbuch.Lager' at Center.", repo.FrmLagerbuch.LagerInfo, new RecordItemIndex(1));
            repo.FrmLagerbuch.Lager.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Lager1' with focus on 'FrmLagerbuch.Lager'.", repo.FrmLagerbuch.LagerInfo, new RecordItemIndex(2));
            repo.FrmLagerbuch.Lager.PressKeys(Lager1);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmLagerbuch.ArtikelNr' at Center.", repo.FrmLagerbuch.ArtikelNrInfo, new RecordItemIndex(3));
            repo.FrmLagerbuch.ArtikelNr.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{NumPad1}{NumPad0}{NumPad0}{NumPad0}{NumPad3 down}{NumPad2 down}{NumPad3 up}{NumPad2 up}{Tab}' with focus on 'FrmLagerbuch.ArtikelNr'.", repo.FrmLagerbuch.ArtikelNrInfo, new RecordItemIndex(4));
            repo.FrmLagerbuch.ArtikelNr.PressKeys("{NumPad1}{NumPad0}{NumPad0}{NumPad0}{NumPad3 down}{NumPad2 down}{NumPad3 up}{NumPad2 up}{Tab}");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='5') on item 'FrmLagerbuch.Lager2'.", repo.FrmLagerbuch.Lager2Info, new RecordItemIndex(5));
            Validate.AttributeEqual(repo.FrmLagerbuch.Lager2Info, "Text", "5");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='0') on item 'FrmLagerbuch.VonPlatzChargeAblauf'.", repo.FrmLagerbuch.VonPlatzChargeAblaufInfo, new RecordItemIndex(6));
            Validate.AttributeEqual(repo.FrmLagerbuch.VonPlatzChargeAblaufInfo, "Text", "0");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Preis1) on item 'FrmLagerbuch.Preis'.", repo.FrmLagerbuch.PreisInfo, new RecordItemIndex(7));
            Validate.AttributeEqual(repo.FrmLagerbuch.PreisInfo, "Text", Preis1);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Menge' at Center.", repo.MengeInfo, new RecordItemIndex(8));
            repo.Menge.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '6' with focus on 'Menge'.", repo.MengeInfo, new RecordItemIndex(9));
            repo.Menge.PressKeys("6");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Tab}' with focus on 'Menge'.", repo.MengeInfo, new RecordItemIndex(10));
            repo.Menge.PressKeys("{Tab}");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='Abgangsmenge darf nicht grösser als Lagerbestand sein') on item 'DlgMessageBox.LabelMeldungstext'.", repo.DlgMessageBox.LabelMeldungstextInfo, new RecordItemIndex(11));
            Validate.AttributeEqual(repo.DlgMessageBox.LabelMeldungstextInfo, "Text", "Abgangsmenge darf nicht grösser als Lagerbestand sein");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'DlgMessageBox.Button0' at Center.", repo.DlgMessageBox.Button0Info, new RecordItemIndex(12));
            repo.DlgMessageBox.Button0.Click();
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left DoubleClick item 'Menge' at Center.", repo.MengeInfo, new RecordItemIndex(13));
            repo.Menge.DoubleClick();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '2' with focus on 'Menge'.", repo.MengeInfo, new RecordItemIndex(14));
            repo.Menge.PressKeys("2");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Tab}' with focus on 'Menge'.", repo.MengeInfo, new RecordItemIndex(15));
            repo.Menge.PressKeys("{Tab}");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmLagerbuch.PbDataAccessSave' at Center.", repo.FrmLagerbuch.PbDataAccessSaveInfo, new RecordItemIndex(16));
            repo.FrmLagerbuch.PbDataAccessSave.Click();
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmLagerbuch.PbCommonArtikelauswahl' at Center.", repo.FrmLagerbuch.PbCommonArtikelauswahlInfo, new RecordItemIndex(17));
            repo.FrmLagerbuch.PbCommonArtikelauswahl.Click();
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'TblLagerbuchArtikel.Artikelnummer' at Center.", repo.TblLagerbuchArtikel.ArtikelnummerInfo, new RecordItemIndex(18));
            repo.TblLagerbuchArtikel.Artikelnummer.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{NumPad1}{NumPad0}{NumPad0}{NumPad0}{NumPad3}{LShiftKey}%' with focus on 'TblLagerbuchArtikel.Artikelnummer'.", repo.TblLagerbuchArtikel.ArtikelnummerInfo, new RecordItemIndex(19));
            repo.TblLagerbuchArtikel.Artikelnummer.PressKeys("{NumPad1}{NumPad0}{NumPad0}{NumPad0}{NumPad3}{LShiftKey}%");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'TblLagerbuchArtikel.PbDataAccessLoad' at Center.", repo.TblLagerbuchArtikel.PbDataAccessLoadInfo, new RecordItemIndex(20));
            repo.TblLagerbuchArtikel.PbDataAccessLoad.Click();
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Artikel1) on item 'TblLagerbuchArtikel.ChildTableWindow.ColArtNrRow3'.", repo.TblLagerbuchArtikel.ChildTableWindow.ColArtNrRow3Info, new RecordItemIndex(21));
            Validate.AttributeEqual(repo.TblLagerbuchArtikel.ChildTableWindow.ColArtNrRow3Info, "Text", Artikel1);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'TblLagerbuchArtikel.ChildTableWindow.PageRight' at Center.", repo.TblLagerbuchArtikel.ChildTableWindow.PageRightInfo, new RecordItemIndex(22));
            repo.TblLagerbuchArtikel.ChildTableWindow.PageRight.Click();
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'TblLagerbuchArtikel.ChildTableWindow.ColLbewMengeBasisRow3' at Center.", repo.TblLagerbuchArtikel.ChildTableWindow.ColLbewMengeBasisRow3Info, new RecordItemIndex(23));
            repo.TblLagerbuchArtikel.ChildTableWindow.ColLbewMengeBasisRow3.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{NumPad3}' with focus on 'TblLagerbuchArtikel.ChildTableWindow.ColLbewMengeBasisRow3'.", repo.TblLagerbuchArtikel.ChildTableWindow.ColLbewMengeBasisRow3Info, new RecordItemIndex(24));
            repo.TblLagerbuchArtikel.ChildTableWindow.ColLbewMengeBasisRow3.EnsureVisible();
            Keyboard.Press("{NumPad3}");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Tab}' with focus on 'TblLagerbuchArtikel.ChildTableWindow.ColLbewMengeBasisRow3'.", repo.TblLagerbuchArtikel.ChildTableWindow.ColLbewMengeBasisRow3Info, new RecordItemIndex(25));
            repo.TblLagerbuchArtikel.ChildTableWindow.ColLbewMengeBasisRow3.EnsureVisible();
            Keyboard.Press("{Tab}");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'TblLagerbuchArtikel.PbDataAccessSave' at Center.", repo.TblLagerbuchArtikel.PbDataAccessSaveInfo, new RecordItemIndex(26));
            repo.TblLagerbuchArtikel.PbDataAccessSave.Click();
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='3') on item 'Menge'.", repo.MengeInfo, new RecordItemIndex(27));
            Validate.AttributeEqual(repo.MengeInfo, "Text", "3");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmLagerbuch.PbDataAccessSave' at Center.", repo.FrmLagerbuch.PbDataAccessSaveInfo, new RecordItemIndex(28));
            repo.FrmLagerbuch.PbDataAccessSave.Click();
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
