///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace L_KMSM_002.Recordings
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The KoSchein_SPLIT recording.
    /// </summary>
    [TestModule("43690295-6661-4e9a-bed6-ecac125eecd7", ModuleType.Recording, 1)]
    public partial class KoSchein_SPLIT : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::L_KMSM_002.L_KMSM_002Repository repository.
        /// </summary>
        public static global::L_KMSM_002.L_KMSM_002Repository repo = global::L_KMSM_002.L_KMSM_002Repository.Instance;

        static KoSchein_SPLIT instance = new KoSchein_SPLIT();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public KoSchein_SPLIT()
        {
            Ko_Schein_Nr = "KO21/00012";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static KoSchein_SPLIT Instance
        {
            get { return instance; }
        }

#region Variables

        string _Ko_Schein_Nr;

        /// <summary>
        /// Gets or sets the value of variable Ko_Schein_Nr.
        /// </summary>
        [TestVariable("72832e02-f57f-4e6a-9b7b-9b3bd356faf6")]
        public string Ko_Schein_Nr
        {
            get { return _Ko_Schein_Nr; }
            set { _Ko_Schein_Nr = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='100') on item 'TblKMSM.Lager'.", repo.TblKMSM.LagerInfo, new RecordItemIndex(0));
            Validate.AttributeEqual(repo.TblKMSM.LagerInfo, "Text", "100");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'TblKMSM.KoScheinNr' at Center.", repo.TblKMSM.KoScheinNrInfo, new RecordItemIndex(1));
            repo.TblKMSM.KoScheinNr.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Ko_Schein_Nr' with focus on 'TblKMSM.KoScheinNr'.", repo.TblKMSM.KoScheinNrInfo, new RecordItemIndex(2));
            repo.TblKMSM.KoScheinNr.PressKeys(Ko_Schein_Nr);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Ko_Schein_Nr) on item 'TblKMSM.KoScheinNr'.", repo.TblKMSM.KoScheinNrInfo, new RecordItemIndex(3));
            Validate.AttributeEqual(repo.TblKMSM.KoScheinNrInfo, "Text", Ko_Schein_Nr);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Tab}' with focus on 'TblKMSM.KoScheinNr'.", repo.TblKMSM.KoScheinNrInfo, new RecordItemIndex(4));
            repo.TblKMSM.KoScheinNr.PressKeys("{Tab}");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'TblKMSM.FlexGrid.Row1Column0' at Center.", repo.TblKMSM.FlexGrid.Row1Column0Info, new RecordItemIndex(5));
            repo.TblKMSM.FlexGrid.Row1Column0.Click();
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'TblKMSM.PbExtrasSplit' at Center.", repo.TblKMSM.PbExtrasSplitInfo, new RecordItemIndex(6));
            repo.TblKMSM.PbExtrasSplit.Click();
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeRegex (Text~'(Die Ist-Menge muss größer als 0 und kleiner als die Sollmenge sein!)|(Menge muss größer 0 und kleiner als Sollmenge sein)') on item 'DlgMessageBox.LabelMeldungstext'.", repo.DlgMessageBox.LabelMeldungstextInfo, new RecordItemIndex(7));
            Validate.AttributeRegex(repo.DlgMessageBox.LabelMeldungstextInfo, "Text", new Regex("(Die Ist-Menge muss größer als 0 und kleiner als die Sollmenge sein!)|(Menge muss größer 0 und kleiner als Sollmenge sein)"));
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'DlgMessageBox.Button0' at Center.", repo.DlgMessageBox.Button0Info, new RecordItemIndex(8));
            repo.DlgMessageBox.Button0.Click();
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
