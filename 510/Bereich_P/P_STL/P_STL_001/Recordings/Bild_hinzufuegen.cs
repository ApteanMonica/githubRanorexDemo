///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace P_STL_001.Recordings
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Bild_hinzufuegen recording.
    /// </summary>
    [TestModule("cf8594e8-1d45-4d42-98c9-930760e75f0d", ModuleType.Recording, 1)]
    public partial class Bild_hinzufuegen : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::P_STL_001.P_STL_001Repository repository.
        /// </summary>
        public static global::P_STL_001.P_STL_001Repository repo = global::P_STL_001.P_STL_001Repository.Instance;

        static Bild_hinzufuegen instance = new Bild_hinzufuegen();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Bild_hinzufuegen()
        {
            Pfad_Bild = "C:\\Testdaten\\Sonstige Daten\\VRI\\R_S.png";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Bild_hinzufuegen Instance
        {
            get { return instance; }
        }

#region Variables

        string _Pfad_Bild;

        /// <summary>
        /// Gets or sets the value of variable Pfad_Bild.
        /// </summary>
        [TestVariable("59ec6a87-0b51-460b-aae8-506d64b08c8c")]
        public string Pfad_Bild
        {
            get { return _Pfad_Bild; }
            set { _Pfad_Bild = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmStueckliste.TpKopf.Bild' at Center.", repo.FrmStueckliste.TpKopf.BildInfo, new RecordItemIndex(0));
            repo.FrmStueckliste.TpKopf.Bild.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Pfad_Bild' with focus on 'FrmStueckliste.TpKopf.Bild'.", repo.FrmStueckliste.TpKopf.BildInfo, new RecordItemIndex(1));
            repo.FrmStueckliste.TpKopf.Bild.PressKeys(Pfad_Bild);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmStueckliste.TpKopf.PbArtBildAnzeigen' at Center.", repo.FrmStueckliste.TpKopf.PbArtBildAnzeigenInfo, new RecordItemIndex(2));
            repo.FrmStueckliste.TpKopf.PbArtBildAnzeigen.Click();
            
            Report.Log(ReportLevel.Info, "Validation", "Validating ContainsImage (Screenshot: 'Screenshot2' with region {X=226,Y=257,Width=578,Height=266}) on item 'Fotos1.MainPage'.", repo.Fotos1.MainPageInfo, new RecordItemIndex(3));
            Validate.ContainsImage(repo.Fotos1.MainPageInfo, MainPage_Screenshot2, MainPage_Screenshot2_Options);
            
        }

#region Image Feature Data
        /// <summary>
        /// DO NOT REFERENCE THIS CODE  - auto generated
        /// </summary>
        CompressedImage MainPage_Screenshot2
        { get { return repo.Fotos1.MainPageInfo.GetScreenshot2(new Rectangle(226, 257, 578, 266)); } }

        /// <summary>
        /// DO NOT REFERENCE THIS CODE  - auto generated
        /// </summary>
        Imaging.FindOptions MainPage_Screenshot2_Options
        { get { return Imaging.FindOptions.Default; } }

#endregion
    }
#pragma warning restore 0436
}
