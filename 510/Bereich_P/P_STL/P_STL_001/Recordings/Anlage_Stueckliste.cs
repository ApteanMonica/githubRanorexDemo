///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace P_STL_001.Recordings
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Anlage_Stueckliste recording.
    /// </summary>
    [TestModule("7d818bc6-607c-4863-ac5b-73ea200fe47b", ModuleType.Recording, 1)]
    public partial class Anlage_Stueckliste : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::P_STL_001.P_STL_001Repository repository.
        /// </summary>
        public static global::P_STL_001.P_STL_001Repository repo = global::P_STL_001.P_STL_001Repository.Instance;

        static Anlage_Stueckliste instance = new Anlage_Stueckliste();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Anlage_Stueckliste()
        {
            Stuecklistenname = "QS TEST RANOREX";
            Bezeichnung = "P_STL_001";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Anlage_Stueckliste Instance
        {
            get { return instance; }
        }

#region Variables

        string _Stuecklistenname;

        /// <summary>
        /// Gets or sets the value of variable Stuecklistenname.
        /// </summary>
        [TestVariable("30322a9b-8880-4160-a7e9-da1658063b89")]
        public string Stuecklistenname
        {
            get { return _Stuecklistenname; }
            set { _Stuecklistenname = value; }
        }

        string _Bezeichnung;

        /// <summary>
        /// Gets or sets the value of variable Bezeichnung.
        /// </summary>
        [TestVariable("62fd0bb4-8035-4826-9090-2b8da0f060d3")]
        public string Bezeichnung
        {
            get { return _Bezeichnung; }
            set { _Bezeichnung = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmStueckliste.Text' at Center.", repo.FrmStueckliste.TextInfo, new RecordItemIndex(0));
            repo.FrmStueckliste.Text.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '100007' with focus on 'FrmStueckliste.Text'.", repo.FrmStueckliste.TextInfo, new RecordItemIndex(1));
            repo.FrmStueckliste.Text.PressKeys("100007");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmStueckliste.PbPerformSimpleSearch' at Center.", repo.FrmStueckliste.PbPerformSimpleSearchInfo, new RecordItemIndex(2));
            repo.FrmStueckliste.PbPerformSimpleSearch.Click();
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmStueckliste.PbNavigationBack' at Center.", repo.FrmStueckliste.PbNavigationBackInfo, new RecordItemIndex(3));
            repo.FrmStueckliste.PbNavigationBack.Click();
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='100007') on item 'FrmStueckliste.CellTmpColS1Row1'.", repo.FrmStueckliste.CellTmpColS1Row1Info, new RecordItemIndex(4));
            Validate.AttributeEqual(repo.FrmStueckliste.CellTmpColS1Row1Info, "Text", "100007");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmStueckliste.PbNew' at Center.", repo.FrmStueckliste.PbNewInfo, new RecordItemIndex(5));
            repo.FrmStueckliste.PbNew.Click();
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmStueckliste.TpKopf.Stueckliste' at Center.", repo.FrmStueckliste.TpKopf.StuecklisteInfo, new RecordItemIndex(6));
            repo.FrmStueckliste.TpKopf.Stueckliste.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Stuecklistenname' with focus on 'FrmStueckliste.TpKopf.Stueckliste'.", repo.FrmStueckliste.TpKopf.StuecklisteInfo, new RecordItemIndex(7));
            repo.FrmStueckliste.TpKopf.Stueckliste.EnsureVisible();
            Keyboard.Press(Stuecklistenname);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Stuecklistenname) on item 'FrmStueckliste.TpKopf.Stueckliste'.", repo.FrmStueckliste.TpKopf.StuecklisteInfo, new RecordItemIndex(8));
            Validate.AttributeEqual(repo.FrmStueckliste.TpKopf.StuecklisteInfo, "Text", Stuecklistenname);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Tab}' with focus on 'FrmStueckliste.TpKopf.Stueckliste'.", repo.FrmStueckliste.TpKopf.StuecklisteInfo, new RecordItemIndex(9));
            repo.FrmStueckliste.TpKopf.Stueckliste.PressKeys("{Tab}");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmStueckliste.TpKopf.Text' at Center.", repo.FrmStueckliste.TpKopf.TextInfo, new RecordItemIndex(10));
            repo.FrmStueckliste.TpKopf.Text.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Bezeichnung' with focus on 'FrmStueckliste.TpKopf.Text'.", repo.FrmStueckliste.TpKopf.TextInfo, new RecordItemIndex(11));
            repo.FrmStueckliste.TpKopf.Text.PressKeys(Bezeichnung);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Bezeichnung) on item 'FrmStueckliste.TpKopf.Text'.", repo.FrmStueckliste.TpKopf.TextInfo, new RecordItemIndex(12));
            Validate.AttributeEqual(repo.FrmStueckliste.TpKopf.TextInfo, "Text", Bezeichnung);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmStueckliste.TpKopf.Basismenge' at Center.", repo.FrmStueckliste.TpKopf.BasismengeInfo, new RecordItemIndex(13));
            repo.FrmStueckliste.TpKopf.Basismenge.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'M{Tab}' with focus on 'FrmStueckliste.TpKopf.Basismenge'.", repo.FrmStueckliste.TpKopf.BasismengeInfo, new RecordItemIndex(14));
            repo.FrmStueckliste.TpKopf.Basismenge.PressKeys("M{Tab}");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'DlgMessageBox.Button0' at Center.", repo.DlgMessageBox.Button0Info, new RecordItemIndex(15));
            repo.DlgMessageBox.Button0.Click();
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left DoubleClick item 'FrmStueckliste.TpKopf.Basismenge' at Center.", repo.FrmStueckliste.TpKopf.BasismengeInfo, new RecordItemIndex(16));
            repo.FrmStueckliste.TpKopf.Basismenge.DoubleClick();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Delete' Press with focus on 'FrmStueckliste.TpKopf.Basismenge'.", repo.FrmStueckliste.TpKopf.BasismengeInfo, new RecordItemIndex(17));
            Keyboard.PrepareFocus(repo.FrmStueckliste.TpKopf.Basismenge);
            Keyboard.Press(System.Windows.Forms.Keys.Delete, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 10s.", new RecordItemIndex(18));
            Delay.Duration(10000, false);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '100' with focus on 'FrmStueckliste.TpKopf.Basismenge'.", repo.FrmStueckliste.TpKopf.BasismengeInfo, new RecordItemIndex(19));
            repo.FrmStueckliste.TpKopf.Basismenge.PressKeys("100");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmStueckliste.TpKopf.TextMEH' at Center.", repo.FrmStueckliste.TpKopf.TextMEHInfo, new RecordItemIndex(20));
            repo.FrmStueckliste.TpKopf.TextMEH.Click();
            
            //Report.Log(ReportLevel.Info, "Keyboard", "Key 'Tab' Press with focus on 'FrmStueckliste.TpKopf.Basismenge'.", repo.FrmStueckliste.TpKopf.BasismengeInfo, new RecordItemIndex(21));
            //Keyboard.PrepareFocus(repo.FrmStueckliste.TpKopf.Basismenge);
            //Keyboard.Press(System.Windows.Forms.Keys.Tab, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 10s.", new RecordItemIndex(22));
            Delay.Duration(10000, false);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='100,000') on item 'FrmStueckliste.TpKopf.Basismenge'.", repo.FrmStueckliste.TpKopf.BasismengeInfo, new RecordItemIndex(23));
            Validate.AttributeEqual(repo.FrmStueckliste.TpKopf.BasismengeInfo, "Text", "100,000");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'M' with focus on 'FrmStueckliste.TpKopf.TextMEH'.", repo.FrmStueckliste.TpKopf.TextMEHInfo, new RecordItemIndex(24));
            repo.FrmStueckliste.TpKopf.TextMEH.EnsureVisible();
            Keyboard.Press("M");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='M') on item 'FrmStueckliste.TpKopf.TextMEH'.", repo.FrmStueckliste.TpKopf.TextMEHInfo, new RecordItemIndex(25));
            Validate.AttributeEqual(repo.FrmStueckliste.TpKopf.TextMEHInfo, "Text", "M");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmStueckliste.TpKopf.GueltigVon' at Center.", repo.FrmStueckliste.TpKopf.GueltigVonInfo, new RecordItemIndex(26));
            repo.FrmStueckliste.TpKopf.GueltigVon.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '01.12.2020' with focus on 'FrmStueckliste.TpKopf.GueltigVon'.", repo.FrmStueckliste.TpKopf.GueltigVonInfo, new RecordItemIndex(27));
            repo.FrmStueckliste.TpKopf.GueltigVon.PressKeys("01.12.2020");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmStueckliste.TpKopf.GueltigBis' at Center.", repo.FrmStueckliste.TpKopf.GueltigBisInfo, new RecordItemIndex(28));
            repo.FrmStueckliste.TpKopf.GueltigBis.Click();
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='01.12.2020') on item 'FrmStueckliste.TpKopf.GueltigVon'.", repo.FrmStueckliste.TpKopf.GueltigVonInfo, new RecordItemIndex(29));
            Validate.AttributeEqual(repo.FrmStueckliste.TpKopf.GueltigVonInfo, "Text", "01.12.2020");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '31.12.2023' with focus on 'FrmStueckliste.TpKopf.GueltigBis'.", repo.FrmStueckliste.TpKopf.GueltigBisInfo, new RecordItemIndex(30));
            repo.FrmStueckliste.TpKopf.GueltigBis.EnsureVisible();
            Keyboard.Press("31.12.2023");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='31.12.2023') on item 'FrmStueckliste.TpKopf.GueltigBis'.", repo.FrmStueckliste.TpKopf.GueltigBisInfo, new RecordItemIndex(31));
            Validate.AttributeEqual(repo.FrmStueckliste.TpKopf.GueltigBisInfo, "Text", "31.12.2023");
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
