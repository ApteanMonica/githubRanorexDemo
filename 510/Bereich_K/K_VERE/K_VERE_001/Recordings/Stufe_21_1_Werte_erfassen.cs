///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace K_VERE_001.Recordings
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Stufe_21_1_Werte_erfassen recording.
    /// </summary>
    [TestModule("708a4a2c-124c-4346-8fde-fa8101f857c3", ModuleType.Recording, 1)]
    public partial class Stufe_21_1_Werte_erfassen : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::K_VERE_001.K_VERE_001Repository repository.
        /// </summary>
        public static global::K_VERE_001.K_VERE_001Repository repo = global::K_VERE_001.K_VERE_001Repository.Instance;

        static Stufe_21_1_Werte_erfassen instance = new Stufe_21_1_Werte_erfassen();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Stufe_21_1_Werte_erfassen()
        {
            von_KST_10 = "10";
            an_KST_60 = "60";
            Menge1 = "150";
            Text_21_1 = "Verrechnung K_VERR_001 Menge 150 an KST 60";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Stufe_21_1_Werte_erfassen Instance
        {
            get { return instance; }
        }

#region Variables

        string _von_KST_10;

        /// <summary>
        /// Gets or sets the value of variable von_KST_10.
        /// </summary>
        [TestVariable("b3ad94c2-55d0-46c2-b337-590345d7d096")]
        public string von_KST_10
        {
            get { return _von_KST_10; }
            set { _von_KST_10 = value; }
        }

        string _an_KST_60;

        /// <summary>
        /// Gets or sets the value of variable an_KST_60.
        /// </summary>
        [TestVariable("f322bb3d-5dfe-464c-a0c2-367194123d99")]
        public string an_KST_60
        {
            get { return _an_KST_60; }
            set { _an_KST_60 = value; }
        }

        string _Menge1;

        /// <summary>
        /// Gets or sets the value of variable Menge1.
        /// </summary>
        [TestVariable("d81dc558-9cbe-4a95-b399-a513d4e54b3b")]
        public string Menge1
        {
            get { return _Menge1; }
            set { _Menge1 = value; }
        }

        string _Text_21_1;

        /// <summary>
        /// Gets or sets the value of variable Text_21_1.
        /// </summary>
        [TestVariable("b863d388-367f-4179-aa65-e681eabf33f6")]
        public string Text_21_1
        {
            get { return _Text_21_1; }
            set { _Text_21_1 = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            // Werte erfassen
            Report.Log(ReportLevel.Info, "Section", "Werte erfassen", new RecordItemIndex(0));
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$von_KST_10' with focus on 'TblVerr_K_VERE.Row2_erste_Erfassungszeile.ColKs1NrVonRow2'.", repo.TblVerr_K_VERE.Row2_erste_Erfassungszeile.ColKs1NrVonRow2Info, new RecordItemIndex(1));
            repo.TblVerr_K_VERE.Row2_erste_Erfassungszeile.ColKs1NrVonRow2.PressKeys(von_KST_10);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Tab' Press.", new RecordItemIndex(2));
            Keyboard.Press(System.Windows.Forms.Keys.Tab, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$an_KST_60' with focus on 'TblVerr_K_VERE.Row2_erste_Erfassungszeile.ColKs1NrAnRow2'.", repo.TblVerr_K_VERE.Row2_erste_Erfassungszeile.ColKs1NrAnRow2Info, new RecordItemIndex(3));
            repo.TblVerr_K_VERE.Row2_erste_Erfassungszeile.ColKs1NrAnRow2.PressKeys(an_KST_60);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Tab' Press.", new RecordItemIndex(4));
            Keyboard.Press(System.Windows.Forms.Keys.Tab, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Tab' Press.", new RecordItemIndex(5));
            Keyboard.Press(System.Windows.Forms.Keys.Tab, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Menge1' with focus on 'TblVerr_K_VERE.Row2_erste_Erfassungszeile.ColVerrMenge1Row2'.", repo.TblVerr_K_VERE.Row2_erste_Erfassungszeile.ColVerrMenge1Row2Info, new RecordItemIndex(6));
            repo.TblVerr_K_VERE.Row2_erste_Erfassungszeile.ColVerrMenge1Row2.PressKeys(Menge1);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Tab' Press.", new RecordItemIndex(7));
            Keyboard.Press(System.Windows.Forms.Keys.Tab, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Tab' Press.", new RecordItemIndex(8));
            Keyboard.Press(System.Windows.Forms.Keys.Tab, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Text_21_1' with focus on 'TblVerr_K_VERE.Row2_erste_Erfassungszeile.ColVerrTextRow2'.", repo.TblVerr_K_VERE.Row2_erste_Erfassungszeile.ColVerrTextRow2Info, new RecordItemIndex(9));
            repo.TblVerr_K_VERE.Row2_erste_Erfassungszeile.ColVerrTextRow2.PressKeys(Text_21_1);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Tab' Press.", new RecordItemIndex(10));
            Keyboard.Press(System.Windows.Forms.Keys.Tab, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'TblVerr_K_VERE.PbDataAccessSave' at Center.", repo.TblVerr_K_VERE.PbDataAccessSaveInfo, new RecordItemIndex(11));
            repo.TblVerr_K_VERE.PbDataAccessSave.Click();
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
