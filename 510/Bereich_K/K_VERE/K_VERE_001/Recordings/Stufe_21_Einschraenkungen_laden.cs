///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace K_VERE_001.Recordings
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Stufe_21_Einschraenkungen_laden recording.
    /// </summary>
    [TestModule("c006bf26-7724-42ee-859a-84861a6d4ee5", ModuleType.Recording, 1)]
    public partial class Stufe_21_Einschraenkungen_laden : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::K_VERE_001.K_VERE_001Repository repository.
        /// </summary>
        public static global::K_VERE_001.K_VERE_001Repository repo = global::K_VERE_001.K_VERE_001Repository.Instance;

        static Stufe_21_Einschraenkungen_laden instance = new Stufe_21_Einschraenkungen_laden();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Stufe_21_Einschraenkungen_laden()
        {
            Jahr = "2020";
            Periode = "1";
            Art_SVE = "SVE";
            Stufe_21 = "21";
            KontoE = "E1000";
            KontoB = "B1000";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Stufe_21_Einschraenkungen_laden Instance
        {
            get { return instance; }
        }

#region Variables

        string _Jahr;

        /// <summary>
        /// Gets or sets the value of variable Jahr.
        /// </summary>
        [TestVariable("a1f60bb3-0829-46b5-8f30-392003833d6d")]
        public string Jahr
        {
            get { return _Jahr; }
            set { _Jahr = value; }
        }

        string _Periode;

        /// <summary>
        /// Gets or sets the value of variable Periode.
        /// </summary>
        [TestVariable("550e2ba8-9b97-4823-acdd-4cc25d2ca1ea")]
        public string Periode
        {
            get { return _Periode; }
            set { _Periode = value; }
        }

        string _Art_SVE;

        /// <summary>
        /// Gets or sets the value of variable Art_SVE.
        /// </summary>
        [TestVariable("ceeb831b-9fca-44a4-ac0d-99a6901c8ba6")]
        public string Art_SVE
        {
            get { return _Art_SVE; }
            set { _Art_SVE = value; }
        }

        string _Stufe_21;

        /// <summary>
        /// Gets or sets the value of variable Stufe_21.
        /// </summary>
        [TestVariable("b0b57ddb-5a94-4fbd-b0ed-0e1ca04016c4")]
        public string Stufe_21
        {
            get { return _Stufe_21; }
            set { _Stufe_21 = value; }
        }

        string _KontoE;

        /// <summary>
        /// Gets or sets the value of variable KontoE.
        /// </summary>
        [TestVariable("80c813a0-a9c4-44e2-ab2f-7d814dd4d3d6")]
        public string KontoE
        {
            get { return _KontoE; }
            set { _KontoE = value; }
        }

        string _KontoB;

        /// <summary>
        /// Gets or sets the value of variable KontoB.
        /// </summary>
        [TestVariable("7f0ef639-d8ac-4f74-b5d2-25c6944cd73c")]
        public string KontoB
        {
            get { return _KontoB; }
            set { _KontoB = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'TblVerr_K_VERE.PbDataAccessNew' at Center.", repo.TblVerr_K_VERE.PbDataAccessNewInfo, new RecordItemIndex(0));
            repo.TblVerr_K_VERE.PbDataAccessNew.Click();
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='0') on item 'TblVerr_K_VERE.ToolBar.PlanNr'.", repo.TblVerr_K_VERE.ToolBar.PlanNrInfo, new RecordItemIndex(1));
            Validate.AttributeEqual(repo.TblVerr_K_VERE.ToolBar.PlanNrInfo, "Text", "0");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left DoubleClick item 'TblVerr_K_VERE.ToolBar.Jahr' at Center.", repo.TblVerr_K_VERE.ToolBar.JahrInfo, new RecordItemIndex(2));
            repo.TblVerr_K_VERE.ToolBar.Jahr.DoubleClick();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Jahr' with focus on 'TblVerr_K_VERE.ToolBar.Jahr'.", repo.TblVerr_K_VERE.ToolBar.JahrInfo, new RecordItemIndex(3));
            repo.TblVerr_K_VERE.ToolBar.Jahr.PressKeys(Jahr);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Tab' Press.", new RecordItemIndex(4));
            Keyboard.Press(System.Windows.Forms.Keys.Tab, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Periode' with focus on 'TblVerr_K_VERE.ToolBar.Periode'.", repo.TblVerr_K_VERE.ToolBar.PeriodeInfo, new RecordItemIndex(5));
            repo.TblVerr_K_VERE.ToolBar.Periode.PressKeys(Periode);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Tab' Press.", new RecordItemIndex(6));
            Keyboard.Press(System.Windows.Forms.Keys.Tab, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Stufe_21' with focus on 'TblVerr_K_VERE.ToolBar.Stufe'.", repo.TblVerr_K_VERE.ToolBar.StufeInfo, new RecordItemIndex(7));
            repo.TblVerr_K_VERE.ToolBar.Stufe.PressKeys(Stufe_21);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Tab' Press.", new RecordItemIndex(8));
            Keyboard.Press(System.Windows.Forms.Keys.Tab, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'TblVerr_K_VERE.PbDataAccessLoad' at Center.", repo.TblVerr_K_VERE.PbDataAccessLoadInfo, new RecordItemIndex(9));
            repo.TblVerr_K_VERE.PbDataAccessLoad.Click();
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
