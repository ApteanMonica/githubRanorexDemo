///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace K_VERE_001.Recordings_K_VEST
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Verr_Stamm_pruefen_untere_Tabelle_Default recording.
    /// </summary>
    [TestModule("ce0d9332-ea47-4f2f-b3cf-734b8e86e8c8", ModuleType.Recording, 1)]
    public partial class Verr_Stamm_pruefen_untere_Tabelle_Default : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::K_VERE_001.K_VERE_001Repository repository.
        /// </summary>
        public static global::K_VERE_001.K_VERE_001Repository repo = global::K_VERE_001.K_VERE_001Repository.Instance;

        static Verr_Stamm_pruefen_untere_Tabelle_Default instance = new Verr_Stamm_pruefen_untere_Tabelle_Default();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Verr_Stamm_pruefen_untere_Tabelle_Default()
        {
            Stufe_20 = "20";
            Art_STS = "STS";
            Stufe_21 = "21";
            Art_SVE = "SVE";
            KontoE = "E1000";
            KontoB = "B1000";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Verr_Stamm_pruefen_untere_Tabelle_Default Instance
        {
            get { return instance; }
        }

#region Variables

        string _Stufe_20;

        /// <summary>
        /// Gets or sets the value of variable Stufe_20.
        /// </summary>
        [TestVariable("e1805809-3a53-4c93-8ad0-966b206eb316")]
        public string Stufe_20
        {
            get { return _Stufe_20; }
            set { _Stufe_20 = value; }
        }

        string _Art_STS;

        /// <summary>
        /// Gets or sets the value of variable Art_STS.
        /// </summary>
        [TestVariable("1bfaeb57-dec0-4ea4-8085-aa037a130552")]
        public string Art_STS
        {
            get { return _Art_STS; }
            set { _Art_STS = value; }
        }

        string _Stufe_21;

        /// <summary>
        /// Gets or sets the value of variable Stufe_21.
        /// </summary>
        [TestVariable("f116cb40-b508-4611-b07d-1df80b6e81cf")]
        public string Stufe_21
        {
            get { return _Stufe_21; }
            set { _Stufe_21 = value; }
        }

        string _Art_SVE;

        /// <summary>
        /// Gets or sets the value of variable Art_SVE.
        /// </summary>
        [TestVariable("52c0906d-3bd2-4ad6-a295-156f4477f557")]
        public string Art_SVE
        {
            get { return _Art_SVE; }
            set { _Art_SVE = value; }
        }

        string _KontoE;

        /// <summary>
        /// Gets or sets the value of variable KontoE.
        /// </summary>
        [TestVariable("47fb9c0d-1ae7-49f2-a2de-d0b647b4f828")]
        public string KontoE
        {
            get { return _KontoE; }
            set { _KontoE = value; }
        }

        string _KontoB;

        /// <summary>
        /// Gets or sets the value of variable KontoB.
        /// </summary>
        [TestVariable("5ef6a63c-9554-4a08-88d7-887e4c5cf792")]
        public string KontoB
        {
            get { return _KontoB; }
            set { _KontoB = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            // Zeile_1 untere Tabelle
            Report.Log(ReportLevel.Info, "Section", "Zeile_1 untere Tabelle", new RecordItemIndex(0));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='0') on item 'MdiMain_K_VEST.Untere_Tabelle.Row1.ColVestNrRow1'.", repo.MdiMain_K_VEST.Untere_Tabelle.Row1.ColVestNrRow1Info, new RecordItemIndex(1));
            Validate.AttributeEqual(repo.MdiMain_K_VEST.Untere_Tabelle.Row1.ColVestNrRow1Info, "Text", "0");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='FIBU-Daten') on item 'MdiMain_K_VEST.Untere_Tabelle.Row1.ColVestBezRow1'.", repo.MdiMain_K_VEST.Untere_Tabelle.Row1.ColVestBezRow1Info, new RecordItemIndex(2));
            Validate.AttributeEqual(repo.MdiMain_K_VEST.Untere_Tabelle.Row1.ColVestBezRow1Info, "Text", "FIBU-Daten");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='') on item 'MdiMain_K_VEST.Untere_Tabelle.Row1.ColVestVeraCdRow1'.", repo.MdiMain_K_VEST.Untere_Tabelle.Row1.ColVestVeraCdRow1Info, new RecordItemIndex(3));
            Validate.AttributeEqual(repo.MdiMain_K_VEST.Untere_Tabelle.Row1.ColVestVeraCdRow1Info, "Text", "");
            
            // Zeile_2 untere Tabelle
            Report.Log(ReportLevel.Info, "Section", "Zeile_2 untere Tabelle", new RecordItemIndex(4));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Stufe_20) on item 'MdiMain_K_VEST.Untere_Tabelle.Row2.ColVestNrRow2'.", repo.MdiMain_K_VEST.Untere_Tabelle.Row2.ColVestNrRow2Info, new RecordItemIndex(5));
            Validate.AttributeEqual(repo.MdiMain_K_VEST.Untere_Tabelle.Row2.ColVestNrRow2Info, "Text", Stufe_20);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='Import Stundensatz') on item 'MdiMain_K_VEST.Untere_Tabelle.Row2.ColVestBezRow2'.", repo.MdiMain_K_VEST.Untere_Tabelle.Row2.ColVestBezRow2Info, new RecordItemIndex(6));
            Validate.AttributeEqual(repo.MdiMain_K_VEST.Untere_Tabelle.Row2.ColVestBezRow2Info, "Text", "Import Stundensatz");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Art_STS) on item 'MdiMain_K_VEST.Untere_Tabelle.Row2.ColVestVeraCdRow2'.", repo.MdiMain_K_VEST.Untere_Tabelle.Row2.ColVestVeraCdRow2Info, new RecordItemIndex(7));
            Validate.AttributeEqual(repo.MdiMain_K_VEST.Untere_Tabelle.Row2.ColVestVeraCdRow2Info, "Text", Art_STS);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='0') on item 'MdiMain_K_VEST.Untere_Tabelle.Row2.ColVestVeraFormelRow2'.", repo.MdiMain_K_VEST.Untere_Tabelle.Row2.ColVestVeraFormelRow2Info, new RecordItemIndex(8));
            Validate.AttributeEqual(repo.MdiMain_K_VEST.Untere_Tabelle.Row2.ColVestVeraFormelRow2Info, "Text", "0");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='Stundensatz erfassen') on item 'MdiMain_K_VEST.Untere_Tabelle.Row2.ColVestVeraBezRow2'.", repo.MdiMain_K_VEST.Untere_Tabelle.Row2.ColVestVeraBezRow2Info, new RecordItemIndex(9));
            Validate.AttributeEqual(repo.MdiMain_K_VEST.Untere_Tabelle.Row2.ColVestVeraBezRow2Info, "Text", "Stundensatz erfassen");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='') on item 'MdiMain_K_VEST.Untere_Tabelle.Row2.ColKtoNrVonRow2'.", repo.MdiMain_K_VEST.Untere_Tabelle.Row2.ColKtoNrVonRow2Info, new RecordItemIndex(10));
            Validate.AttributeEqual(repo.MdiMain_K_VEST.Untere_Tabelle.Row2.ColKtoNrVonRow2Info, "Text", "");
            
            // Zeile_3 untere Tabelle
            Report.Log(ReportLevel.Info, "Section", "Zeile_3 untere Tabelle", new RecordItemIndex(11));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Stufe_21) on item 'MdiMain_K_VEST.Untere_Tabelle.Row3.ColVestNrRow3'.", repo.MdiMain_K_VEST.Untere_Tabelle.Row3.ColVestNrRow3Info, new RecordItemIndex(12));
            Validate.AttributeEqual(repo.MdiMain_K_VEST.Untere_Tabelle.Row3.ColVestNrRow3Info, "Text", Stufe_21);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='Werkstattstunden verrechnen') on item 'MdiMain_K_VEST.Untere_Tabelle.Row3.ColVestBezRow3'.", repo.MdiMain_K_VEST.Untere_Tabelle.Row3.ColVestBezRow3Info, new RecordItemIndex(13));
            Validate.AttributeEqual(repo.MdiMain_K_VEST.Untere_Tabelle.Row3.ColVestBezRow3Info, "Text", "Werkstattstunden verrechnen");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Art_SVE) on item 'MdiMain_K_VEST.Untere_Tabelle.Row3.ColVestVeraCdRow3'.", repo.MdiMain_K_VEST.Untere_Tabelle.Row3.ColVestVeraCdRow3Info, new RecordItemIndex(14));
            Validate.AttributeEqual(repo.MdiMain_K_VEST.Untere_Tabelle.Row3.ColVestVeraCdRow3Info, "Text", Art_SVE);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='3') on item 'MdiMain_K_VEST.Untere_Tabelle.Row3.ColVestVeraFormelRow3'.", repo.MdiMain_K_VEST.Untere_Tabelle.Row3.ColVestVeraFormelRow3Info, new RecordItemIndex(15));
            Validate.AttributeEqual(repo.MdiMain_K_VEST.Untere_Tabelle.Row3.ColVestVeraFormelRow3Info, "Text", "3");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='Stunden verrechnen') on item 'MdiMain_K_VEST.Untere_Tabelle.Row3.ColVestVeraBezRow3'.", repo.MdiMain_K_VEST.Untere_Tabelle.Row3.ColVestVeraBezRow3Info, new RecordItemIndex(16));
            Validate.AttributeEqual(repo.MdiMain_K_VEST.Untere_Tabelle.Row3.ColVestVeraBezRow3Info, "Text", "Stunden verrechnen");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$KontoE) on item 'MdiMain_K_VEST.Untere_Tabelle.Row3.ColKtoNrVonRow3'.", repo.MdiMain_K_VEST.Untere_Tabelle.Row3.ColKtoNrVonRow3Info, new RecordItemIndex(17));
            Validate.AttributeEqual(repo.MdiMain_K_VEST.Untere_Tabelle.Row3.ColKtoNrVonRow3Info, "Text", KontoE);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='') on item 'MdiMain_K_VEST.Untere_Tabelle.Row3.ColKs1NrVonRow3'.", repo.MdiMain_K_VEST.Untere_Tabelle.Row3.ColKs1NrVonRow3Info, new RecordItemIndex(18));
            Validate.AttributeEqual(repo.MdiMain_K_VEST.Untere_Tabelle.Row3.ColKs1NrVonRow3Info, "Text", "");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$KontoB) on item 'MdiMain_K_VEST.Untere_Tabelle.Row3.ColKtoNrAnRow3'.", repo.MdiMain_K_VEST.Untere_Tabelle.Row3.ColKtoNrAnRow3Info, new RecordItemIndex(19));
            Validate.AttributeEqual(repo.MdiMain_K_VEST.Untere_Tabelle.Row3.ColKtoNrAnRow3Info, "Text", KontoB);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='') on item 'MdiMain_K_VEST.Untere_Tabelle.Row3.ColKs1NrAnRow3'.", repo.MdiMain_K_VEST.Untere_Tabelle.Row3.ColKs1NrAnRow3Info, new RecordItemIndex(20));
            Validate.AttributeEqual(repo.MdiMain_K_VEST.Untere_Tabelle.Row3.ColKs1NrAnRow3Info, "Text", "");
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
