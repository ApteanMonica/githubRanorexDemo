///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace K_PBU_001.Recordings
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Kontrolle_Monatswerte_Sortierung_nach_Kontonr recording.
    /// </summary>
    [TestModule("a7eb93a5-d012-40c4-8266-7d3f6177fce1", ModuleType.Recording, 1)]
    public partial class Kontrolle_Monatswerte_Sortierung_nach_Kontonr : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::K_PBU_001.K_PBU_001Repository repository.
        /// </summary>
        public static global::K_PBU_001.K_PBU_001Repository repo = global::K_PBU_001.K_PBU_001Repository.Instance;

        static Kontrolle_Monatswerte_Sortierung_nach_Kontonr instance = new Kontrolle_Monatswerte_Sortierung_nach_Kontonr();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Kontrolle_Monatswerte_Sortierung_nach_Kontonr()
        {
            Konto2 = "0100";
            Konto = "7380";
            Konto3 = "0660";
            Kostentraeger2 = "200";
            Kostentraeger3 = "300";
            Kostentraeger = "100";
            PVT_Code = "PVT_2022";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Kontrolle_Monatswerte_Sortierung_nach_Kontonr Instance
        {
            get { return instance; }
        }

#region Variables

        string _Konto2;

        /// <summary>
        /// Gets or sets the value of variable Konto2.
        /// </summary>
        [TestVariable("ab6e29a4-b328-4c6a-892d-ee83f7c1bbd0")]
        public string Konto2
        {
            get { return _Konto2; }
            set { _Konto2 = value; }
        }

        string _Konto;

        /// <summary>
        /// Gets or sets the value of variable Konto.
        /// </summary>
        [TestVariable("3b98166b-e569-4135-9ce9-5bbc04ff4c53")]
        public string Konto
        {
            get { return _Konto; }
            set { _Konto = value; }
        }

        string _Konto3;

        /// <summary>
        /// Gets or sets the value of variable Konto3.
        /// </summary>
        [TestVariable("94ffa84e-1ebf-4a16-a0d9-be6a27c29215")]
        public string Konto3
        {
            get { return _Konto3; }
            set { _Konto3 = value; }
        }

        string _Kostentraeger2;

        /// <summary>
        /// Gets or sets the value of variable Kostentraeger2.
        /// </summary>
        [TestVariable("ccf048a1-faf5-4aac-8980-1781bc92fa62")]
        public string Kostentraeger2
        {
            get { return _Kostentraeger2; }
            set { _Kostentraeger2 = value; }
        }

        string _Kostentraeger3;

        /// <summary>
        /// Gets or sets the value of variable Kostentraeger3.
        /// </summary>
        [TestVariable("7cf03454-8897-44a1-90b1-92860e04e6a4")]
        public string Kostentraeger3
        {
            get { return _Kostentraeger3; }
            set { _Kostentraeger3 = value; }
        }

        string _Kostentraeger;

        /// <summary>
        /// Gets or sets the value of variable Kostentraeger.
        /// </summary>
        [TestVariable("218e82c9-9ae7-42df-99e6-db7ae0701351")]
        public string Kostentraeger
        {
            get { return _Kostentraeger; }
            set { _Kostentraeger = value; }
        }

        string _PVT_Code;

        /// <summary>
        /// Gets or sets the value of variable PVT_Code.
        /// </summary>
        [TestVariable("91aecdf5-a413-4eef-83cc-7b6297d10a95")]
        public string PVT_Code
        {
            get { return _PVT_Code; }
            set { _PVT_Code = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'TblK.PbCommonLaden' at Center.", repo.TblK.PbCommonLadenInfo, new RecordItemIndex(0));
            repo.TblK.PbCommonLaden.Click();
            
            // Zeile 1
            Report.Log(ReportLevel.Info, "Section", "Zeile 1", new RecordItemIndex(1));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='2') on item 'TblK.FlexGrid_Tabelle.Row_1.ColPosRow1'.", repo.TblK.FlexGrid_Tabelle.Row_1.ColPosRow1Info, new RecordItemIndex(2));
            Validate.AttributeEqual(repo.TblK.FlexGrid_Tabelle.Row_1.ColPosRow1Info, "Text", "2");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Konto2) on item 'TblK.FlexGrid_Tabelle.Row_1.ColKtoNrRow1'.", repo.TblK.FlexGrid_Tabelle.Row_1.ColKtoNrRow1Info, new RecordItemIndex(3));
            Validate.AttributeEqual(repo.TblK.FlexGrid_Tabelle.Row_1.ColKtoNrRow1Info, "Text", Konto2);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Kostentraeger2) on item 'TblK.FlexGrid_Tabelle.Row_1.ColKs2NrRow1'.", repo.TblK.FlexGrid_Tabelle.Row_1.ColKs2NrRow1Info, new RecordItemIndex(4));
            Validate.AttributeEqual(repo.TblK.FlexGrid_Tabelle.Row_1.ColKs2NrRow1Info, "Text", Kostentraeger2);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$PVT_Code) on item 'TblK.FlexGrid_Tabelle.Row_1.ColVerteilRow1'.", repo.TblK.FlexGrid_Tabelle.Row_1.ColVerteilRow1Info, new RecordItemIndex(5));
            Validate.AttributeEqual(repo.TblK.FlexGrid_Tabelle.Row_1.ColVerteilRow1Info, "Text", PVT_Code);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='100.000') on item 'TblK.FlexGrid_Tabelle.Row_1.Col00Row1'.", repo.TblK.FlexGrid_Tabelle.Row_1.Col00Row1Info, new RecordItemIndex(6));
            Validate.AttributeEqual(repo.TblK.FlexGrid_Tabelle.Row_1.Col00Row1Info, "Text", "100.000");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (Text>'15.000\t5.000\t10.000\t20.000\t5.000\t5.000\t\t\t10.000\t5.000\t5.000\t20.000') on item 'TblK.FlexGrid_Tabelle.Row_1.Row1'.", repo.TblK.FlexGrid_Tabelle.Row_1.Row1Info, new RecordItemIndex(7));
            Validate.AttributeContains(repo.TblK.FlexGrid_Tabelle.Row_1.Row1Info, "Text", "15.000\t5.000\t10.000\t20.000\t5.000\t5.000\t\t\t10.000\t5.000\t5.000\t20.000");
            
            // Zeile 2
            Report.Log(ReportLevel.Info, "Section", "Zeile 2", new RecordItemIndex(8));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='3') on item 'TblK.FlexGrid_Tabelle.Row_2.ColPosRow2'.", repo.TblK.FlexGrid_Tabelle.Row_2.ColPosRow2Info, new RecordItemIndex(9));
            Validate.AttributeEqual(repo.TblK.FlexGrid_Tabelle.Row_2.ColPosRow2Info, "Text", "3");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Konto3) on item 'TblK.FlexGrid_Tabelle.Row_2.ColKtoNrRow2'.", repo.TblK.FlexGrid_Tabelle.Row_2.ColKtoNrRow2Info, new RecordItemIndex(10));
            Validate.AttributeEqual(repo.TblK.FlexGrid_Tabelle.Row_2.ColKtoNrRow2Info, "Text", Konto3);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Kostentraeger3) on item 'TblK.FlexGrid_Tabelle.Row_2.ColKs2NrRow2'.", repo.TblK.FlexGrid_Tabelle.Row_2.ColKs2NrRow2Info, new RecordItemIndex(11));
            Validate.AttributeEqual(repo.TblK.FlexGrid_Tabelle.Row_2.ColKs2NrRow2Info, "Text", Kostentraeger3);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='200.000') on item 'TblK.FlexGrid_Tabelle.Row_2.Col00Row2'.", repo.TblK.FlexGrid_Tabelle.Row_2.Col00Row2Info, new RecordItemIndex(12));
            Validate.AttributeEqual(repo.TblK.FlexGrid_Tabelle.Row_2.Col00Row2Info, "Text", "200.000");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (Text>'16.666\t16.667\t16.667\t16.668\t16.666\t16.666\t16.668\t16.666\t16.666\t16.666\t16.667\t16.667') on item 'TblK.FlexGrid_Tabelle.Row_2.Row2'.", repo.TblK.FlexGrid_Tabelle.Row_2.Row2Info, new RecordItemIndex(13));
            Validate.AttributeContains(repo.TblK.FlexGrid_Tabelle.Row_2.Row2Info, "Text", "16.666\t16.667\t16.667\t16.668\t16.666\t16.666\t16.668\t16.666\t16.666\t16.666\t16.667\t16.667");
            
            // Zeile 3
            Report.Log(ReportLevel.Info, "Section", "Zeile 3", new RecordItemIndex(14));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='1') on item 'TblK.FlexGrid_Tabelle.Row_3.ColPosRow3'.", repo.TblK.FlexGrid_Tabelle.Row_3.ColPosRow3Info, new RecordItemIndex(15));
            Validate.AttributeEqual(repo.TblK.FlexGrid_Tabelle.Row_3.ColPosRow3Info, "Text", "1");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Konto) on item 'TblK.FlexGrid_Tabelle.Row_3.ColKtoNrRow3'.", repo.TblK.FlexGrid_Tabelle.Row_3.ColKtoNrRow3Info, new RecordItemIndex(16));
            Validate.AttributeEqual(repo.TblK.FlexGrid_Tabelle.Row_3.ColKtoNrRow3Info, "Text", Konto);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Kostentraeger) on item 'TblK.FlexGrid_Tabelle.Row_3.ColKs2NrRow3'.", repo.TblK.FlexGrid_Tabelle.Row_3.ColKs2NrRow3Info, new RecordItemIndex(17));
            Validate.AttributeEqual(repo.TblK.FlexGrid_Tabelle.Row_3.ColKs2NrRow3Info, "Text", Kostentraeger);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='15.000') on item 'TblK.FlexGrid_Tabelle.Row_3.Col00Row3'.", repo.TblK.FlexGrid_Tabelle.Row_3.Col00Row3Info, new RecordItemIndex(18));
            Validate.AttributeEqual(repo.TblK.FlexGrid_Tabelle.Row_3.Col00Row3Info, "Text", "15.000");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (Text>'1.000\t1.000\t1.000\t1.000\t1.000\t1.000\t1.500\t1.500\t1.500\t1.500\t1.500\t1.500') on item 'TblK.FlexGrid_Tabelle.Row_3.Row3'.", repo.TblK.FlexGrid_Tabelle.Row_3.Row3Info, new RecordItemIndex(19));
            Validate.AttributeContains(repo.TblK.FlexGrid_Tabelle.Row_3.Row3Info, "Text", "1.000\t1.000\t1.000\t1.000\t1.000\t1.000\t1.500\t1.500\t1.500\t1.500\t1.500\t1.500");
            
            // Summenzeile prüfen
            Report.Log(ReportLevel.Info, "Section", "Summenzeile prüfen", new RecordItemIndex(20));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='SUMME') on item 'TblK.Fusszeile_Summe.ColPosRow0'.", repo.TblK.Fusszeile_Summe.ColPosRow0Info, new RecordItemIndex(21));
            Validate.AttributeEqual(repo.TblK.Fusszeile_Summe.ColPosRow0Info, "Text", "SUMME");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='315.000') on item 'TblK.Fusszeile_Summe.Col00Row0'.", repo.TblK.Fusszeile_Summe.Col00Row0Info, new RecordItemIndex(22));
            Validate.AttributeEqual(repo.TblK.Fusszeile_Summe.Col00Row0Info, "Text", "315.000");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (Text>'32.666\t22.667\t27.667\t37.668\t22.666\t22.666\t18.168\t18.166\t28.166\t23.166\t23.167\t38.167') on item 'TblK.Fusszeile_Summe.Row0'.", repo.TblK.Fusszeile_Summe.Row0Info, new RecordItemIndex(23));
            Validate.AttributeContains(repo.TblK.Fusszeile_Summe.Row0Info, "Text", "32.666\t22.667\t27.667\t37.668\t22.666\t22.666\t18.168\t18.166\t28.166\t23.166\t23.167\t38.167");
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
