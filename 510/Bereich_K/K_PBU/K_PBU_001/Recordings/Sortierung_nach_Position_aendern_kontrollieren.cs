///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace K_PBU_001.Recordings
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Sortierung_nach_Position_aendern_kontrollieren recording.
    /// </summary>
    [TestModule("b143f678-0e38-47cd-917b-240c0a52f35c", ModuleType.Recording, 1)]
    public partial class Sortierung_nach_Position_aendern_kontrollieren : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::K_PBU_001.K_PBU_001Repository repository.
        /// </summary>
        public static global::K_PBU_001.K_PBU_001Repository repo = global::K_PBU_001.K_PBU_001Repository.Instance;

        static Sortierung_nach_Position_aendern_kontrollieren instance = new Sortierung_nach_Position_aendern_kontrollieren();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Sortierung_nach_Position_aendern_kontrollieren()
        {
            Konto2 = "0100";
            Konto = "7380";
            Konto3 = "0660";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Sortierung_nach_Position_aendern_kontrollieren Instance
        {
            get { return instance; }
        }

#region Variables

        string _Konto2;

        /// <summary>
        /// Gets or sets the value of variable Konto2.
        /// </summary>
        [TestVariable("841cd0bc-3c1b-4c0b-a728-765babbdfb1f")]
        public string Konto2
        {
            get { return _Konto2; }
            set { _Konto2 = value; }
        }

        string _Konto;

        /// <summary>
        /// Gets or sets the value of variable Konto.
        /// </summary>
        [TestVariable("be58cb08-f5f0-4bed-b936-02580ca96e09")]
        public string Konto
        {
            get { return _Konto; }
            set { _Konto = value; }
        }

        string _Konto3;

        /// <summary>
        /// Gets or sets the value of variable Konto3.
        /// </summary>
        [TestVariable("6a3bd27f-77f4-46c3-8bd1-6331183c3459")]
        public string Konto3
        {
            get { return _Konto3; }
            set { _Konto3 = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'TblK.CbPos' at Center.", repo.TblK.CbPosInfo, new RecordItemIndex(0));
            repo.TblK.CbPos.Click();
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Checked='True') on item 'TblK.CbPos'.", repo.TblK.CbPosInfo, new RecordItemIndex(1));
            Validate.AttributeEqual(repo.TblK.CbPosInfo, "Checked", "True");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'TblK.PbCommonLaden' at Center.", repo.TblK.PbCommonLadenInfo, new RecordItemIndex(2));
            repo.TblK.PbCommonLaden.Click();
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='1') on item 'TblK.FlexGrid_Tabelle.Row_1.ColPosRow1'.", repo.TblK.FlexGrid_Tabelle.Row_1.ColPosRow1Info, new RecordItemIndex(3));
            Validate.AttributeEqual(repo.TblK.FlexGrid_Tabelle.Row_1.ColPosRow1Info, "Text", "1");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Konto) on item 'TblK.FlexGrid_Tabelle.Row_1.ColKtoNrRow1'.", repo.TblK.FlexGrid_Tabelle.Row_1.ColKtoNrRow1Info, new RecordItemIndex(4));
            Validate.AttributeEqual(repo.TblK.FlexGrid_Tabelle.Row_1.ColKtoNrRow1Info, "Text", Konto);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='15.000') on item 'TblK.FlexGrid_Tabelle.Row_1.Col00Row1'.", repo.TblK.FlexGrid_Tabelle.Row_1.Col00Row1Info, new RecordItemIndex(5));
            Validate.AttributeEqual(repo.TblK.FlexGrid_Tabelle.Row_1.Col00Row1Info, "Text", "15.000");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='2') on item 'TblK.FlexGrid_Tabelle.Row_2.ColPosRow2'.", repo.TblK.FlexGrid_Tabelle.Row_2.ColPosRow2Info, new RecordItemIndex(6));
            Validate.AttributeEqual(repo.TblK.FlexGrid_Tabelle.Row_2.ColPosRow2Info, "Text", "2");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Konto2) on item 'TblK.FlexGrid_Tabelle.Row_2.ColKtoNrRow2'.", repo.TblK.FlexGrid_Tabelle.Row_2.ColKtoNrRow2Info, new RecordItemIndex(7));
            Validate.AttributeEqual(repo.TblK.FlexGrid_Tabelle.Row_2.ColKtoNrRow2Info, "Text", Konto2);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='100.000') on item 'TblK.FlexGrid_Tabelle.Row_2.Col00Row2'.", repo.TblK.FlexGrid_Tabelle.Row_2.Col00Row2Info, new RecordItemIndex(8));
            Validate.AttributeEqual(repo.TblK.FlexGrid_Tabelle.Row_2.Col00Row2Info, "Text", "100.000");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='3') on item 'TblK.FlexGrid_Tabelle.Row_3.ColPosRow3'.", repo.TblK.FlexGrid_Tabelle.Row_3.ColPosRow3Info, new RecordItemIndex(9));
            Validate.AttributeEqual(repo.TblK.FlexGrid_Tabelle.Row_3.ColPosRow3Info, "Text", "3");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Konto3) on item 'TblK.FlexGrid_Tabelle.Row_3.ColKtoNrRow3'.", repo.TblK.FlexGrid_Tabelle.Row_3.ColKtoNrRow3Info, new RecordItemIndex(10));
            Validate.AttributeEqual(repo.TblK.FlexGrid_Tabelle.Row_3.ColKtoNrRow3Info, "Text", Konto3);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='200.000') on item 'TblK.FlexGrid_Tabelle.Row_3.Col00Row3'.", repo.TblK.FlexGrid_Tabelle.Row_3.Col00Row3Info, new RecordItemIndex(11));
            Validate.AttributeEqual(repo.TblK.FlexGrid_Tabelle.Row_3.Col00Row3Info, "Text", "200.000");
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
