///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace K_PBU_001.Recordings
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Einschraenkungen recording.
    /// </summary>
    [TestModule("ceae965f-c1d3-4694-9518-34719b71e074", ModuleType.Recording, 1)]
    public partial class Einstellungen_setzen : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::K_PBU_001.K_PBU_001Repository repository.
        /// </summary>
        public static global::K_PBU_001.K_PBU_001Repository repo = global::K_PBU_001.K_PBU_001Repository.Instance;

        static Einstellungen_setzen instance = new Einstellungen_setzen();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Einstellungen_setzen()
        {
            Kostenstelle = "10";
            Jahr = "2022";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Einstellungen_setzen Instance
        {
            get { return instance; }
        }

#region Variables

        string _Kostenstelle;

        /// <summary>
        /// Gets or sets the value of variable Kostenstelle.
        /// </summary>
        [TestVariable("6a6c920f-3482-4137-94b1-43a25dad9d99")]
        public string Kostenstelle
        {
            get { return _Kostenstelle; }
            set { _Kostenstelle = value; }
        }

        string _Jahr;

        /// <summary>
        /// Gets or sets the value of variable Jahr.
        /// </summary>
        [TestVariable("9418eca6-c319-43a9-b541-ffc2b7105eb2")]
        public string Jahr
        {
            get { return _Jahr; }
            set { _Jahr = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'TblK.PbCommonNeu' at Center.", repo.TblK.PbCommonNeuInfo, new RecordItemIndex(0));
            repo.TblK.PbCommonNeu.Click();
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 1s.", new RecordItemIndex(1));
            Delay.Duration(1000, false);
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute Checked to 'False' on item 'TblK.CbBereich1'.", repo.TblK.CbBereich1Info, new RecordItemIndex(2));
            repo.TblK.CbBereich1.Element.SetAttributeValue("Checked", "False");
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 2s.", new RecordItemIndex(3));
            Delay.Duration(2000, false);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'TblK.CbBereich1' at Center.", repo.TblK.CbBereich1Info, new RecordItemIndex(4));
            repo.TblK.CbBereich1.Click();
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 1s.", new RecordItemIndex(5));
            Delay.Duration(1000, false);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='1') on item 'TblK.Plan'.", repo.TblK.PlanInfo, new RecordItemIndex(6));
            Validate.AttributeEqual(repo.TblK.PlanInfo, "Text", "1");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Checked='True') on item 'TblK.CbBereich1'.", repo.TblK.CbBereich1Info, new RecordItemIndex(7));
            Validate.AttributeEqual(repo.TblK.CbBereich1Info, "Checked", "True");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Kostenstelle' with focus on 'TblK.DfKs1Nr'.", repo.TblK.DfKs1NrInfo, new RecordItemIndex(8));
            repo.TblK.DfKs1Nr.PressKeys(Kostenstelle);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Tab' Press.", new RecordItemIndex(9));
            Keyboard.Press(System.Windows.Forms.Keys.Tab, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left DoubleClick item 'TblK.Jahr' at Center.", repo.TblK.JahrInfo, new RecordItemIndex(10));
            repo.TblK.Jahr.DoubleClick();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Delete' Press.", new RecordItemIndex(11));
            Keyboard.Press(System.Windows.Forms.Keys.Delete, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Jahr' with focus on 'TblK.Jahr'.", repo.TblK.JahrInfo, new RecordItemIndex(12));
            repo.TblK.Jahr.PressKeys(Jahr);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Tab' Press.", new RecordItemIndex(13));
            Keyboard.Press(System.Windows.Forms.Keys.Tab, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Kostenstelle) on item 'TblK.DfKs1Nr'.", repo.TblK.DfKs1NrInfo, new RecordItemIndex(14));
            Validate.AttributeEqual(repo.TblK.DfKs1NrInfo, "Text", Kostenstelle);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='Fliesen') on item 'TblK.DfKs1Bez'.", repo.TblK.DfKs1BezInfo, new RecordItemIndex(15));
            Validate.AttributeEqual(repo.TblK.DfKs1BezInfo, "Text", "Fliesen");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Jahr) on item 'TblK.Jahr'.", repo.TblK.JahrInfo, new RecordItemIndex(16));
            Validate.AttributeEqual(repo.TblK.JahrInfo, "Text", Jahr);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Checked='False') on item 'TblK.CbPos'.", repo.TblK.CbPosInfo, new RecordItemIndex(17));
            Validate.AttributeEqual(repo.TblK.CbPosInfo, "Checked", "False");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'TblK.PbCommonLaden' at Center.", repo.TblK.PbCommonLadenInfo, new RecordItemIndex(18));
            repo.TblK.PbCommonLaden.Click();
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
