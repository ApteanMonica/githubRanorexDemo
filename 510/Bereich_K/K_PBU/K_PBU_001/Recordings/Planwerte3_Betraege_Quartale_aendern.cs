///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace K_PBU_001.Recordings
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Planwerte3_Betraege_Quartale_aendern recording.
    /// </summary>
    [TestModule("db9c29ec-5095-4d6b-aadf-956f4cde88ef", ModuleType.Recording, 1)]
    public partial class Planwerte3_Betraege_Quartale_aendern : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::K_PBU_001.K_PBU_001Repository repository.
        /// </summary>
        public static global::K_PBU_001.K_PBU_001Repository repo = global::K_PBU_001.K_PBU_001Repository.Instance;

        static Planwerte3_Betraege_Quartale_aendern instance = new Planwerte3_Betraege_Quartale_aendern();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Planwerte3_Betraege_Quartale_aendern()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Planwerte3_Betraege_Quartale_aendern Instance
        {
            get { return instance; }
        }

#region Variables

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            // Zeile 3 Jahressumme ändern
            Report.Log(ReportLevel.Info, "Section", "Zeile 3 Jahressumme ändern", new RecordItemIndex(0));
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'TblK.FlexGrid_Tabelle.Row_3.Col00Row3' at Center.", repo.TblK.FlexGrid_Tabelle.Row_3.Col00Row3Info, new RecordItemIndex(1));
            repo.TblK.FlexGrid_Tabelle.Row_3.Col00Row3.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '100.000' with focus on 'TblK.FlexGrid_Tabelle.Row_3.Col00Row3'.", repo.TblK.FlexGrid_Tabelle.Row_3.Col00Row3Info, new RecordItemIndex(2));
            repo.TblK.FlexGrid_Tabelle.Row_3.Col00Row3.PressKeys("100.000");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Tab' Press.", new RecordItemIndex(3));
            Keyboard.Press(System.Windows.Forms.Keys.Tab, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'TblK.PbCommonSpeichern' at Center.", repo.TblK.PbCommonSpeichernInfo, new RecordItemIndex(4));
            repo.TblK.PbCommonSpeichern.Click();
            
            // Zeile 3 prüfen: gleichmäßige Verteilung
            Report.Log(ReportLevel.Info, "Section", "Zeile 3 prüfen: gleichmäßige Verteilung", new RecordItemIndex(5));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='100.000') on item 'TblK.FlexGrid_Tabelle.Row_3.Col00Row3'.", repo.TblK.FlexGrid_Tabelle.Row_3.Col00Row3Info, new RecordItemIndex(6));
            Validate.AttributeEqual(repo.TblK.FlexGrid_Tabelle.Row_3.Col00Row3Info, "Text", "100.000");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='24.999') on item 'TblK.FlexGrid_Tabelle.Row_3.ColQ1Row3'.", repo.TblK.FlexGrid_Tabelle.Row_3.ColQ1Row3Info, new RecordItemIndex(7));
            Validate.AttributeEqual(repo.TblK.FlexGrid_Tabelle.Row_3.ColQ1Row3Info, "Text", "24.999");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='25.000') on item 'TblK.FlexGrid_Tabelle.Row_3.ColQ2Row3'.", repo.TblK.FlexGrid_Tabelle.Row_3.ColQ2Row3Info, new RecordItemIndex(8));
            Validate.AttributeEqual(repo.TblK.FlexGrid_Tabelle.Row_3.ColQ2Row3Info, "Text", "25.000");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='25.000') on item 'TblK.FlexGrid_Tabelle.Row_3.ColQ3Row3'.", repo.TblK.FlexGrid_Tabelle.Row_3.ColQ3Row3Info, new RecordItemIndex(9));
            Validate.AttributeEqual(repo.TblK.FlexGrid_Tabelle.Row_3.ColQ3Row3Info, "Text", "25.000");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='25.001') on item 'TblK.FlexGrid_Tabelle.Row_3.ColQ4Row3'.", repo.TblK.FlexGrid_Tabelle.Row_3.ColQ4Row3Info, new RecordItemIndex(10));
            Validate.AttributeEqual(repo.TblK.FlexGrid_Tabelle.Row_3.ColQ4Row3Info, "Text", "25.001");
            
            // Zeile 3 Beträge ändern
            Report.Log(ReportLevel.Info, "Section", "Zeile 3 Beträge ändern", new RecordItemIndex(11));
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'TblK.FlexGrid_Tabelle.Row_3.ColQ1Row3' at Center.", repo.TblK.FlexGrid_Tabelle.Row_3.ColQ1Row3Info, new RecordItemIndex(12));
            repo.TblK.FlexGrid_Tabelle.Row_3.ColQ1Row3.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '50.000' with focus on 'TblK.FlexGrid_Tabelle.Row_3.ColQ1Row3'.", repo.TblK.FlexGrid_Tabelle.Row_3.ColQ1Row3Info, new RecordItemIndex(13));
            repo.TblK.FlexGrid_Tabelle.Row_3.ColQ1Row3.PressKeys("50.000");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left DoubleClick item 'TblK.FlexGrid_Tabelle.Row_3.ColQ1Row3' at Center.", repo.TblK.FlexGrid_Tabelle.Row_3.ColQ1Row3Info, new RecordItemIndex(14));
            repo.TblK.FlexGrid_Tabelle.Row_3.ColQ1Row3.DoubleClick();
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='50.000') on item 'TblK.FlexGrid_Tabelle.Row_3.ColQ1Row3'.", repo.TblK.FlexGrid_Tabelle.Row_3.ColQ1Row3Info, new RecordItemIndex(15));
            Validate.AttributeEqual(repo.TblK.FlexGrid_Tabelle.Row_3.ColQ1Row3Info, "Text", "50.000");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='50.000') on item 'TblK.FlexGrid_Tabelle.Row_3.ColQ2Row3'.", repo.TblK.FlexGrid_Tabelle.Row_3.ColQ2Row3Info, new RecordItemIndex(16));
            Validate.AttributeEqual(repo.TblK.FlexGrid_Tabelle.Row_3.ColQ2Row3Info, "Text", "50.000");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='50.000') on item 'TblK.FlexGrid_Tabelle.Row_3.ColQ3Row3'.", repo.TblK.FlexGrid_Tabelle.Row_3.ColQ3Row3Info, new RecordItemIndex(17));
            Validate.AttributeEqual(repo.TblK.FlexGrid_Tabelle.Row_3.ColQ3Row3Info, "Text", "50.000");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='50.000') on item 'TblK.FlexGrid_Tabelle.Row_3.ColQ4Row3'.", repo.TblK.FlexGrid_Tabelle.Row_3.ColQ4Row3Info, new RecordItemIndex(18));
            Validate.AttributeEqual(repo.TblK.FlexGrid_Tabelle.Row_3.ColQ4Row3Info, "Text", "50.000");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'TblK.PbCommonSpeichern' at Center.", repo.TblK.PbCommonSpeichernInfo, new RecordItemIndex(19));
            repo.TblK.PbCommonSpeichern.Click();
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='200.000') on item 'TblK.FlexGrid_Tabelle.Row_3.Col00Row3'.", repo.TblK.FlexGrid_Tabelle.Row_3.Col00Row3Info, new RecordItemIndex(20));
            Validate.AttributeEqual(repo.TblK.FlexGrid_Tabelle.Row_3.Col00Row3Info, "Text", "200.000");
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
