///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace K_PBU_001.Recordings
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Planwerte3_Quartale_ohne_Kostentraeger_erfassen recording.
    /// </summary>
    [TestModule("a0c23ebb-8862-47c5-aa08-e0972c3162bf", ModuleType.Recording, 1)]
    public partial class Planwerte3_Quartale_ohne_Kostentraeger_erfassen : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::K_PBU_001.K_PBU_001Repository repository.
        /// </summary>
        public static global::K_PBU_001.K_PBU_001Repository repo = global::K_PBU_001.K_PBU_001Repository.Instance;

        static Planwerte3_Quartale_ohne_Kostentraeger_erfassen instance = new Planwerte3_Quartale_ohne_Kostentraeger_erfassen();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Planwerte3_Quartale_ohne_Kostentraeger_erfassen()
        {
            Konto3 = "0660";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Planwerte3_Quartale_ohne_Kostentraeger_erfassen Instance
        {
            get { return instance; }
        }

#region Variables

        string _Konto3;

        /// <summary>
        /// Gets or sets the value of variable Konto3.
        /// </summary>
        [TestVariable("d5eb23f8-4fda-4c07-945e-08d329d975fe")]
        public string Konto3
        {
            get { return _Konto3; }
            set { _Konto3 = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'TblK.PbCommonEinfuegen' at Center.", repo.TblK.PbCommonEinfuegenInfo, new RecordItemIndex(0));
            repo.TblK.PbCommonEinfuegen.Click();
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 1m to exist. Associated repository item: 'TblK.FlexGrid_Tabelle.Row_3.Row3'", repo.TblK.FlexGrid_Tabelle.Row_3.Row3Info, new ActionTimeout(60000), new RecordItemIndex(1));
            repo.TblK.FlexGrid_Tabelle.Row_3.Row3Info.WaitForExists(60000);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'TblK.FlexGrid_Tabelle.Row_3.ColKtoNrRow3' at Center.", repo.TblK.FlexGrid_Tabelle.Row_3.ColKtoNrRow3Info, new RecordItemIndex(2));
            repo.TblK.FlexGrid_Tabelle.Row_3.ColKtoNrRow3.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Konto3' with focus on 'TblK.FlexGrid_Tabelle.Row_3.ColKtoNrRow3'.", repo.TblK.FlexGrid_Tabelle.Row_3.ColKtoNrRow3Info, new RecordItemIndex(3));
            repo.TblK.FlexGrid_Tabelle.Row_3.ColKtoNrRow3.PressKeys(Konto3);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Tab' Press.", new RecordItemIndex(4));
            Keyboard.Press(System.Windows.Forms.Keys.Tab, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Tab' Press.", new RecordItemIndex(5));
            Keyboard.Press(System.Windows.Forms.Keys.Tab, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '3' with focus on 'TblK.FlexGrid_Tabelle.Row_3.ColPosRow3'.", repo.TblK.FlexGrid_Tabelle.Row_3.ColPosRow3Info, new RecordItemIndex(6));
            repo.TblK.FlexGrid_Tabelle.Row_3.ColPosRow3.PressKeys("3");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Tab' Press.", new RecordItemIndex(7));
            Keyboard.Press(System.Windows.Forms.Keys.Tab, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Tab' Press.", new RecordItemIndex(8));
            Keyboard.Press(System.Windows.Forms.Keys.Tab, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
