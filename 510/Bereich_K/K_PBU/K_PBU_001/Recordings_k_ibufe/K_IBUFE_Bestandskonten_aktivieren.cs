///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace K_PBU_001.Recordings_k_ibufe
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The K_IBUFE_Bestandskonten_aktivieren recording.
    /// </summary>
    [TestModule("0c8c5ec7-ceb6-4bd7-a1f0-a4d842df0bbe", ModuleType.Recording, 1)]
    public partial class K_IBUFE_Bestandskonten_aktivieren : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::K_PBU_001.K_PBU_001Repository repository.
        /// </summary>
        public static global::K_PBU_001.K_PBU_001Repository repo = global::K_PBU_001.K_PBU_001Repository.Instance;

        static K_IBUFE_Bestandskonten_aktivieren instance = new K_IBUFE_Bestandskonten_aktivieren();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public K_IBUFE_Bestandskonten_aktivieren()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static K_IBUFE_Bestandskonten_aktivieren Instance
        {
            get { return instance; }
        }

#region Variables

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'TblIbufe.PbKontenKonten' at Center.", repo.TblIbufe.PbKontenKontenInfo, new RecordItemIndex(0));
            repo.TblIbufe.PbKontenKonten.Click();
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'KIBUFE.Bestandskonten' at Center.", repo.KIBUFE.BestandskontenInfo, new RecordItemIndex(1));
            repo.KIBUFE.Bestandskonten.Click();
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 1s.", new RecordItemIndex(2));
            Delay.Duration(1000, false);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'TblIbufe.PbKontenKonten' at Center.", repo.TblIbufe.PbKontenKontenInfo, new RecordItemIndex(3));
            repo.TblIbufe.PbKontenKonten.Click();
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Checked='True') on item 'KIBUFE.Bestandskonten'.", repo.KIBUFE.BestandskontenInfo, new RecordItemIndex(4));
            Validate.AttributeEqual(repo.KIBUFE.BestandskontenInfo, "Checked", "True");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Checked='True') on item 'KIBUFE.Erfolgskonten'.", repo.KIBUFE.ErfolgskontenInfo, new RecordItemIndex(5));
            Validate.AttributeEqual(repo.KIBUFE.ErfolgskontenInfo, "Checked", "True");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Escape' Press.", new RecordItemIndex(6));
            Keyboard.Press(System.Windows.Forms.Keys.Escape, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
