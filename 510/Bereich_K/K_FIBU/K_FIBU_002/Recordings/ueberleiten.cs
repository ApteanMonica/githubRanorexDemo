///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace K_FIBU_002.Recordings
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The ueberleiten recording.
    /// </summary>
    [TestModule("a06dafed-0d3d-485d-807f-85f7b28a52f3", ModuleType.Recording, 1)]
    public partial class Ueberleiten : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::K_FIBU_002.K_FIBU_002Repository repository.
        /// </summary>
        public static global::K_FIBU_002.K_FIBU_002Repository repo = global::K_FIBU_002.K_FIBU_002Repository.Instance;

        static Ueberleiten instance = new Ueberleiten();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Ueberleiten()
        {
            Jahr_von = "2017";
            Periode_von = "1";
            Jahr_bis = "2017";
            Periode_bis = "2";
            Periode_von_validate = "01";
            Periode_bis_validate = "02";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Ueberleiten Instance
        {
            get { return instance; }
        }

#region Variables

        string _Jahr_von;

        /// <summary>
        /// Gets or sets the value of variable Jahr_von.
        /// </summary>
        [TestVariable("4deb858c-43a6-4515-82df-89cf0baaca1a")]
        public string Jahr_von
        {
            get { return _Jahr_von; }
            set { _Jahr_von = value; }
        }

        string _Periode_von;

        /// <summary>
        /// Gets or sets the value of variable Periode_von.
        /// </summary>
        [TestVariable("3f61a9cf-43f1-4b44-b5d0-18a194c1eb57")]
        public string Periode_von
        {
            get { return _Periode_von; }
            set { _Periode_von = value; }
        }

        string _Jahr_bis;

        /// <summary>
        /// Gets or sets the value of variable Jahr_bis.
        /// </summary>
        [TestVariable("658501b0-2b26-4da3-97b0-c939ba4d750c")]
        public string Jahr_bis
        {
            get { return _Jahr_bis; }
            set { _Jahr_bis = value; }
        }

        string _Periode_von_validate;

        /// <summary>
        /// Gets or sets the value of variable Periode_von_validate.
        /// </summary>
        [TestVariable("b726a24f-8a57-47f9-9f92-316d1d3254f4")]
        public string Periode_von_validate
        {
            get { return _Periode_von_validate; }
            set { _Periode_von_validate = value; }
        }

        string _Periode_bis_validate;

        /// <summary>
        /// Gets or sets the value of variable Periode_bis_validate.
        /// </summary>
        [TestVariable("395ad71f-58da-4a6e-af12-72dcff0d96db")]
        public string Periode_bis_validate
        {
            get { return _Periode_bis_validate; }
            set { _Periode_bis_validate = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable Periode_bis.
        /// </summary>
        [TestVariable("12eeedc5-b8dd-4b99-bc59-cfc713119ca1")]
        public string Periode_bis
        {
            get { return repo.Periode_bis; }
            set { repo.Periode_bis = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Delete' Press with focus on 'FrmVerbuch.Jahr_von'.", repo.FrmVerbuch.Jahr_vonInfo, new RecordItemIndex(0));
            Keyboard.PrepareFocus(repo.FrmVerbuch.Jahr_von);
            Keyboard.Press(System.Windows.Forms.Keys.Delete, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left DoubleClick item 'FrmVerbuch.Jahr_von' at Center.", repo.FrmVerbuch.Jahr_vonInfo, new RecordItemIndex(1));
            repo.FrmVerbuch.Jahr_von.DoubleClick();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Back}'.", new RecordItemIndex(2));
            Keyboard.Press("{Back}");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Jahr_von' with focus on 'FrmVerbuch.Jahr_von'.", repo.FrmVerbuch.Jahr_vonInfo, new RecordItemIndex(3));
            repo.FrmVerbuch.Jahr_von.PressKeys(Jahr_von);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Tab' Press.", new RecordItemIndex(4));
            Keyboard.Press(System.Windows.Forms.Keys.Tab, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Periode_von' with focus on 'FrmVerbuch.Periode_von'.", repo.FrmVerbuch.Periode_vonInfo, new RecordItemIndex(5));
            repo.FrmVerbuch.Periode_von.PressKeys(Periode_von);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Tab' Press.", new RecordItemIndex(6));
            Keyboard.Press(System.Windows.Forms.Keys.Tab, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Jahr_bis' with focus on 'FrmVerbuch.Jahr_bis'.", repo.FrmVerbuch.Jahr_bisInfo, new RecordItemIndex(7));
            repo.FrmVerbuch.Jahr_bis.PressKeys(Jahr_bis);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Tab' Press.", new RecordItemIndex(8));
            Keyboard.Press(System.Windows.Forms.Keys.Tab, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Periode_bis' with focus on 'FrmVerbuch.Periode_bis'.", repo.FrmVerbuch.Periode_bisInfo, new RecordItemIndex(9));
            repo.FrmVerbuch.Periode_bis.PressKeys(Periode_bis);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Tab' Press.", new RecordItemIndex(10));
            Keyboard.Press(System.Windows.Forms.Keys.Tab, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Jahr_von) on item 'FrmVerbuch.Jahr_von'.", repo.FrmVerbuch.Jahr_vonInfo, new RecordItemIndex(11));
            Validate.AttributeEqual(repo.FrmVerbuch.Jahr_vonInfo, "Text", Jahr_von);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Periode_von_validate) on item 'FrmVerbuch.Periode_von'.", repo.FrmVerbuch.Periode_vonInfo, new RecordItemIndex(12));
            Validate.AttributeEqual(repo.FrmVerbuch.Periode_vonInfo, "Text", Periode_von_validate);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Jahr_bis) on item 'FrmVerbuch.Jahr_bis'.", repo.FrmVerbuch.Jahr_bisInfo, new RecordItemIndex(13));
            Validate.AttributeEqual(repo.FrmVerbuch.Jahr_bisInfo, "Text", Jahr_bis);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Periode_bis_validate) on item 'FrmVerbuch.Periode_bis'.", repo.FrmVerbuch.Periode_bisInfo, new RecordItemIndex(14));
            Validate.AttributeEqual(repo.FrmVerbuch.Periode_bisInfo, "Text", Periode_bis_validate);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmVerbuch.PbOK' at Center.", repo.FrmVerbuch.PbOKInfo, new RecordItemIndex(15));
            repo.FrmVerbuch.PbOK.Click();
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 2m to exist. Associated repository item: 'DlgMessageBox.LabelMeldungstext'", repo.DlgMessageBox.LabelMeldungstextInfo, new ActionTimeout(120000), new RecordItemIndex(16));
            repo.DlgMessageBox.LabelMeldungstextInfo.WaitForExists(120000);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='Die Periode(n) wurde(n) schon berechnet! - Überschreiben?') on item 'DlgMessageBox.LabelMeldungstext'.", repo.DlgMessageBox.LabelMeldungstextInfo, new RecordItemIndex(17));
            Validate.AttributeEqual(repo.DlgMessageBox.LabelMeldungstextInfo, "Text", "Die Periode(n) wurde(n) schon berechnet! - Überschreiben?");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'DlgMessageBox.Button0' at Center.", repo.DlgMessageBox.Button0Info, new RecordItemIndex(18));
            repo.DlgMessageBox.Button0.Click();
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 2m to exist. Associated repository item: 'DlgMessageBox.LabelMeldungstext'", repo.DlgMessageBox.LabelMeldungstextInfo, new ActionTimeout(120000), new RecordItemIndex(19));
            repo.DlgMessageBox.LabelMeldungstextInfo.WaitForExists(120000);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='Summierung beendet! 16 Buchungen übergeleitet!\r\n') on item 'DlgMessageBox.LabelMeldungstext'.", repo.DlgMessageBox.LabelMeldungstextInfo, new RecordItemIndex(20));
            Validate.AttributeEqual(repo.DlgMessageBox.LabelMeldungstextInfo, "Text", "Summierung beendet! 16 Buchungen übergeleitet!\r\n");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'DlgMessageBox.Button0' at Center.", repo.DlgMessageBox.Button0Info, new RecordItemIndex(21));
            repo.DlgMessageBox.Button0.Click();
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
