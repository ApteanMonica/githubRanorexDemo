///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace K_FIBU_001.Recordings_YPAR
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Parameter_bearbeiten_laden recording.
    /// </summary>
    [TestModule("8597d1f2-561a-4d19-86fb-aa9d13b39b7c", ModuleType.Recording, 1)]
    public partial class Parameter_bearbeiten_laden : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::K_FIBU_001.K_FIBU_001Repository repository.
        /// </summary>
        public static global::K_FIBU_001.K_FIBU_001Repository repo = global::K_FIBU_001.K_FIBU_001Repository.Instance;

        static Parameter_bearbeiten_laden instance = new Parameter_bearbeiten_laden();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Parameter_bearbeiten_laden()
        {
            Parameter = "FIBU_SPERRE_100";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Parameter_bearbeiten_laden Instance
        {
            get { return instance; }
        }

#region Variables

        /// <summary>
        /// Gets or sets the value of variable Parameter.
        /// </summary>
        [TestVariable("1e970a54-848b-4b53-9f77-8bb03e565ff0")]
        public string Parameter
        {
            get { return repo.Parameter; }
            set { repo.Parameter = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (Text>'Verwalten Parameter') on item 'Verwalten_Parameter_521frm_510tbl.TitleBar100VerwaltenParameter'.", repo.Verwalten_Parameter_521frm_510tbl.TitleBar100VerwaltenParameterInfo, new RecordItemIndex(0));
            Validate.AttributeContains(repo.Verwalten_Parameter_521frm_510tbl.TitleBar100VerwaltenParameterInfo, "Text", "Verwalten Parameter");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'K' with focus on 'Verwalten_Parameter_521frm_510tbl.Applikation_521_510_any_optional'.", repo.Verwalten_Parameter_521frm_510tbl.Applikation_521_510_any_optionalInfo, new RecordItemIndex(1));
            repo.Verwalten_Parameter_521frm_510tbl.Applikation_521_510_any_optional.PressKeys("K");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Tab' Press.", new RecordItemIndex(2));
            Keyboard.Press(System.Windows.Forms.Keys.Tab, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Parameter' with focus on 'Verwalten_Parameter_521frm_510tbl.Parameter_521_510_any_optional'.", repo.Verwalten_Parameter_521frm_510tbl.Parameter_521_510_any_optionalInfo, new RecordItemIndex(3));
            repo.Verwalten_Parameter_521frm_510tbl.Parameter_521_510_any_optional.PressKeys(Parameter);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Tab' Press.", new RecordItemIndex(4));
            Keyboard.Press(System.Windows.Forms.Keys.Tab, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='K') on item 'Verwalten_Parameter_521frm_510tbl.Applikation_521_510_any_optional'.", repo.Verwalten_Parameter_521frm_510tbl.Applikation_521_510_any_optionalInfo, new RecordItemIndex(5));
            Validate.AttributeEqual(repo.Verwalten_Parameter_521frm_510tbl.Applikation_521_510_any_optionalInfo, "Text", "K");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Parameter) on item 'Verwalten_Parameter_521frm_510tbl.Parameter_521_510_any_optional'.", repo.Verwalten_Parameter_521frm_510tbl.Parameter_521_510_any_optionalInfo, new RecordItemIndex(6));
            Validate.AttributeEqual(repo.Verwalten_Parameter_521frm_510tbl.Parameter_521_510_any_optionalInfo, "Text", Parameter);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Verwalten_Parameter_521frm_510tbl.PbDataAccessLoad' at Center.", repo.Verwalten_Parameter_521frm_510tbl.PbDataAccessLoadInfo, new RecordItemIndex(7));
            repo.Verwalten_Parameter_521frm_510tbl.PbDataAccessLoad.Click();
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 2m to exist. Associated repository item: 'Verwalten_Parameter_521frm_510tbl.FlexGrid_521_510_Pfad_unterschiedlich.ColParCdRow1'", repo.Verwalten_Parameter_521frm_510tbl.FlexGrid_521_510_Pfad_unterschiedlich.ColParCdRow1Info, new ActionTimeout(120000), new RecordItemIndex(8));
            repo.Verwalten_Parameter_521frm_510tbl.FlexGrid_521_510_Pfad_unterschiedlich.ColParCdRow1Info.WaitForExists(120000);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Parameter) on item 'Verwalten_Parameter_521frm_510tbl.FlexGrid_521_510_Pfad_unterschiedlich.ColParCdRow1'.", repo.Verwalten_Parameter_521frm_510tbl.FlexGrid_521_510_Pfad_unterschiedlich.ColParCdRow1Info, new RecordItemIndex(9));
            Validate.AttributeEqual(repo.Verwalten_Parameter_521frm_510tbl.FlexGrid_521_510_Pfad_unterschiedlich.ColParCdRow1Info, "Text", Parameter);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='0') on item 'Verwalten_Parameter_521frm_510tbl.FlexGrid_521_510_Pfad_unterschiedlich.ColParLfdnrRow1'.", repo.Verwalten_Parameter_521frm_510tbl.FlexGrid_521_510_Pfad_unterschiedlich.ColParLfdnrRow1Info, new RecordItemIndex(10));
            Validate.AttributeEqual(repo.Verwalten_Parameter_521frm_510tbl.FlexGrid_521_510_Pfad_unterschiedlich.ColParLfdnrRow1Info, "Text", "0");
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
