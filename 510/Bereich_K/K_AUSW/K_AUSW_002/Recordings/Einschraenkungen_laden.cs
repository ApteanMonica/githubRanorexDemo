///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace K_AUSW_002.Recordings
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Einschraenkungen_laden recording.
    /// </summary>
    [TestModule("7776ec05-3ef7-4a70-8a4a-3656913558b5", ModuleType.Recording, 1)]
    public partial class Einschraenkungen_laden : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::K_AUSW_002.K_AUSW_002Repository repository.
        /// </summary>
        public static global::K_AUSW_002.K_AUSW_002Repository repo = global::K_AUSW_002.K_AUSW_002Repository.Instance;

        static Einschraenkungen_laden instance = new Einschraenkungen_laden();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Einschraenkungen_laden()
        {
            AUSW_CD = "GB";
            Jahr = "2017";
            Periode_bis = "12";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Einschraenkungen_laden Instance
        {
            get { return instance; }
        }

#region Variables

        string _AUSW_CD;

        /// <summary>
        /// Gets or sets the value of variable AUSW_CD.
        /// </summary>
        [TestVariable("671b3da7-2e8e-445c-9ac4-9f33767d814d")]
        public string AUSW_CD
        {
            get { return _AUSW_CD; }
            set { _AUSW_CD = value; }
        }

        string _Periode_bis;

        /// <summary>
        /// Gets or sets the value of variable Periode_bis.
        /// </summary>
        [TestVariable("3eccfe0d-e136-4be5-947a-db404a2f2017")]
        public string Periode_bis
        {
            get { return _Periode_bis; }
            set { _Periode_bis = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable Jahr.
        /// </summary>
        [TestVariable("5748d3f8-388e-4a0c-9c99-d5d8761ef0bd")]
        public string Jahr
        {
            get { return repo.Jahr; }
            set { repo.Jahr = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$AUSW_CD' with focus on 'FrmMain.AuswCd'.", repo.FrmMain.AuswCdInfo, new RecordItemIndex(0));
            repo.FrmMain.AuswCd.PressKeys(AUSW_CD);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Tab' Press with focus on 'FrmMain.AuswCd'.", repo.FrmMain.AuswCdInfo, new RecordItemIndex(1));
            Keyboard.PrepareFocus(repo.FrmMain.AuswCd);
            Keyboard.Press(System.Windows.Forms.Keys.Tab, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '0' with focus on 'FrmMain.Anzeige'.", repo.FrmMain.AnzeigeInfo, new RecordItemIndex(2));
            repo.FrmMain.Anzeige.PressKeys("0");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Tab' Press with focus on 'FrmMain.Anzeige'.", repo.FrmMain.AnzeigeInfo, new RecordItemIndex(3));
            Keyboard.PrepareFocus(repo.FrmMain.Anzeige);
            Keyboard.Press(System.Windows.Forms.Keys.Tab, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Jahr' with focus on 'FrmMain.Jahr'.", repo.FrmMain.JahrInfo, new RecordItemIndex(4));
            repo.FrmMain.Jahr.PressKeys(Jahr);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Tab' Press with focus on 'FrmMain.Jahr'.", repo.FrmMain.JahrInfo, new RecordItemIndex(5));
            Keyboard.PrepareFocus(repo.FrmMain.Jahr);
            Keyboard.Press(System.Windows.Forms.Keys.Tab, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Periode_bis' with focus on 'FrmMain.Periode'.", repo.FrmMain.PeriodeInfo, new RecordItemIndex(6));
            repo.FrmMain.Periode.PressKeys(Periode_bis);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Tab' Press with focus on 'FrmMain.Periode'.", repo.FrmMain.PeriodeInfo, new RecordItemIndex(7));
            Keyboard.PrepareFocus(repo.FrmMain.Periode);
            Keyboard.Press(System.Windows.Forms.Keys.Tab, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FrmMain.PbDataAccessSpeichern' at Center.", repo.FrmMain.PbDataAccessSpeichernInfo, new RecordItemIndex(8));
            repo.FrmMain.PbDataAccessSpeichern.Click();
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$AUSW_CD) on item 'FrmMain.AuswCd'.", repo.FrmMain.AuswCdInfo, new RecordItemIndex(9));
            Validate.AttributeEqual(repo.FrmMain.AuswCdInfo, "Text", AUSW_CD);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='Geschäftsbericht') on item 'FrmMain.AuswCd_Bezeichnung'.", repo.FrmMain.AuswCd_BezeichnungInfo, new RecordItemIndex(10));
            Validate.AttributeEqual(repo.FrmMain.AuswCd_BezeichnungInfo, "Text", "Geschäftsbericht");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Jahr) on item 'FrmMain.Jahr'.", repo.FrmMain.JahrInfo, new RecordItemIndex(11));
            Validate.AttributeEqual(repo.FrmMain.JahrInfo, "Text", Jahr);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Periode_bis) on item 'FrmMain.Periode'.", repo.FrmMain.PeriodeInfo, new RecordItemIndex(12));
            Validate.AttributeEqual(repo.FrmMain.PeriodeInfo, "Text", Periode_bis);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='0') on item 'FrmMain.BisVerrStufe'.", repo.FrmMain.BisVerrStufeInfo, new RecordItemIndex(13));
            Validate.AttributeEqual(repo.FrmMain.BisVerrStufeInfo, "Text", "0");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='0') on item 'FrmMain.Anzeige'.", repo.FrmMain.AnzeigeInfo, new RecordItemIndex(14));
            Validate.AttributeEqual(repo.FrmMain.AnzeigeInfo, "Text", "0");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (Text>'A\t0\t\t\t\t\t\tG0\t\t01. - 12. 2017\tBudget\t\t2017\t17\t00\t2017\t00\t\t2017\t17\t12\t2017\t12\t\t\t\t\t\t\t\t1') on item 'FrmMain.FlexGrid_TblAtbs.Row1'.", repo.FrmMain.FlexGrid_TblAtbs.Row1Info, new RecordItemIndex(15));
            Validate.AttributeContains(repo.FrmMain.FlexGrid_TblAtbs.Row1Info, "Text", "A\t0\t\t\t\t\t\tG0\t\t01. - 12. 2017\tBudget\t\t2017\t17\t00\t2017\t00\t\t2017\t17\t12\t2017\t12\t\t\t\t\t\t\t\t1");
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
