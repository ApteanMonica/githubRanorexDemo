///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace K_AUSW_002.Recordings_Bereichskontoabfrage
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Bereichskontenabfrage_pruefen recording.
    /// </summary>
    [TestModule("a9a99fd7-f249-4a40-9c1e-228ad5189f09", ModuleType.Recording, 1)]
    public partial class Bereichskontenabfrage_pruefen : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::K_AUSW_002.K_AUSW_002Repository repository.
        /// </summary>
        public static global::K_AUSW_002.K_AUSW_002Repository repo = global::K_AUSW_002.K_AUSW_002Repository.Instance;

        static Bereichskontenabfrage_pruefen instance = new Bereichskontenabfrage_pruefen();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Bereichskontenabfrage_pruefen()
        {
            Jahr = "2017";
            Periode_von = "1";
            Periode_bis = "12";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Bereichskontenabfrage_pruefen Instance
        {
            get { return instance; }
        }

#region Variables

        string _Periode_von;

        /// <summary>
        /// Gets or sets the value of variable Periode_von.
        /// </summary>
        [TestVariable("a27f801b-ed55-4189-b9ca-1ff35672336e")]
        public string Periode_von
        {
            get { return _Periode_von; }
            set { _Periode_von = value; }
        }

        string _Periode_bis;

        /// <summary>
        /// Gets or sets the value of variable Periode_bis.
        /// </summary>
        [TestVariable("9dffc254-9d29-4847-8d38-fd34520e0afa")]
        public string Periode_bis
        {
            get { return _Periode_bis; }
            set { _Periode_bis = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable Jahr.
        /// </summary>
        [TestVariable("a2096ebd-f023-4ba0-bb64-19412b89988c")]
        public string Jahr
        {
            get { return repo.Jahr; }
            set { repo.Jahr = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Tab' Press with focus on 'TblBkAb.ToolBar.Bereich'.", repo.TblBkAb.ToolBar.BereichInfo, new RecordItemIndex(0));
            Keyboard.PrepareFocus(repo.TblBkAb.ToolBar.Bereich);
            Keyboard.Press(System.Windows.Forms.Keys.Tab, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='1') on item 'TblBkAb.ToolBar.Bereich'.", repo.TblBkAb.ToolBar.BereichInfo, new RecordItemIndex(1));
            Validate.AttributeEqual(repo.TblBkAb.ToolBar.BereichInfo, "Text", "1");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='20') on item 'TblBkAb.ToolBar.DfBektNr1'.", repo.TblBkAb.ToolBar.DfBektNr1Info, new RecordItemIndex(2));
            Validate.AttributeEqual(repo.TblBkAb.ToolBar.DfBektNr1Info, "Text", "20");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='Baustoffe') on item 'TblBkAb.ToolBar.DfBektBez'.", repo.TblBkAb.ToolBar.DfBektBezInfo, new RecordItemIndex(3));
            Validate.AttributeEqual(repo.TblBkAb.ToolBar.DfBektBezInfo, "Text", "Baustoffe");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Jahr) on item 'TblBkAb.ToolBar.DfGjhrBezVon'.", repo.TblBkAb.ToolBar.DfGjhrBezVonInfo, new RecordItemIndex(4));
            Validate.AttributeEqual(repo.TblBkAb.ToolBar.DfGjhrBezVonInfo, "Text", Jahr);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Periode_von) on item 'TblBkAb.ToolBar.DfPerVon'.", repo.TblBkAb.ToolBar.DfPerVonInfo, new RecordItemIndex(5));
            Validate.AttributeEqual(repo.TblBkAb.ToolBar.DfPerVonInfo, "Text", Periode_von);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Jahr) on item 'TblBkAb.ToolBar.DfGjhrBezBis'.", repo.TblBkAb.ToolBar.DfGjhrBezBisInfo, new RecordItemIndex(6));
            Validate.AttributeEqual(repo.TblBkAb.ToolBar.DfGjhrBezBisInfo, "Text", Jahr);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Periode_bis) on item 'TblBkAb.ToolBar.DfPerBis'.", repo.TblBkAb.ToolBar.DfPerBisInfo, new RecordItemIndex(7));
            Validate.AttributeEqual(repo.TblBkAb.ToolBar.DfPerBisInfo, "Text", Periode_bis);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='7650') on item 'TblBkAb.ToolBar.Konto'.", repo.TblBkAb.ToolBar.KontoInfo, new RecordItemIndex(8));
            Validate.AttributeEqual(repo.TblBkAb.ToolBar.KontoInfo, "Text", "7650");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='1.000,00') on item 'TblBkAb.ColSollRow1_Haupttabelle'.", repo.TblBkAb.ColSollRow1_HaupttabelleInfo, new RecordItemIndex(9));
            Validate.AttributeEqual(repo.TblBkAb.ColSollRow1_HaupttabelleInfo, "Text", "1.000,00");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (Text>'1.000,00') on item 'TblBkAb.ColSollRow3'.", repo.TblBkAb.ColSollRow3Info, new RecordItemIndex(10));
            Validate.AttributeContains(repo.TblBkAb.ColSollRow3Info, "Text", "1.000,00");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (Text>'Saldo\t\t\t\tPeriode\t\t1.000,00') on item 'TblBkAb.Row3_Fusszeile'.", repo.TblBkAb.Row3_FusszeileInfo, new RecordItemIndex(11));
            Validate.AttributeContains(repo.TblBkAb.Row3_FusszeileInfo, "Text", "Saldo\t\t\t\tPeriode\t\t1.000,00");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (Text>'Saldo\t\t\t\tKumuliert\t\t1.000,00') on item 'TblBkAb.Row4_Fusszeile'.", repo.TblBkAb.Row4_FusszeileInfo, new RecordItemIndex(12));
            Validate.AttributeContains(repo.TblBkAb.Row4_FusszeileInfo, "Text", "Saldo\t\t\t\tKumuliert\t\t1.000,00");
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
