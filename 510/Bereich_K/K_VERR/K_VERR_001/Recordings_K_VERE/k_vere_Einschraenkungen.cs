///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace K_VERR_001.Recordings_K_VERE
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The k_vere_Einschraenkungen recording.
    /// </summary>
    [TestModule("5e34b604-eb53-4d2f-9fe6-9ea522d0a8de", ModuleType.Recording, 1)]
    public partial class k_vere_Einschraenkungen : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::K_VERR_001.K_VERR_001Repository repository.
        /// </summary>
        public static global::K_VERR_001.K_VERR_001Repository repo = global::K_VERR_001.K_VERR_001Repository.Instance;

        static k_vere_Einschraenkungen instance = new k_vere_Einschraenkungen();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public k_vere_Einschraenkungen()
        {
            Jahr = "2020";
            Periode = "6";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static k_vere_Einschraenkungen Instance
        {
            get { return instance; }
        }

#region Variables

        string _Jahr;

        /// <summary>
        /// Gets or sets the value of variable Jahr.
        /// </summary>
        [TestVariable("102f0991-951c-46ab-80cf-193ceb980801")]
        public string Jahr
        {
            get { return _Jahr; }
            set { _Jahr = value; }
        }

        string _Periode;

        /// <summary>
        /// Gets or sets the value of variable Periode.
        /// </summary>
        [TestVariable("317ea4d1-06ee-4154-9edd-306b4997a594")]
        public string Periode
        {
            get { return _Periode; }
            set { _Periode = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='0') on item 'TblVerr.ToolBar.PlanNr'.", repo.TblVerr.ToolBar.PlanNrInfo, new RecordItemIndex(0));
            Validate.AttributeEqual(repo.TblVerr.ToolBar.PlanNrInfo, "Text", "0");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'TblVerr.ToolBar.Jahr' at Center.", repo.TblVerr.ToolBar.JahrInfo, new RecordItemIndex(1));
            repo.TblVerr.ToolBar.Jahr.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Jahr' with focus on 'TblVerr.ToolBar.Jahr'.", repo.TblVerr.ToolBar.JahrInfo, new RecordItemIndex(2));
            repo.TblVerr.ToolBar.Jahr.PressKeys(Jahr);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Tab' Press.", new RecordItemIndex(3));
            Keyboard.Press(System.Windows.Forms.Keys.Tab, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Periode' with focus on 'TblVerr.ToolBar.Periode'.", repo.TblVerr.ToolBar.PeriodeInfo, new RecordItemIndex(4));
            repo.TblVerr.ToolBar.Periode.PressKeys(Periode);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Tab' Press.", new RecordItemIndex(5));
            Keyboard.Press(System.Windows.Forms.Keys.Tab, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'TblVerr.PbDataAccessLoad' at Center.", repo.TblVerr.PbDataAccessLoadInfo, new RecordItemIndex(6));
            repo.TblVerr.PbDataAccessLoad.Click();
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 1m to exist. Associated repository item: 'TblVerr.Row2_'", repo.TblVerr.Row2_Info, new ActionTimeout(60000), new RecordItemIndex(7));
            repo.TblVerr.Row2_Info.WaitForExists(60000);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
