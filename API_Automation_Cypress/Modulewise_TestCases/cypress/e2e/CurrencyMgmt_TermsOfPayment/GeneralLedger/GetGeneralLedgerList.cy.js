describe("General Ledger", () => {
  var context = "";
  var BaseURL = "localhost:8080//api-rw-fi-v1-";

  it("prerequisites", () => {
    cy.login("rs", "rsc", "rs2", "100").then((res) => {
      context = res.body.Context;
    });
  });

  //This testcase is to retrieve the get language
  it("Get General Ledger List", () => {
    var idValue = "d";
    cy.request({
      method: "GET",
      url: `${BaseURL}GeneralLedgerService.svc/json/GeneralLedgerList?context=${context}`,
    }).then((response) => {
      //assertions
      assert.equal(response.body.Value[0]["AesKey"], null);
      assert.equal(response.body.Value[0]["AreaPartitioningId"], null);
      assert.equal(response.body.Value[0]["Audit"], null);
      assert.equal(response.body.Value[0]["BillOfExchangeType"], null);
      assert.equal(response.body.Value[0]["BlockingPeriod"], null);
      assert.equal(response.body.Value[0]["BlockingYear"], null);
      assert.equal(response.body.Value[0]["CashDeskId"], null);
      assert.equal(response.body.Value[0]["CashRegister"], null);
      assert.equal(response.body.Value[0]["CertificateSerial"], null);
      assert.equal(response.body.Value[0]["CollectiveAccount"], null);
      assert.equal(response.body.Value[0]["CompanyId"], 100);
      assert.equal(response.body.Value[0]["CorporateAccount"], null);
      assert.equal(response.body.Value[0]["CostRate"], null);
      assert.equal(response.body.Value[0]["CounterAccountId"], null);
      assert.equal(response.body.Value[0]["CrossBorderService"], null);
      assert.equal(response.body.Value[0]["CurrencyId"], null);
      assert.equal(response.body.Value[0]["CurrencyTypeId"], null);
      assert.equal(response.body.Value[0]["DeltaIgnor"], null);
      assert.equal(response.body.Value[0]["DepricatedAccountId"], null);
      assert.equal(response.body.Value[0]["Description1"], "Konzessionen");
      assert.equal(response.body.Value[0]["Description2"], null);
      assert.equal(response.body.Value[0]["DiscountGroupId"], null);
      assert.equal(response.body.Value[0]["Discountable"], "J");
      assert.equal(response.body.Value[0]["FinancePlan"], null);
      assert.equal(response.body.Value[0]["HierarchicCompanyId"], 100);
      assert.equal(response.body.Value[0]["Id"], 100);
      assert.equal(response.body.Value[0]["InitialAmount"], null);
      assert.equal(response.body.Value[0]["Interest"], null);
      assert.equal(response.body.Value[0]["LoanEndDate"], null);
      assert.equal(response.body.Value[0]["LvAwv"], null);
      assert.equal(response.body.Value[0]["NoContribution"], null);
      assert.equal(response.body.Value[0]["NonConsolidatableCode"], null);
      assert.equal(response.body.Value[0]["OpAdministration1"], null);
      assert.equal(response.body.Value[0]["OpAdministration2"], null);
      assert.equal(response.body.Value[0]["OpAdministration3"], null);
      assert.equal(response.body.Value[0]["PaymentAccountId"], null);
      assert.equal(response.body.Value[0]["PaymentMethods"], null);
      assert.equal(response.body.Value[0]["PaymentTarget"], 0);
      assert.equal(response.body.Value[0]["PaymentTypeId"], null);
      assert.equal(response.body.Value[0]["PeriodDistributionId"], null);
      assert.equal(response.body.Value[0]["Permission"], null);
      assert.equal(response.body.Value[0]["PreTaxDeduction"], null);
      assert.equal(response.body.Value[0]["Provision"], null);
      assert.equal(response.body.Value[0]["Quantity"], null);
      assert.equal(response.body.Value[0]["Quantity2"], null);
      assert.equal(response.body.Value[0]["QuantityObligation"], "N");
      assert.equal(response.body.Value[0]["QuantityObligation2"], null);
      assert.equal(response.body.Value[0]["SmartCard"], null);
      assert.equal(response.body.Value[0]["State"], "A");
      assert.equal(response.body.Value[0]["Text"], null);
      assert.equal(response.body.Value[0]["Transfer"], null);
      assert.equal(response.body.Value[0]["Type"], 1);
      assert.equal(response.body.Value[0]["Usage"], null);
      assert.equal(response.body.Value[0]["Variator"], null);
      assert.equal(response.body.Value[0]["VatId"], null);
      assert.equal(response.body.Value[0]["VatLiability"], null);
      assert.equal(response.body.Value[0]["WorkStation"], null);
      assert.equal(response.body.Value[0]["ZeroBalance"], null);

      assert.equal(response.body.Value[1]["AesKey"], null);
      assert.equal(response.body.Value[1]["AreaPartitioningId"], null);
      assert.equal(response.body.Value[1]["Audit"], null);
      assert.equal(response.body.Value[1]["BillOfExchangeType"], null);
      assert.equal(response.body.Value[1]["BlockingPeriod"], null);
      assert.equal(response.body.Value[1]["BlockingYear"], null);
      assert.equal(response.body.Value[1]["CashDeskId"], null);
      assert.equal(response.body.Value[1]["CashRegister"], null);
      assert.equal(response.body.Value[1]["CertificateSerial"], null);
      assert.equal(response.body.Value[1]["CollectiveAccount"], null);
      assert.equal(response.body.Value[1]["CompanyId"], 100);
      assert.equal(response.body.Value[1]["CorporateAccount"], null);
      assert.equal(response.body.Value[1]["CostRate"], null);
      assert.equal(response.body.Value[1]["CounterAccountId"], null);
      assert.equal(response.body.Value[1]["CrossBorderService"], null);
      assert.equal(response.body.Value[1]["CurrencyId"], null);
      assert.equal(response.body.Value[1]["CurrencyTypeId"], null);
      assert.equal(response.body.Value[1]["DeltaIgnor"], null);
      assert.equal(response.body.Value[1]["DepricatedAccountId"], null);
      assert.equal(
        response.body.Value[1]["Description1"],
        "Patentrechte und Lizenzrechte"
      );
      assert.equal(response.body.Value[1]["Description2"], null);
      assert.equal(response.body.Value[1]["DiscountGroupId"], null);
      assert.equal(response.body.Value[1]["Discountable"], "J");
      assert.equal(response.body.Value[1]["FinancePlan"], null);
      assert.equal(response.body.Value[1]["HierarchicCompanyId"], 100);
      assert.equal(response.body.Value[1]["Id"], 110);
      assert.equal(response.body.Value[1]["InitialAmount"], null);
      assert.equal(response.body.Value[1]["Interest"], null);
      assert.equal(response.body.Value[1]["LoanEndDate"], null);
      assert.equal(response.body.Value[1]["LvAwv"], null);
      assert.equal(response.body.Value[1]["NoContribution"], null);
      assert.equal(response.body.Value[1]["NonConsolidatableCode"], null);
      assert.equal(response.body.Value[1]["OpAdministration1"], null);
      assert.equal(response.body.Value[1]["OpAdministration2"], null);
      assert.equal(response.body.Value[1]["OpAdministration3"], null);
      assert.equal(response.body.Value[1]["PaymentAccountId"], null);
      assert.equal(response.body.Value[1]["PaymentMethods"], null);
      assert.equal(response.body.Value[1]["PaymentTarget"], 0);
      assert.equal(response.body.Value[1]["PaymentTypeId"], null);
      assert.equal(response.body.Value[1]["PeriodDistributionId"], null);
      assert.equal(response.body.Value[1]["Permission"], null);
      assert.equal(response.body.Value[1]["PreTaxDeduction"], null);
      assert.equal(response.body.Value[1]["Provision"], null);
      assert.equal(response.body.Value[1]["Quantity"], null);
      assert.equal(response.body.Value[1]["Quantity2"], null);
      assert.equal(response.body.Value[1]["QuantityObligation"], "N");
      assert.equal(response.body.Value[1]["QuantityObligation2"], null);
      assert.equal(response.body.Value[1]["SmartCard"], null);
      assert.equal(response.body.Value[1]["State"], "A");
      assert.equal(response.body.Value[1]["Text"], null);
      assert.equal(response.body.Value[1]["Transfer"], null);
      assert.equal(response.body.Value[1]["Type"], 1);
      assert.equal(response.body.Value[1]["Usage"], null);
      assert.equal(response.body.Value[1]["Variator"], null);
      assert.equal(response.body.Value[1]["VatId"], null);
      assert.equal(response.body.Value[1]["VatLiability"], null);
      assert.equal(response.body.Value[1]["WorkStation"], null);
      assert.equal(response.body.Value[1]["ZeroBalance"], null);

      assert.equal(response.body.Value[2]["AesKey"], null);
      assert.equal(response.body.Value[2]["AreaPartitioningId"], null);
      assert.equal(response.body.Value[2]["Audit"], "N");
      assert.equal(response.body.Value[2]["BillOfExchangeType"], null);
      assert.equal(response.body.Value[2]["BlockingPeriod"], null);
      assert.equal(response.body.Value[2]["BlockingYear"], null);
      assert.equal(response.body.Value[2]["CashDeskId"], null);
      assert.equal(response.body.Value[2]["CashRegister"], null);
      assert.equal(response.body.Value[2]["CertificateSerial"], null);
      assert.equal(response.body.Value[2]["CollectiveAccount"], null);
      assert.equal(response.body.Value[2]["CompanyId"], 100);
      assert.equal(response.body.Value[2]["CorporateAccount"], null);
      assert.equal(response.body.Value[2]["CostRate"], null);
      assert.equal(response.body.Value[2]["CounterAccountId"], null);
      assert.equal(response.body.Value[2]["CrossBorderService"], null);
      assert.equal(response.body.Value[2]["CurrencyId"], null);
      assert.equal(response.body.Value[2]["CurrencyTypeId"], null);
      assert.equal(response.body.Value[2]["DeltaIgnor"], null);
      assert.equal(response.body.Value[2]["DepricatedAccountId"], null);
      assert.equal(
        response.body.Value[2]["Description1"],
        "Datenverarbeitungsprogramme"
      );
      assert.equal(response.body.Value[2]["Description2"], null);
      assert.equal(response.body.Value[2]["DiscountGroupId"], null);
      assert.equal(response.body.Value[2]["Discountable"], "J");
      assert.equal(response.body.Value[2]["FinancePlan"], null);
      assert.equal(response.body.Value[2]["HierarchicCompanyId"], 100);
      assert.equal(response.body.Value[2]["Id"], 120);
      assert.equal(response.body.Value[2]["InitialAmount"], null);
      assert.equal(response.body.Value[2]["Interest"], null);
      assert.equal(response.body.Value[2]["LoanEndDate"], null);
      assert.equal(response.body.Value[2]["LvAwv"], null);
      assert.equal(response.body.Value[2]["NoContribution"], null);
      assert.equal(response.body.Value[2]["NonConsolidatableCode"], null);
      assert.equal(response.body.Value[2]["OpAdministration1"], "N");
      assert.equal(response.body.Value[2]["OpAdministration2"], null);
      assert.equal(response.body.Value[2]["OpAdministration3"], null);
      assert.equal(response.body.Value[2]["PaymentAccountId"], null);
      assert.equal(response.body.Value[2]["PaymentMethods"], null);
      assert.equal(response.body.Value[2]["PaymentTarget"], 0);
      assert.equal(response.body.Value[2]["PaymentTypeId"], null);
      assert.equal(response.body.Value[2]["PeriodDistributionId"], null);
      assert.equal(response.body.Value[2]["Permission"], null);
      assert.equal(response.body.Value[2]["PreTaxDeduction"], null);
      assert.equal(response.body.Value[2]["Provision"], null);
      assert.equal(response.body.Value[2]["Quantity"], "N");
      assert.equal(response.body.Value[2]["Quantity2"], null);
      assert.equal(response.body.Value[2]["QuantityObligation"], "N");
      assert.equal(response.body.Value[2]["QuantityObligation2"], null);
      assert.equal(response.body.Value[2]["SmartCard"], null);
      assert.equal(response.body.Value[2]["State"], "A");
      assert.equal(response.body.Value[2]["Text"], null);
      assert.equal(response.body.Value[2]["Transfer"], "N");
      assert.equal(response.body.Value[2]["Type"], 1);
      assert.equal(response.body.Value[2]["Usage"], null);
      assert.equal(response.body.Value[2]["Variator"], null);
      assert.equal(response.body.Value[2]["VatId"], null);
      assert.equal(response.body.Value[2]["VatLiability"], "V");
      assert.equal(response.body.Value[2]["WorkStation"], null);
      assert.equal(response.body.Value[2]["ZeroBalance"], "N");

      assert.equal(response.body.Value[3]["AesKey"], null);
      assert.equal(response.body.Value[3]["AreaPartitioningId"], null);
      assert.equal(response.body.Value[3]["Audit"], null);
      assert.equal(response.body.Value[3]["BillOfExchangeType"], null);
      assert.equal(response.body.Value[3]["BlockingPeriod"], null);
      assert.equal(response.body.Value[3]["BlockingYear"], null);
      assert.equal(response.body.Value[3]["CashDeskId"], null);
      assert.equal(response.body.Value[3]["CashRegister"], null);
      assert.equal(response.body.Value[3]["CertificateSerial"], null);
      assert.equal(response.body.Value[3]["CollectiveAccount"], null);
      assert.equal(response.body.Value[3]["CompanyId"], 100);
      assert.equal(response.body.Value[3]["CorporateAccount"], null);
      assert.equal(response.body.Value[3]["CostRate"], null);
      assert.equal(response.body.Value[3]["CounterAccountId"], null);
      assert.equal(response.body.Value[3]["CrossBorderService"], null);
      assert.equal(response.body.Value[3]["CurrencyId"], null);
      assert.equal(response.body.Value[3]["CurrencyTypeId"], null);
      assert.equal(response.body.Value[3]["DeltaIgnor"], null);
      assert.equal(response.body.Value[3]["DepricatedAccountId"], null);
      assert.equal(
        response.body.Value[3]["Description1"],
        "Marken, Warenzeichen u. Musterschutzrechte"
      );
      assert.equal(response.body.Value[3]["Description2"], null);
      assert.equal(response.body.Value[3]["DiscountGroupId"], null);
      assert.equal(response.body.Value[3]["Discountable"], "J");
      assert.equal(response.body.Value[3]["FinancePlan"], null);
      assert.equal(response.body.Value[3]["HierarchicCompanyId"], 100);
      assert.equal(response.body.Value[3]["Id"], 130);
      assert.equal(response.body.Value[3]["InitialAmount"], null);
      assert.equal(response.body.Value[3]["Interest"], null);
      assert.equal(response.body.Value[3]["LoanEndDate"], null);
      assert.equal(response.body.Value[3]["LvAwv"], null);
      assert.equal(response.body.Value[3]["NoContribution"], null);
      assert.equal(response.body.Value[3]["NonConsolidatableCode"], null);
      assert.equal(response.body.Value[3]["OpAdministration1"], null);
      assert.equal(response.body.Value[3]["OpAdministration2"], null);
      assert.equal(response.body.Value[3]["OpAdministration3"], null);
      assert.equal(response.body.Value[3]["PaymentAccountId"], null);
      assert.equal(response.body.Value[3]["PaymentMethods"], null);
      assert.equal(response.body.Value[3]["PaymentTarget"], 0);
      assert.equal(response.body.Value[3]["PaymentTypeId"], null);
      assert.equal(response.body.Value[3]["PeriodDistributionId"], null);
      assert.equal(response.body.Value[3]["Permission"], null);
      assert.equal(response.body.Value[3]["PreTaxDeduction"], null);
      assert.equal(response.body.Value[3]["Provision"], null);
      assert.equal(response.body.Value[3]["Quantity"], null);
      assert.equal(response.body.Value[3]["Quantity2"], null);
      assert.equal(response.body.Value[3]["QuantityObligation"], "N");
      assert.equal(response.body.Value[3]["QuantityObligation2"], null);
      assert.equal(response.body.Value[3]["SmartCard"], null);
      assert.equal(response.body.Value[3]["State"], "A");
      assert.equal(response.body.Value[3]["Text"], null);
      assert.equal(response.body.Value[3]["Transfer"], null);
      assert.equal(response.body.Value[3]["Type"], 1);
      assert.equal(response.body.Value[3]["Usage"], null);
      assert.equal(response.body.Value[3]["Variator"], null);
      assert.equal(response.body.Value[3]["VatId"], null);
      assert.equal(response.body.Value[3]["VatLiability"], null);
      assert.equal(response.body.Value[3]["WorkStation"], null);
      assert.equal(response.body.Value[3]["ZeroBalance"], null);

      assert.equal(response.body.Value[4]["AesKey"], null);
      assert.equal(response.body.Value[4]["AreaPartitioningId"], null);
      assert.equal(response.body.Value[4]["Audit"], "N");
      assert.equal(response.body.Value[4]["BillOfExchangeType"], null);
      assert.equal(response.body.Value[4]["BlockingPeriod"], null);
      assert.equal(response.body.Value[4]["BlockingYear"], null);
      assert.equal(response.body.Value[4]["CashDeskId"], null);
      assert.equal(response.body.Value[4]["CashRegister"], null);
      assert.equal(response.body.Value[4]["CertificateSerial"], null);
      assert.equal(response.body.Value[4]["CollectiveAccount"], null);
      assert.equal(response.body.Value[4]["CompanyId"], 100);
      assert.equal(response.body.Value[4]["CorporateAccount"], null);
      assert.equal(response.body.Value[4]["CostRate"], null);
      assert.equal(response.body.Value[4]["CounterAccountId"], null);
      assert.equal(response.body.Value[4]["CrossBorderService"], null);
      assert.equal(response.body.Value[4]["CurrencyId"], null);
      assert.equal(response.body.Value[4]["CurrencyTypeId"], null);
      assert.equal(response.body.Value[4]["DeltaIgnor"], null);
      assert.equal(response.body.Value[4]["DepricatedAccountId"], null);
      assert.equal(
        response.body.Value[4]["Description1"],
        "Pacht- und Mietrechte"
      );
      assert.equal(response.body.Value[4]["Description2"], null);
      assert.equal(response.body.Value[4]["DiscountGroupId"], null);
      assert.equal(response.body.Value[4]["Discountable"], "J");
      assert.equal(response.body.Value[4]["FinancePlan"], null);
      assert.equal(response.body.Value[4]["HierarchicCompanyId"], 100);
      assert.equal(response.body.Value[4]["Id"], 140);
      assert.equal(response.body.Value[4]["InitialAmount"], null);
      assert.equal(response.body.Value[4]["Interest"], null);
      assert.equal(response.body.Value[4]["LoanEndDate"], null);
      assert.equal(response.body.Value[4]["LvAwv"], null);
      assert.equal(response.body.Value[4]["NoContribution"], null);
      assert.equal(response.body.Value[4]["NonConsolidatableCode"], null);
      assert.equal(response.body.Value[4]["OpAdministration1"], "N");
      assert.equal(response.body.Value[4]["OpAdministration2"], null);
      assert.equal(response.body.Value[4]["OpAdministration3"], null);
      assert.equal(response.body.Value[4]["PaymentAccountId"], null);
      assert.equal(response.body.Value[4]["PaymentMethods"], null);
      assert.equal(response.body.Value[4]["PaymentTarget"], 0);
      assert.equal(response.body.Value[4]["PaymentTypeId"], null);
      assert.equal(response.body.Value[4]["PeriodDistributionId"], null);
      assert.equal(response.body.Value[4]["Permission"], null);
      assert.equal(response.body.Value[4]["PreTaxDeduction"], null);
      assert.equal(response.body.Value[4]["Provision"], null);
      assert.equal(response.body.Value[4]["Quantity"], "N");
      assert.equal(response.body.Value[4]["Quantity2"], null);
      assert.equal(response.body.Value[4]["QuantityObligation"], "N");
      assert.equal(response.body.Value[4]["QuantityObligation2"], null);
      assert.equal(response.body.Value[4]["SmartCard"], null);
      assert.equal(response.body.Value[4]["State"], "A");
      assert.equal(response.body.Value[4]["Text"], null);
      assert.equal(response.body.Value[4]["Transfer"], "N");
      assert.equal(response.body.Value[4]["Type"], 1);
      assert.equal(response.body.Value[4]["Usage"], null);
      assert.equal(response.body.Value[4]["Variator"], null);
      assert.equal(response.body.Value[4]["VatId"], null);
      assert.equal(response.body.Value[4]["VatLiability"], "V");
      assert.equal(response.body.Value[4]["WorkStation"], null);
      assert.equal(response.body.Value[4]["ZeroBalance"], "N");

      cy.log("Length: " + response.body.Value.length);
      assert.equal(response.body.Value.length, "181");
      expect(response.status).to.eq(200);
    });
  });
});
