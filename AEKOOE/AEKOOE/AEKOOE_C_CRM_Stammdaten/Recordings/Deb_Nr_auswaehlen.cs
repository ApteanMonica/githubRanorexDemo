///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace AEKOOE_C_CRM_Stammdaten.Recordings
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Deb_Nr_auswaehlen recording.
    /// </summary>
    [TestModule("38abc24b-b514-409d-9a55-c787eb6862c6", ModuleType.Recording, 1)]
    public partial class Deb_Nr_auswaehlen : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::AEKOOE_C_CRM_Stammdaten.AEKOOE_C_CRM_StammdatenRepository repository.
        /// </summary>
        public static global::AEKOOE_C_CRM_Stammdaten.AEKOOE_C_CRM_StammdatenRepository repo = global::AEKOOE_C_CRM_Stammdaten.AEKOOE_C_CRM_StammdatenRepository.Instance;

        static Deb_Nr_auswaehlen instance = new Deb_Nr_auswaehlen();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Deb_Nr_auswaehlen()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Deb_Nr_auswaehlen Instance
        {
            get { return instance; }
        }

#region Variables

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'MdiCRM.PbNeu' at Center.", repo.MdiCRM.PbNeuInfo, new RecordItemIndex(0));
            repo.MdiCRM.PbNeu.Click();
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'MdiCRM.DebNr' at Center.", repo.MdiCRM.DebNrInfo, new RecordItemIndex(1));
            repo.MdiCRM.DebNr.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '2000490' with focus on 'MdiCRM.DebNr'.", repo.MdiCRM.DebNrInfo, new RecordItemIndex(2));
            repo.MdiCRM.DebNr.PressKeys("2000490");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Tab' Press.", new RecordItemIndex(3));
            Keyboard.Press(System.Windows.Forms.Keys.Tab, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 1m to exist. Associated repository item: 'DlgMessageBox.LabelMeldungstext'", repo.DlgMessageBox.LabelMeldungstextInfo, new ActionTimeout(60000), new RecordItemIndex(4));
            repo.DlgMessageBox.LabelMeldungstextInfo.WaitForExists(60000);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (Text>'nicht vorhanden') on item 'DlgMessageBox.LabelMeldungstext'.", repo.DlgMessageBox.LabelMeldungstextInfo, new RecordItemIndex(5));
            Validate.AttributeContains(repo.DlgMessageBox.LabelMeldungstextInfo, "Text", "nicht vorhanden");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'DlgMessageBox.Button0' at Center.", repo.DlgMessageBox.Button0Info, new RecordItemIndex(6));
            repo.DlgMessageBox.Button0.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'F4' Press with focus on 'MdiCRM.DebNr'.", repo.MdiCRM.DebNrInfo, new RecordItemIndex(7));
            Keyboard.PrepareFocus(repo.MdiCRM.DebNr);
            Keyboard.Press(System.Windows.Forms.Keys.F4, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 50s to exist. Associated repository item: 'CCRM.DropDown'", repo.CCRM.DropDownInfo, new ActionTimeout(50000), new RecordItemIndex(8));
            repo.CCRM.DropDownInfo.WaitForExists(50000);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Down' Press.", new RecordItemIndex(9));
            Keyboard.Press(System.Windows.Forms.Keys.Down, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 1s.", new RecordItemIndex(10));
            Delay.Duration(1000, false);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Up' Press.", new RecordItemIndex(11));
            Keyboard.Press(System.Windows.Forms.Keys.Up, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 1s.", new RecordItemIndex(12));
            Delay.Duration(1000, false);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Enter' Press.", new RecordItemIndex(13));
            Keyboard.Press(System.Windows.Forms.Keys.Return, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 1s.", new RecordItemIndex(14));
            Delay.Duration(1000, false);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='20004900') on item 'MdiCRM.DebNr'.", repo.MdiCRM.DebNrInfo, new RecordItemIndex(15));
            Validate.AttributeEqual(repo.MdiCRM.DebNrInfo, "Text", "20004900");
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
