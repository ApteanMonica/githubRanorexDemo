///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace AEKOOE_B_KLAB_Kunden.Recordings
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Workplace_Ausfuehren_B_KLAB_K recording.
    /// </summary>
    [TestModule("5af9bc86-2c4b-4ed8-a36f-a9d36c1408c6", ModuleType.Recording, 1)]
    public partial class Workplace_Ausfuehren_B_KLAB_K : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::AEKOOE_B_KLAB_Kunden.AEKOOE_B_KLAB_KundenRepository repository.
        /// </summary>
        public static global::AEKOOE_B_KLAB_Kunden.AEKOOE_B_KLAB_KundenRepository repo = global::AEKOOE_B_KLAB_Kunden.AEKOOE_B_KLAB_KundenRepository.Instance;

        static Workplace_Ausfuehren_B_KLAB_K instance = new Workplace_Ausfuehren_B_KLAB_K();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Workplace_Ausfuehren_B_KLAB_K()
        {
            Mandant = "WFK";
            Programm_KL_K = "B_KLAB /KL=K";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Workplace_Ausfuehren_B_KLAB_K Instance
        {
            get { return instance; }
        }

#region Variables

        string _Mandant;

        /// <summary>
        /// Gets or sets the value of variable Mandant.
        /// </summary>
        [TestVariable("752d63af-4015-4a00-abf8-d5724c884df6")]
        public string Mandant
        {
            get { return _Mandant; }
            set { _Mandant = value; }
        }

        string _Programm_KL_K;

        /// <summary>
        /// Gets or sets the value of variable Programm_KL_K.
        /// </summary>
        [TestVariable("72ebf835-8704-4f05-a55a-4aa08b1cec66")]
        public string Programm_KL_K
        {
            get { return _Programm_KL_K; }
            set { _Programm_KL_K = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            // davor: Aufruf Workplace manuell mit Mandant WFK User RS_RANOREX Kw=rano mit aktivem Licenceservice; Programmaufruf mit Ausführen:
            Report.Log(ReportLevel.Info, "Section", "davor: Aufruf Workplace manuell mit Mandant WFK User RS_RANOREX Kw=rano mit aktivem Licenceservice; Programmaufruf mit Ausführen:", new RecordItemIndex(0));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'FormWorkplace.TitleBarWFKWohlfahrtskasse'.", repo.FormWorkplace.TitleBarWFKWohlfahrtskasseInfo, new RecordItemIndex(1));
            Validate.Exists(repo.FormWorkplace.TitleBarWFKWohlfahrtskasseInfo);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (Text>$Mandant) on item 'FormWorkplace.TitleBarWFKWohlfahrtskasse'.", repo.FormWorkplace.TitleBarWFKWohlfahrtskasseInfo, new RecordItemIndex(2));
            //Validate.AttributeContains(repo.FormWorkplace.TitleBarWFKWohlfahrtskasseInfo, "Text", Mandant);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FormWorkplace.TitleBarWFKWohlfahrtskasse' at Center.", repo.FormWorkplace.TitleBarWFKWohlfahrtskasseInfo, new RecordItemIndex(3));
            repo.FormWorkplace.TitleBarWFKWohlfahrtskasse.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Ctrl+R' Press.", new RecordItemIndex(4));
            Keyboard.Press(System.Windows.Forms.Keys.R | System.Windows.Forms.Keys.Control, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 1m to exist. Associated repository item: 'DlgAusfuehren.TitleBarWFKAusfuehren'", repo.DlgAusfuehren.TitleBarWFKAusfuehrenInfo, new ActionTimeout(60000), new RecordItemIndex(5));
            repo.DlgAusfuehren.TitleBarWFKAusfuehrenInfo.WaitForExists(60000);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (Text>'Ausführen') on item 'DlgAusfuehren.TitleBarWFKAusfuehren'.", repo.DlgAusfuehren.TitleBarWFKAusfuehrenInfo, new RecordItemIndex(6));
            Validate.AttributeContains(repo.DlgAusfuehren.TitleBarWFKAusfuehrenInfo, "Text", "Ausführen");
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left DoubleClick item 'DlgAusfuehren.Text1001' at Center.", repo.DlgAusfuehren.Text1001Info, new RecordItemIndex(7));
            //repo.DlgAusfuehren.Text1001.DoubleClick();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '@' with focus on 'DlgAusfuehren.Text1001'.", repo.DlgAusfuehren.Text1001Info, new RecordItemIndex(8));
            repo.DlgAusfuehren.Text1001.PressKeys("@");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Programm_KL_K'.", new RecordItemIndex(9));
            Keyboard.Press(Programm_KL_K);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{LControlKey down}'.", new RecordItemIndex(10));
            Keyboard.Press("{LControlKey down}");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'DlgAusfuehren.PbOk' at Center.", repo.DlgAusfuehren.PbOkInfo, new RecordItemIndex(11));
            repo.DlgAusfuehren.PbOk.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{LControlKey up}'.", new RecordItemIndex(12));
            Keyboard.Press("{LControlKey up}");
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 2m to exist. Associated repository item: 'FrmKlAb.TitleBarWFKKundenKonto'", repo.FrmKlAb.TitleBarWFKKundenKontoInfo, new ActionTimeout(120000), new RecordItemIndex(13));
            repo.FrmKlAb.TitleBarWFKKundenKontoInfo.WaitForExists(120000);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (Text>'Kunden-Konto') on item 'FrmKlAb.TitleBarWFKKundenKonto'.", repo.FrmKlAb.TitleBarWFKKundenKontoInfo, new RecordItemIndex(14));
            Validate.AttributeContains(repo.FrmKlAb.TitleBarWFKKundenKontoInfo, "Text", "Kunden-Konto");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (Text>$Mandant) on item 'FrmKlAb.TitleBarWFKKundenKonto'.", repo.FrmKlAb.TitleBarWFKKundenKontoInfo, new RecordItemIndex(15));
            Validate.AttributeContains(repo.FrmKlAb.TitleBarWFKKundenKontoInfo, "Text", Mandant);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
