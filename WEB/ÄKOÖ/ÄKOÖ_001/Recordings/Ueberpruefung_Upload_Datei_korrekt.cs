///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace AEKOOE_001.Recordings
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Ueberpruefung_Upload_Datei_korrekt recording.
    /// </summary>
    [TestModule("94eb5f37-32f8-47d7-94db-a4bf63b430e5", ModuleType.Recording, 1)]
    public partial class Ueberpruefung_Upload_Datei_korrekt : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::AEKOOE_001.AEKOOE_001Repository repository.
        /// </summary>
        public static global::AEKOOE_001.AEKOOE_001Repository repo = global::AEKOOE_001.AEKOOE_001Repository.Instance;

        static Ueberpruefung_Upload_Datei_korrekt instance = new Ueberpruefung_Upload_Datei_korrekt();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Ueberpruefung_Upload_Datei_korrekt()
        {
            ausgewaehlte_Testdatei = "Testdatei Antrag Krankgengeld.txt";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Ueberpruefung_Upload_Datei_korrekt Instance
        {
            get { return instance; }
        }

#region Variables

        string _ausgewaehlte_Testdatei;

        /// <summary>
        /// Gets or sets the value of variable ausgewaehlte_Testdatei.
        /// </summary>
        [TestVariable("8bbe3777-9968-405b-b7ce-0e631b07ae49")]
        public string ausgewaehlte_Testdatei
        {
            get { return _ausgewaehlte_Testdatei; }
            set { _ausgewaehlte_Testdatei = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText=$ausgewaehlte_Testdatei) on item 'Login.AKAT011RequestFormRow.Testdatei_Name_Testdatei'.", repo.Login.AKAT011RequestFormRow.Testdatei_Name_TestdateiInfo, new RecordItemIndex(0));
            Validate.AttributeEqual(repo.Login.AKAT011RequestFormRow.Testdatei_Name_TestdateiInfo, "InnerText", ausgewaehlte_Testdatei);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText='File(s) uploaded successfully.') on item 'Login.AKAT011RequestFormRow.FileSUploadedSuccessfully'.", repo.Login.AKAT011RequestFormRow.FileSUploadedSuccessfullyInfo, new RecordItemIndex(1));
            Validate.AttributeEqual(repo.Login.AKAT011RequestFormRow.FileSUploadedSuccessfullyInfo, "InnerText", "File(s) uploaded successfully.");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'Testdatei zur Krankmeldung{Tab}' with focus on 'Login.AKAT011RequestFormRow.Text_Bezeichnung_Uploadfile'.", repo.Login.AKAT011RequestFormRow.Text_Bezeichnung_UploadfileInfo, new RecordItemIndex(2));
            repo.Login.AKAT011RequestFormRow.Text_Bezeichnung_Uploadfile.PressKeys("Testdatei zur Krankmeldung{Tab}");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Login.AKAT011RequestFormRow.DokumenttypWaehlen' at Center.", repo.Login.AKAT011RequestFormRow.DokumenttypWaehlenInfo, new RecordItemIndex(3));
            repo.Login.AKAT011RequestFormRow.DokumenttypWaehlen.Click();
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Down}{Return}' with focus on 'Login.AKAT011RequestFormRow.DokumenttypWaehlen'.", repo.Login.AKAT011RequestFormRow.DokumenttypWaehlenInfo, new RecordItemIndex(4));
            repo.Login.AKAT011RequestFormRow.DokumenttypWaehlen.PressKeys("{Down}{Return}");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue='Testdatei zur Krankmeldung') on item 'Login.AKAT011RequestFormRow.Text_Bezeichnung_Uploadfile'.", repo.Login.AKAT011RequestFormRow.Text_Bezeichnung_UploadfileInfo, new RecordItemIndex(5));
            Validate.AttributeEqual(repo.Login.AKAT011RequestFormRow.Text_Bezeichnung_UploadfileInfo, "TagValue", "Testdatei zur Krankmeldung");
            
            // hier muss noch eine Lösung für die Validierung gefunden werde
            Report.Log(ReportLevel.Info, "Validation", "hier muss noch eine Lösung für die Validierung gefunden werde\r\nValidating AttributeEqual (InnerText='Arbeitsunfähigkeitsmeldung') on item 'Login.AKAT011RequestFormRow.DokumenttypWaehlen'.", repo.Login.AKAT011RequestFormRow.DokumenttypWaehlenInfo, new RecordItemIndex(6));
            Validate.AttributeEqual(repo.Login.AKAT011RequestFormRow.DokumenttypWaehlenInfo, "InnerText", "Arbeitsunfähigkeitsmeldung");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Login.AKAT011RequestFormRow.Speichern' at Center.", repo.Login.AKAT011RequestFormRow.SpeichernInfo, new RecordItemIndex(7));
            repo.Login.AKAT011RequestFormRow.Speichern.Click();
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
