///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace AEKOOE_001.Recordings
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The WEB_LOGIN recording.
    /// </summary>
    [TestModule("e156141f-9cd2-40b2-9a46-2a5e147ea068", ModuleType.Recording, 1)]
    public partial class WEB_LOGIN : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::AEKOOE_001.AEKOOE_001Repository repository.
        /// </summary>
        public static global::AEKOOE_001.AEKOOE_001Repository repo = global::AEKOOE_001.AEKOOE_001Repository.Instance;

        static WEB_LOGIN instance = new WEB_LOGIN();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public WEB_LOGIN()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static WEB_LOGIN Instance
        {
            get { return instance; }
        }

#region Variables

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Wait", "Waiting 4m to exist. Associated repository item: 'Login.PanelHeading'", repo.Login.PanelHeadingInfo, new ActionTimeout(240000), new RecordItemIndex(0));
            repo.Login.PanelHeadingInfo.WaitForExists(240000);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText='') on item 'Login.PanelHeading'.", repo.Login.PanelHeadingInfo, new RecordItemIndex(1));
            Validate.AttributeEqual(repo.Login.PanelHeadingInfo, "InnerText", "");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'rs{Tab}' with focus on 'Login.Text_benutzer'.", repo.Login.Text_benutzerInfo, new RecordItemIndex(2));
            repo.Login.Text_benutzer.PressKeys("rs{Tab}");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'rsc{Tab}' with focus on 'Login.Password'.", repo.Login.PasswordInfo, new RecordItemIndex(3));
            repo.Login.Password.PressKeys("rsc{Tab}");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'k.aeko{Tab}' with focus on 'Login.LoginDataDb'.", repo.Login.LoginDataDbInfo, new RecordItemIndex(4));
            repo.Login.LoginDataDb.PressKeys("k.aeko{Tab}");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'WFK{Tab}' with focus on 'Login.LoginDataFirmnr'.", repo.Login.LoginDataFirmnrInfo, new RecordItemIndex(5));
            repo.Login.LoginDataFirmnr.PressKeys("WFK{Tab}");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Login.Anmelden' at Center.", repo.Login.AnmeldenInfo, new RecordItemIndex(6));
            repo.Login.Anmelden.Click();
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 2m to exist. Associated repository item: 'Login.Card_Button_Stammdaten'", repo.Login.Card_Button_StammdatenInfo, new ActionTimeout(120000), new RecordItemIndex(7));
            repo.Login.Card_Button_StammdatenInfo.WaitForExists(120000);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
